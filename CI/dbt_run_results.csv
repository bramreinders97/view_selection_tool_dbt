model_execution_id,unique_id,invocation_id,generated_at,created_at,name,message,status,resource_type,execution_time,execute_started_at,execute_completed_at,compile_started_at,compile_completed_at,rows_affected,full_refresh,compiled_code,failures,query_id,thread_id,materialization,adapter_response
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,data_monitoring_metrics,SELECT 0,success,model,2.219628095626831,2024-02-14T12:14:41.998339Z,2024-02-14T12:14:43.735969Z,2024-02-14T12:14:41.729340Z,2024-02-14T12:14:41.866370Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,stg_accounts,CREATE VIEW,success,model,2.2466282844543457,2024-02-14T12:14:41.868339Z,2024-02-14T12:14:43.783970Z,2024-02-14T12:14:41.681341Z,2024-02-14T12:14:41.858338Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    LIMIT 20

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,stg_groups,CREATE VIEW,success,model,2.3466298580169678,2024-02-14T12:14:42.080342Z,2024-02-14T12:14:43.963973Z,2024-02-14T12:14:41.689338Z,2024-02-14T12:14:41.889340Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 10

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,stg_transactions_1,CREATE VIEW,success,model,2.3706302642822266,2024-02-14T12:14:42.098342Z,2024-02-14T12:14:43.986970Z,2024-02-14T12:14:41.694337Z,2024-02-14T12:14:41.901338Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,stg_transactions_4,CREATE VIEW,success,model,2.37162709236145,2024-02-14T12:14:42.136338Z,2024-02-14T12:14:43.990967Z,2024-02-14T12:14:41.719340Z,2024-02-14T12:14:41.940341Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,stg_transactions_2,CREATE VIEW,success,model,2.381629467010498,2024-02-14T12:14:42.111341Z,2024-02-14T12:14:43.994971Z,2024-02-14T12:14:41.702337Z,2024-02-14T12:14:41.912338Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,stg_transactions_3,CREATE VIEW,success,model,2.3906378746032715,2024-02-14T12:14:42.124338Z,2024-02-14T12:14:44.006969Z,2024-02-14T12:14:41.710338Z,2024-02-14T12:14:41.924338Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.dbt_invocations,model.elementary.dbt_invocations,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,dbt_invocations,SELECT 0,success,model,5.81015682220459,2024-02-14T12:14:45.202123Z,2024-02-14T12:14:49.371155Z,2024-02-14T12:14:44.250969Z,2024-02-14T12:14:44.697007Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.dbt_run_results,model.elementary.dbt_run_results,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,dbt_run_results,SELECT 0,success,model,5.972189903259277,2024-02-14T12:14:46.376561Z,2024-02-14T12:14:50.431191Z,2024-02-14T12:14:45.539115Z,2024-02-14T12:14:45.903116Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.dbt_exposures,model.elementary.dbt_exposures,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,dbt_exposures,SELECT 0,success,model,9.092511177062988,2024-02-14T12:14:44.990596Z,2024-02-14T12:14:52.558479Z,2024-02-14T12:14:44.079970Z,2024-02-14T12:14:44.522971Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.dbt_metrics,model.elementary.dbt_metrics,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,dbt_metrics,SELECT 0,success,model,9.320765495300293,2024-02-14T12:14:45.970635Z,2024-02-14T12:14:53.438479Z,2024-02-14T12:14:45.072125Z,2024-02-14T12:14:45.447123Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.dbt_seeds,model.elementary.dbt_seeds,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,dbt_seeds,SELECT 0,success,model,9.27917194366455,2024-02-14T12:14:46.464990Z,2024-02-14T12:14:53.869254Z,2024-02-14T12:14:45.657115Z,2024-02-14T12:14:45.950114Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,dbt_snapshots,SELECT 0,success,model,9.26417326927185,2024-02-14T12:14:46.548023Z,2024-02-14T12:14:53.965772Z,2024-02-14T12:14:45.700115Z,2024-02-14T12:14:46.003637Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.dbt_columns,model.elementary.dbt_columns,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,dbt_columns,SELECT 0,success,model,13.18118667602539,2024-02-14T12:14:41.930339Z,2024-02-14T12:14:54.772529Z,2024-02-14T12:14:41.761338Z,2024-02-14T12:14:41.863340Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,dbt_source_freshness_results,SELECT 0,success,model,3.814291000366211,2024-02-14T12:14:52.706482Z,2024-02-14T12:14:54.796525Z,2024-02-14T12:14:51.733483Z,2024-02-14T12:14:52.210484Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-1 (worker),incremental,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.dbt_models,model.elementary.dbt_models,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,dbt_models,SELECT 0,success,model,10.677533388137817,2024-02-14T12:14:46.315208Z,2024-02-14T12:14:55.529531Z,2024-02-14T12:14:45.430128Z,2024-02-14T12:14:45.843113Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
0489b689-9288-46a4-a32c-73a62a795040.model.view_selection_tool.int_referenced_models,model.view_selection_tool.int_referenced_models,0489b689-9288-46a4-a32c-73a62a795040,2024-03-06 12:30:58,2024-03-06 12:30:59.143531,int_referenced_models,,skipped,model,0,,,,,,false,,,,Thread-5 (worker),view,{}
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.elementary_test_results,model.elementary.elementary_test_results,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,elementary_test_results,SELECT 0,success,model,1.2002274990081787,2024-02-14T12:14:54.751525Z,2024-02-14T12:14:55.653526Z,2024-02-14T12:14:54.511299Z,2024-02-14T12:14:54.628528Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-2 (worker),incremental,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,schema_columns_snapshot,SELECT 0,success,model,1.1069984436035156,2024-02-14T12:14:54.832525Z,2024-02-14T12:14:55.666526Z,2024-02-14T12:14:54.711525Z,2024-02-14T12:14:54.766526Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-5 (worker),incremental,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.dbt_tests,model.elementary.dbt_tests,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,dbt_tests,SELECT 0,success,model,1.6093394756317139,2024-02-14T12:14:54.549303Z,2024-02-14T12:14:55.820526Z,2024-02-14T12:14:54.401299Z,2024-02-14T12:14:54.490301Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.metadata,model.elementary.metadata,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,metadata,SELECT 1,success,model,1.3923368453979492,2024-02-14T12:14:54.798529Z,2024-02-14T12:14:55.825524Z,2024-02-14T12:14:54.629529Z,2024-02-14T12:14:54.737527Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-4 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.dbt_sources,model.elementary.dbt_sources,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,dbt_sources,SELECT 0,success,model,3.4661569595336914,2024-02-14T12:14:53.817256Z,2024-02-14T12:14:55.918637Z,2024-02-14T12:14:53.028481Z,2024-02-14T12:14:53.355480Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,metrics_anomaly_score,CREATE VIEW,success,model,1.1381094455718994,2024-02-14T12:14:55.534527Z,2024-02-14T12:14:56.011636Z,2024-02-14T12:14:55.303526Z,2024-02-14T12:14:55.491527Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.monitors_runs,model.elementary.monitors_runs,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,monitors_runs,CREATE VIEW,success,model,0.9891097545623779,2024-02-14T12:14:55.555525Z,2024-02-14T12:14:56.016640Z,2024-02-14T12:14:55.475533Z,2024-02-14T12:14:55.508525Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,int_accounts_and_groups_joined,CREATE VIEW,success,model,0.8460910320281982,2024-02-14T12:14:55.774528Z,2024-02-14T12:14:56.326469Z,2024-02-14T12:14:55.705527Z,2024-02-14T12:14:55.740524Z,-1,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
    ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
0489b689-9288-46a4-a32c-73a62a795040.model.view_selection_tool.model_dependencies,model.view_selection_tool.model_dependencies,0489b689-9288-46a4-a32c-73a62a795040,2024-03-06 12:30:58,2024-03-06 12:30:59.143531,model_dependencies,,skipped,model,0,,,,,,false,,,,Thread-1 (worker),table,{}
eeb13437-e15d-430a-970b-8b52f5e995dd.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,int_union_of_transactions,CREATE VIEW,success,model,0.8190982341766357,2024-02-14T12:14:55.924640Z,2024-02-14T12:14:56.576623Z,2024-02-14T12:14:55.830526Z,2024-02-14T12:14:55.890637Z,-1,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.job_run_results,model.elementary.job_run_results,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,job_run_results,CREATE VIEW,success,model,0.8060996532440186,2024-02-14T12:14:55.958636Z,2024-02-14T12:14:56.580619Z,2024-02-14T12:14:55.844636Z,2024-02-14T12:14:55.903637Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,snapshot_run_results,CREATE VIEW,success,model,0.6989920139312744,2024-02-14T12:14:56.132636Z,2024-02-14T12:14:56.677620Z,2024-02-14T12:14:56.041636Z,2024-02-14T12:14:56.091636Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.model_run_results,model.elementary.model_run_results,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,model_run_results,CREATE VIEW,success,model,0.6979885101318359,2024-02-14T12:14:56.146635Z,2024-02-14T12:14:56.681622Z,2024-02-14T12:14:56.056637Z,2024-02-14T12:14:56.094636Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,alerts_anomaly_detection,CREATE VIEW,success,model,0.6403801441192627,2024-02-14T12:14:56.199635Z,2024-02-14T12:14:56.714365Z,2024-02-14T12:14:56.111643Z,2024-02-14T12:14:56.168637Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
0489b689-9288-46a4-a32c-73a62a795040.model.view_selection_tool.all_models_plus_code,model.view_selection_tool.all_models_plus_code,0489b689-9288-46a4-a32c-73a62a795040,2024-03-06 12:30:58,2024-03-06 12:30:59.143531,all_models_plus_code,,skipped,model,0,,,,,,false,,,,Thread-4 (worker),table,{}
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,alerts_dbt_tests,CREATE VIEW,success,model,0.5454907417297363,2024-02-14T12:14:56.331466Z,2024-02-14T12:14:56.738128Z,2024-02-14T12:14:56.260465Z,2024-02-14T12:14:56.305468Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,alerts_schema_changes,CREATE VIEW,success,model,0.7891261577606201,2024-02-14T12:14:57.832016Z,2024-02-14T12:14:58.400132Z,2024-02-14T12:14:57.676018Z,2024-02-14T12:14:57.716014Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,alerts_dbt_source_freshness,CREATE VIEW,success,model,0.7841272354125977,2024-02-14T12:14:57.874016Z,2024-02-14T12:14:58.418133Z,2024-02-14T12:14:57.718013Z,2024-02-14T12:14:57.812016Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,dbt_artifacts_hashes,CREATE VIEW,success,model,0.7871203422546387,2024-02-14T12:14:57.890308Z,2024-02-14T12:14:58.428136Z,2024-02-14T12:14:57.733012Z,2024-02-14T12:14:57.830015Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,int_transactions_and_accounts_and_groups_joined,CREATE VIEW,success,model,0.7531213760375977,2024-02-14T12:14:57.934404Z,2024-02-14T12:14:58.435138Z,2024-02-14T12:14:57.805014Z,2024-02-14T12:14:57.850014Z,-1,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
    ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:18,2024-02-14 12:16:19.131151,stg_groups,CREATE VIEW,success,model,0.780001163482666,2024-02-14T12:16:02.578802Z,2024-02-14T12:16:03.135804Z,2024-02-14T12:16:02.416803Z,2024-02-14T12:16:02.493806Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 10

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,anomaly_threshold_sensitivity,CREATE VIEW,success,model,0.7741234302520752,2024-02-14T12:14:57.914801Z,2024-02-14T12:14:58.438132Z,2024-02-14T12:14:57.787014Z,2024-02-14T12:14:57.847015Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.test_result_rows,model.elementary.test_result_rows,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,test_result_rows,SELECT 0,success,model,0.8491199016571045,2024-02-14T12:14:57.852015Z,2024-02-14T12:14:58.482133Z,2024-02-14T12:14:57.694013Z,2024-02-14T12:14:57.742013Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,alerts_dbt_models,CREATE VIEW,success,model,0.802119255065918,2024-02-14T12:14:57.951405Z,2024-02-14T12:14:58.491136Z,2024-02-14T12:14:57.814015Z,2024-02-14T12:14:57.868016Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.information_schema_columns,model.elementary.information_schema_columns,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,information_schema_columns,CREATE VIEW,success,model,0.847130537033081,2024-02-14T12:14:58.079543Z,2024-02-14T12:14:58.526137Z,2024-02-14T12:14:57.743015Z,2024-02-14T12:14:58.054819Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,int_grouped_on_group_id,CREATE VIEW,success,model,0.16081857681274414,2024-02-14T12:14:58.558136Z,2024-02-14T12:14:58.683949Z,2024-02-14T12:14:58.539139Z,2024-02-14T12:14:58.551136Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        SUM(amount) AS total_amount,
        'fixed_value' AS account_description

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.elementary.enriched_columns,model.elementary.enriched_columns,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,enriched_columns,CREATE VIEW,success,model,0.2608182430267334,2024-02-14T12:14:58.592957Z,2024-02-14T12:14:58.821949Z,2024-02-14T12:14:58.575135Z,2024-02-14T12:14:58.589329Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eeb13437-e15d-430a-970b-8b52f5e995dd.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,eeb13437-e15d-430a-970b-8b52f5e995dd,2024-02-14 12:15:00,2024-02-14 12:15:00.621783,grouped_transactions_unioned_with_original,SELECT 0,success,model,0.1770031452178955,2024-02-14T12:14:58.712950Z,2024-02-14T12:14:58.870951Z,2024-02-14T12:14:58.700950Z,2024-02-14T12:14:58.710949Z,0,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-2 (worker),table,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,stg_transactions_1,CREATE VIEW,success,model,0.8589990139007568,2024-02-14T12:16:02.587806Z,2024-02-14T12:16:03.196806Z,2024-02-14T12:16:02.421802Z,2024-02-14T12:16:02.494807Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,stg_accounts,CREATE VIEW,success,model,0.8669993877410889,2024-02-14T12:16:02.509805Z,2024-02-14T12:16:03.199803Z,2024-02-14T12:16:02.409805Z,2024-02-14T12:16:02.492805Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    LIMIT 20

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,stg_transactions_2,CREATE VIEW,success,model,0.8630008697509766,2024-02-14T12:16:02.597804Z,2024-02-14T12:16:03.226804Z,2024-02-14T12:16:02.426803Z,2024-02-14T12:16:02.496805Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,stg_transactions_4,CREATE VIEW,success,model,0.86899733543396,2024-02-14T12:16:02.612804Z,2024-02-14T12:16:03.236805Z,2024-02-14T12:16:02.436803Z,2024-02-14T12:16:02.499808Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,stg_transactions_3,CREATE VIEW,success,model,0.8740038871765137,2024-02-14T12:16:02.605805Z,2024-02-14T12:16:03.238806Z,2024-02-14T12:16:02.431802Z,2024-02-14T12:16:02.498805Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,data_monitoring_metrics,INSERT 0 0,success,model,2.3215699195861816,2024-02-14T12:16:02.619804Z,2024-02-14T12:16:04.660374Z,2024-02-14T12:16:02.441803Z,2024-02-14T12:16:02.500804Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.dbt_invocations,model.elementary.dbt_invocations,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,dbt_invocations,INSERT 0 0,success,model,6.773773193359375,2024-02-14T12:16:04.609374Z,2024-02-14T12:16:10.107281Z,2024-02-14T12:16:04.001074Z,2024-02-14T12:16:04.353075Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.dbt_run_results,model.elementary.dbt_run_results,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,dbt_run_results,INSERT 0 0,success,model,6.538250923156738,2024-02-14T12:16:04.686375Z,2024-02-14T12:16:10.404322Z,2024-02-14T12:16:04.421070Z,2024-02-14T12:16:04.565596Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.metadata,model.elementary.metadata,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,metadata,SELECT 1,success,model,1.6031556129455566,2024-02-14T12:16:12.801569Z,2024-02-14T12:16:14.192720Z,2024-02-14T12:16:12.726580Z,2024-02-14T12:16:12.751568Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-5 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.dbt_exposures,model.elementary.dbt_exposures,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,dbt_exposures,INSERT 0 0,success,model,8.421708345413208,2024-02-14T12:16:04.064072Z,2024-02-14T12:16:11.264425Z,2024-02-14T12:16:03.345808Z,2024-02-14T12:16:03.601539Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.dbt_metrics,model.elementary.dbt_metrics,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,dbt_metrics,INSERT 0 0,success,model,8.819502353668213,2024-02-14T12:16:04.622379Z,2024-02-14T12:16:11.958958Z,2024-02-14T12:16:04.133072Z,2024-02-14T12:16:04.479089Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.dbt_seeds,model.elementary.dbt_seeds,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,dbt_seeds,INSERT 0 0,success,model,8.581499576568604,2024-02-14T12:16:04.699374Z,2024-02-14T12:16:12.325545Z,2024-02-14T12:16:04.491071Z,2024-02-14T12:16:04.600377Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.dbt_columns,model.elementary.dbt_columns,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,dbt_columns,INSERT 0 0,success,model,10.21977424621582,2024-02-14T12:16:02.655803Z,2024-02-14T12:16:12.545568Z,2024-02-14T12:16:02.471803Z,2024-02-14T12:16:02.502805Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,dbt_snapshots,INSERT 0 0,success,model,7.8851318359375,2024-02-14T12:16:06.090114Z,2024-02-14T12:16:12.760568Z,2024-02-14T12:16:05.370549Z,2024-02-14T12:16:05.637580Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.dbt_models,model.elementary.dbt_models,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,dbt_models,INSERT 0 0,success,model,9.356497526168823,2024-02-14T12:16:04.667378Z,2024-02-14T12:16:13.060569Z,2024-02-14T12:16:04.288072Z,2024-02-14T12:16:04.559595Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,dbt_source_freshness_results,INSERT 0 0,success,model,2.9957709312438965,2024-02-14T12:16:11.453428Z,2024-02-14T12:16:13.400091Z,2024-02-14T12:16:10.799320Z,2024-02-14T12:16:11.054323Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
0489b689-9288-46a4-a32c-73a62a795040.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,0489b689-9288-46a4-a32c-73a62a795040,2024-03-06 12:30:58,2024-03-06 12:30:59.143531,int_only_materialized_models,,skipped,model,0,,,,,,false,,,,Thread-7 (worker),view,{}
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,int_accounts_and_groups_joined,CREATE VIEW,success,model,1.3051562309265137,2024-02-14T12:16:13.115092Z,2024-02-14T12:16:14.248723Z,2024-02-14T12:16:13.028568Z,2024-02-14T12:16:13.062568Z,-1,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
    ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.elementary_test_results,model.elementary.elementary_test_results,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,elementary_test_results,INSERT 0 0,success,model,1.7361438274383545,2024-02-14T12:16:12.768568Z,2024-02-14T12:16:14.308719Z,2024-02-14T12:16:12.663567Z,2024-02-14T12:16:12.724571Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,schema_columns_snapshot,INSERT 0 0,success,model,1.6781527996063232,2024-02-14T12:16:12.937569Z,2024-02-14T12:16:14.392721Z,2024-02-14T12:16:12.858565Z,2024-02-14T12:16:12.904569Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,int_union_of_transactions,CREATE VIEW,success,model,1.2776308059692383,2024-02-14T12:16:13.474098Z,2024-02-14T12:16:14.471723Z,2024-02-14T12:16:13.380092Z,2024-02-14T12:16:13.434088Z,-1,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.dbt_tests,model.elementary.dbt_tests,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,dbt_tests,INSERT 0 0,success,model,2.0461573600769043,2024-02-14T12:16:12.647569Z,2024-02-14T12:16:14.500720Z,2024-02-14T12:16:12.549569Z,2024-02-14T12:16:12.614585Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.dbt_sources,model.elementary.dbt_sources,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,dbt_sources,INSERT 0 0,success,model,3.47273588180542,2024-02-14T12:16:12.342545Z,2024-02-14T12:16:14.618068Z,2024-02-14T12:16:11.601425Z,2024-02-14T12:16:11.913961Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,metrics_anomaly_score,CREATE VIEW,success,model,1.2143573760986328,2024-02-14T12:16:14.221722Z,2024-02-14T12:16:14.848082Z,2024-02-14T12:16:13.986719Z,2024-02-14T12:16:14.185719Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
0489b689-9288-46a4-a32c-73a62a795040.model.view_selection_tool.destination_nodes,model.view_selection_tool.destination_nodes,0489b689-9288-46a4-a32c-73a62a795040,2024-03-06 12:30:58,2024-03-06 12:30:59.143531,destination_nodes,,skipped,model,0,,,,,,false,,,,Thread-6 (worker),table,{}
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.monitors_runs,model.elementary.monitors_runs,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,monitors_runs,CREATE VIEW,success,model,0.730353832244873,2024-02-14T12:16:14.456719Z,2024-02-14T12:16:15.038069Z,2024-02-14T12:16:14.372719Z,2024-02-14T12:16:14.398724Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.job_run_results,model.elementary.job_run_results,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,job_run_results,CREATE VIEW,success,model,0.7203512191772461,2024-02-14T12:16:14.503722Z,2024-02-14T12:16:15.095073Z,2024-02-14T12:16:14.415719Z,2024-02-14T12:16:14.472720Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,snapshot_run_results,CREATE VIEW,success,model,0.665351390838623,2024-02-14T12:16:14.590071Z,2024-02-14T12:16:15.133073Z,2024-02-14T12:16:14.518720Z,2024-02-14T12:16:14.557724Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.model_run_results,model.elementary.model_run_results,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,model_run_results,CREATE VIEW,success,model,0.6033573150634766,2024-02-14T12:16:14.712067Z,2024-02-14T12:16:15.163070Z,2024-02-14T12:16:14.633072Z,2024-02-14T12:16:14.668069Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,alerts_anomaly_detection,CREATE VIEW,success,model,0.5269985198974609,2024-02-14T12:16:14.790071Z,2024-02-14T12:16:15.183071Z,2024-02-14T12:16:14.685082Z,2024-02-14T12:16:14.766070Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,int_transactions_and_accounts_and_groups_joined,SELECT 0,success,model,0.9889166355133057,2024-02-14T12:16:16.248503Z,2024-02-14T12:16:17.009012Z,2024-02-14T12:16:16.120104Z,2024-02-14T12:16:16.194103Z,0,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
    ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-5 (worker),table,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,anomaly_threshold_sensitivity,CREATE VIEW,success,model,0.8469104766845703,2024-02-14T12:16:16.298019Z,2024-02-14T12:16:16.892013Z,2024-02-14T12:16:16.182100Z,2024-02-14T12:16:16.217103Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,alerts_dbt_tests,CREATE VIEW,success,model,0.9329097270965576,2024-02-14T12:16:16.198103Z,2024-02-14T12:16:16.928014Z,2024-02-14T12:16:16.053102Z,2024-02-14T12:16:16.103139Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,dbt_artifacts_hashes,CREATE VIEW,success,model,0.8989148139953613,2024-02-14T12:16:16.286025Z,2024-02-14T12:16:16.935012Z,2024-02-14T12:16:16.141101Z,2024-02-14T12:16:16.213101Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,alerts_dbt_source_freshness,CREATE VIEW,success,model,0.918907880783081,2024-02-14T12:16:16.267020Z,2024-02-14T12:16:16.938011Z,2024-02-14T12:16:16.130103Z,2024-02-14T12:16:16.197102Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,alerts_schema_changes,CREATE VIEW,success,model,0.9429144859313965,2024-02-14T12:16:16.218103Z,2024-02-14T12:16:16.952010Z,2024-02-14T12:16:16.076107Z,2024-02-14T12:16:16.146102Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.information_schema_columns,model.elementary.information_schema_columns,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,information_schema_columns,CREATE VIEW,success,model,0.9969122409820557,2024-02-14T12:16:16.546102Z,2024-02-14T12:16:17.059012Z,2024-02-14T12:16:16.152102Z,2024-02-14T12:16:16.520096Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.test_result_rows,model.elementary.test_result_rows,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,test_result_rows,INSERT 0 0,success,model,1.0929079055786133,2024-02-14T12:16:16.229100Z,2024-02-14T12:16:17.124013Z,2024-02-14T12:16:16.097109Z,2024-02-14T12:16:16.176101Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,alerts_dbt_models,CREATE VIEW,success,model,0.3060030937194824,2024-02-14T12:16:17.078013Z,2024-02-14T12:16:17.302012Z,2024-02-14T12:16:17.037011Z,2024-02-14T12:16:17.062015Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,int_grouped_on_group_id,CREATE VIEW,success,model,0.28699731826782227,2024-02-14T12:16:17.160014Z,2024-02-14T12:16:17.367013Z,2024-02-14T12:16:17.109013Z,2024-02-14T12:16:17.133011Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        SUM(amount) AS total_amount,
        'fixed_value' AS account_description

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.elementary.enriched_columns,model.elementary.enriched_columns,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,enriched_columns,CREATE VIEW,success,model,0.27758240699768066,2024-02-14T12:16:17.194014Z,2024-02-14T12:16:17.399591Z,2024-02-14T12:16:17.145014Z,2024-02-14T12:16:17.184013Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7076df6c-fdec-4654-bde3-33ad3b78e1b5.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,7076df6c-fdec-4654-bde3-33ad3b78e1b5,2024-02-14 12:16:19,2024-02-14 12:16:19.131151,grouped_transactions_unioned_with_original,SELECT 0,success,model,0.1525430679321289,2024-02-14T12:16:17.426590Z,2024-02-14T12:16:17.549128Z,2024-02-14T12:16:17.411590Z,2024-02-14T12:16:17.423589Z,0,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-5 (worker),table,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
6480869e-601e-4e75-95ce-846a06a955ab.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,stg_accounts,CREATE VIEW,success,model,0.9013898372650146,2024-02-14T12:17:42.145720Z,2024-02-14T12:17:42.883101Z,2024-02-14T12:17:42.030727Z,2024-02-14T12:17:42.123722Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    LIMIT 20

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6480869e-601e-4e75-95ce-846a06a955ab.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,stg_groups,CREATE VIEW,success,model,0.9823863506317139,2024-02-14T12:17:42.204719Z,2024-02-14T12:17:42.914105Z,2024-02-14T12:17:42.036721Z,2024-02-14T12:17:42.125721Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 10

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
0489b689-9288-46a4-a32c-73a62a795040.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,0489b689-9288-46a4-a32c-73a62a795040,2024-03-06 12:30:58,2024-03-06 12:30:59.143531,int_include_monitoring_id,,skipped,model,0,,,,,,false,,,,Thread-8 (worker),view,{}
6480869e-601e-4e75-95ce-846a06a955ab.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,stg_transactions_1,CREATE VIEW,success,model,0.996387243270874,2024-02-14T12:17:42.228718Z,2024-02-14T12:17:42.945103Z,2024-02-14T12:17:42.042724Z,2024-02-14T12:17:42.127721Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6480869e-601e-4e75-95ce-846a06a955ab.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,stg_transactions_4,CREATE VIEW,success,model,0.9923896789550781,2024-02-14T12:17:42.252723Z,2024-02-14T12:17:42.948101Z,2024-02-14T12:17:42.064719Z,2024-02-14T12:17:42.132723Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6480869e-601e-4e75-95ce-846a06a955ab.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,stg_transactions_2,CREATE VIEW,success,model,1.000377893447876,2024-02-14T12:17:42.236724Z,2024-02-14T12:17:42.952103Z,2024-02-14T12:17:42.052721Z,2024-02-14T12:17:42.129724Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6480869e-601e-4e75-95ce-846a06a955ab.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,stg_transactions_3,CREATE VIEW,success,model,1.0003843307495117,2024-02-14T12:17:42.244723Z,2024-02-14T12:17:42.954100Z,2024-02-14T12:17:42.058719Z,2024-02-14T12:17:42.131724Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,data_monitoring_metrics,INSERT 0 0,success,model,2.6302402019500732,2024-02-14T12:17:42.260721Z,2024-02-14T12:17:44.514331Z,2024-02-14T12:17:42.073718Z,2024-02-14T12:17:42.134722Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.dbt_invocations,model.elementary.dbt_invocations,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,dbt_invocations,INSERT 0 0,success,model,7.602921962738037,2024-02-14T12:17:44.373329Z,2024-02-14T12:17:50.331988Z,2024-02-14T12:17:43.566130Z,2024-02-14T12:17:43.846330Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.dbt_run_results,model.elementary.dbt_run_results,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,dbt_run_results,INSERT 0 0,success,model,7.5648932456970215,2024-02-14T12:17:44.593956Z,2024-02-14T12:17:50.608021Z,2024-02-14T12:17:44.012328Z,2024-02-14T12:17:44.357329Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.dbt_exposures,model.elementary.dbt_exposures,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,dbt_exposures,INSERT 0 0,success,model,10.43152642250061,2024-02-14T12:17:43.859330Z,2024-02-14T12:17:52.917634Z,2024-02-14T12:17:43.175105Z,2024-02-14T12:17:43.390127Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
0489b689-9288-46a4-a32c-73a62a795040.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,0489b689-9288-46a4-a32c-73a62a795040,2024-03-06 12:30:58,2024-03-06 12:30:59.143531,int_maintenance_fractions,,skipped,model,0,,,,,,false,,,,Thread-5 (worker),view,{}
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.dbt_metrics,model.elementary.dbt_metrics,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,dbt_metrics,INSERT 0 0,success,model,10.45235300064087,2024-02-14T12:17:44.550329Z,2024-02-14T12:17:53.495627Z,2024-02-14T12:17:43.909329Z,2024-02-14T12:17:44.278330Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.dbt_seeds,model.elementary.dbt_seeds,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,dbt_seeds,INSERT 0 0,success,model,10.329358339309692,2024-02-14T12:17:44.609957Z,2024-02-14T12:17:53.598482Z,2024-02-14T12:17:44.104329Z,2024-02-14T12:17:44.466331Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.dbt_columns,model.elementary.dbt_columns,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,dbt_columns,INSERT 0 0,success,model,12.177348375320435,2024-02-14T12:17:42.287720Z,2024-02-14T12:17:54.108544Z,2024-02-14T12:17:42.099720Z,2024-02-14T12:17:42.137720Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,dbt_snapshots,INSERT 0 0,success,model,9.42011284828186,2024-02-14T12:17:45.845858Z,2024-02-14T12:17:54.127074Z,2024-02-14T12:17:44.982957Z,2024-02-14T12:17:45.296328Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.dbt_models,model.elementary.dbt_models,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,dbt_models,INSERT 0 0,success,model,11.054949760437012,2024-02-14T12:17:44.572332Z,2024-02-14T12:17:54.447068Z,2024-02-14T12:17:43.936329Z,2024-02-14T12:17:44.323329Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,dbt_source_freshness_results,INSERT 0 0,success,model,2.87762713432312,2024-02-14T12:17:53.204630Z,2024-02-14T12:17:54.867729Z,2024-02-14T12:17:52.515108Z,2024-02-14T12:17:52.800632Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.metadata,model.elementary.metadata,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,metadata,SELECT 1,success,model,1.4301910400390625,2024-02-14T12:17:54.161072Z,2024-02-14T12:17:54.937730Z,2024-02-14T12:17:54.064542Z,2024-02-14T12:17:54.097544Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-5 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,stg_transactions_2,CREATE VIEW,success,model,1.1690316200256348,2024-02-14T12:52:23.003010Z,2024-02-14T12:52:23.693044Z,2024-02-14T12:52:22.839008Z,2024-02-14T12:52:22.908011Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6480869e-601e-4e75-95ce-846a06a955ab.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,int_accounts_and_groups_joined,SELECT 0,success,model,1.4291419982910156,2024-02-14T12:17:54.485071Z,2024-02-14T12:17:55.686215Z,2024-02-14T12:17:54.396072Z,2024-02-14T12:17:54.422072Z,0,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
    ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-7 (worker),table,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.elementary_test_results,model.elementary.elementary_test_results,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,elementary_test_results,INSERT 0 0,success,model,1.76068115234375,2024-02-14T12:17:54.141071Z,2024-02-14T12:17:55.703217Z,2024-02-14T12:17:54.022539Z,2024-02-14T12:17:54.095542Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
6480869e-601e-4e75-95ce-846a06a955ab.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,int_union_of_transactions,CREATE VIEW,success,model,1.2751233577728271,2024-02-14T12:17:54.816731Z,2024-02-14T12:17:55.853846Z,2024-02-14T12:17:54.744737Z,2024-02-14T12:17:54.780730Z,-1,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.dbt_tests,model.elementary.dbt_tests,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,dbt_tests,INSERT 0 0,success,model,2.059309244155884,2024-02-14T12:17:54.075540Z,2024-02-14T12:17:55.907848Z,2024-02-14T12:17:53.937541Z,2024-02-14T12:17:54.007539Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,schema_columns_snapshot,INSERT 0 0,success,model,1.6937751770019531,2024-02-14T12:17:54.426073Z,2024-02-14T12:17:55.931842Z,2024-02-14T12:17:54.328072Z,2024-02-14T12:17:54.392069Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.dbt_sources,model.elementary.dbt_sources,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,dbt_sources,INSERT 0 0,success,model,3.699735164642334,2024-02-14T12:17:53.627481Z,2024-02-14T12:17:56.005843Z,2024-02-14T12:17:52.812632Z,2024-02-14T12:17:53.101628Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,metrics_anomaly_score,CREATE VIEW,success,model,0.6847918033599854,2024-02-14T12:17:55.721213Z,2024-02-14T12:17:56.253996Z,2024-02-14T12:17:55.629216Z,2024-02-14T12:17:55.678216Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
0489b689-9288-46a4-a32c-73a62a795040.model.view_selection_tool.avg_maintenance_fractions,model.view_selection_tool.avg_maintenance_fractions,0489b689-9288-46a4-a32c-73a62a795040,2024-03-06 12:30:58,2024-03-06 12:30:59.143531,avg_maintenance_fractions,,skipped,model,0,,,,,,false,,,,Thread-1 (worker),table,{}
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.monitors_runs,model.elementary.monitors_runs,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,monitors_runs,CREATE VIEW,success,model,0.6117849349975586,2024-02-14T12:17:55.783214Z,2024-02-14T12:17:56.263001Z,2024-02-14T12:17:55.710214Z,2024-02-14T12:17:55.748211Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.job_run_results,model.elementary.job_run_results,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,job_run_results,CREATE VIEW,success,model,0.6040894985198975,2024-02-14T12:17:55.948847Z,2024-02-14T12:17:56.403410Z,2024-02-14T12:17:55.857848Z,2024-02-14T12:17:55.900845Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,snapshot_run_results,CREATE VIEW,success,model,0.5944557189941406,2024-02-14T12:17:55.968845Z,2024-02-14T12:17:56.409408Z,2024-02-14T12:17:55.886847Z,2024-02-14T12:17:55.921844Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,alerts_anomaly_detection,CREATE VIEW,success,model,0.41208958625793457,2024-02-14T12:17:56.181844Z,2024-02-14T12:17:56.487054Z,2024-02-14T12:17:56.102846Z,2024-02-14T12:17:56.141846Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.model_run_results,model.elementary.model_run_results,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,model_run_results,CREATE VIEW,success,model,0.4774649143218994,2024-02-14T12:17:56.123847Z,2024-02-14T12:17:56.501340Z,2024-02-14T12:17:56.056846Z,2024-02-14T12:17:56.089846Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7522128c-52c7-458f-8adb-47050b76a514.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,7522128c-52c7-458f-8adb-47050b76a514,2024-02-14 12:18:35,2024-02-14 12:18:35.457820,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.3159964084625244,2024-02-14T12:18:32.661760Z,2024-02-14T12:18:32.917732Z,2024-02-14T12:18:32.626732Z,2024-02-14T12:18:32.652733Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,anomaly_threshold_sensitivity,CREATE VIEW,success,model,0.9024643898010254,2024-02-14T12:17:57.841821Z,2024-02-14T12:17:58.440719Z,2024-02-14T12:17:57.705254Z,2024-02-14T12:17:57.760251Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,alerts_dbt_tests,CREATE VIEW,success,model,1.044011116027832,2024-02-14T12:17:57.729255Z,2024-02-14T12:17:58.525722Z,2024-02-14T12:17:57.540710Z,2024-02-14T12:17:57.598252Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,alerts_dbt_source_freshness,CREATE VIEW,success,model,1.0260133743286133,2024-02-14T12:17:57.809825Z,2024-02-14T12:17:58.534723Z,2024-02-14T12:17:57.639254Z,2024-02-14T12:17:57.728253Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,dbt_artifacts_hashes,CREATE VIEW,success,model,1.0070114135742188,2024-02-14T12:17:57.825829Z,2024-02-14T12:17:58.538722Z,2024-02-14T12:17:57.655253Z,2024-02-14T12:17:57.746253Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6480869e-601e-4e75-95ce-846a06a955ab.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,int_transactions_and_accounts_and_groups_joined,CREATE VIEW,success,model,1.04830002784729,2024-02-14T12:17:57.797824Z,2024-02-14T12:17:58.545721Z,2024-02-14T12:17:57.627252Z,2024-02-14T12:17:57.725255Z,-1,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
    ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.view_selection_tool.all_models_plus_code,model.view_selection_tool.all_models_plus_code,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,all_models_plus_code,,skipped,model,0,,,,,,false,,,,Thread-2 (worker),table,{}
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,alerts_schema_changes,CREATE VIEW,success,model,1.0687999725341797,2024-02-14T12:17:57.749253Z,2024-02-14T12:17:58.548720Z,2024-02-14T12:17:57.568710Z,2024-02-14T12:17:57.637251Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.information_schema_columns,model.elementary.information_schema_columns,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,information_schema_columns,CREATE VIEW,success,model,1.1189074516296387,2024-02-14T12:17:58.096287Z,2024-02-14T12:17:58.667613Z,2024-02-14T12:17:57.672254Z,2024-02-14T12:17:58.072067Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.test_result_rows,model.elementary.test_result_rows,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,test_result_rows,INSERT 0 0,success,model,1.186913251876831,2024-02-14T12:17:57.773253Z,2024-02-14T12:17:58.704612Z,2024-02-14T12:17:57.600255Z,2024-02-14T12:17:57.723252Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,alerts_dbt_models,CREATE VIEW,success,model,0.2899022102355957,2024-02-14T12:17:58.649614Z,2024-02-14T12:17:58.841615Z,2024-02-14T12:17:58.616095Z,2024-02-14T12:17:58.639614Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6480869e-601e-4e75-95ce-846a06a955ab.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,int_grouped_on_group_id,CREATE VIEW,success,model,0.2350025177001953,2024-02-14T12:17:58.719615Z,2024-02-14T12:17:58.890616Z,2024-02-14T12:17:58.687616Z,2024-02-14T12:17:58.705615Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        SUM(amount) AS total_amount,
        'fixed_value' AS account_description

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6480869e-601e-4e75-95ce-846a06a955ab.model.elementary.enriched_columns,model.elementary.enriched_columns,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,enriched_columns,CREATE VIEW,success,model,0.18200182914733887,2024-02-14T12:17:58.779612Z,2024-02-14T12:17:58.918621Z,2024-02-14T12:17:58.753622Z,2024-02-14T12:17:58.774614Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6480869e-601e-4e75-95ce-846a06a955ab.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,6480869e-601e-4e75-95ce-846a06a955ab,2024-02-14 12:18:00,2024-02-14 12:18:00.860776,grouped_transactions_unioned_with_original,SELECT 0,success,model,0.1640012264251709,2024-02-14T12:17:58.948614Z,2024-02-14T12:17:59.080614Z,2024-02-14T12:17:58.928614Z,2024-02-14T12:17:58.945613Z,0,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-7 (worker),table,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
7522128c-52c7-458f-8adb-47050b76a514.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,7522128c-52c7-458f-8adb-47050b76a514,2024-02-14 12:18:35,2024-02-14 12:18:35.457820,stg_dbt_models,CREATE VIEW,success,model,0.31598520278930664,2024-02-14T12:18:32.717735Z,2024-02-14T12:18:32.920736Z,2024-02-14T12:18:32.637732Z,2024-02-14T12:18:32.655733Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7522128c-52c7-458f-8adb-47050b76a514.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,7522128c-52c7-458f-8adb-47050b76a514,2024-02-14 12:18:35,2024-02-14 12:18:35.457820,stg_dbt_run_results,CREATE VIEW,success,model,0.31600332260131836,2024-02-14T12:18:32.723732Z,2024-02-14T12:18:32.923734Z,2024-02-14T12:18:32.643736Z,2024-02-14T12:18:32.657733Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7522128c-52c7-458f-8adb-47050b76a514.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,7522128c-52c7-458f-8adb-47050b76a514,2024-02-14 12:18:35,2024-02-14 12:18:35.457820,stg_dbt_invocations,CREATE VIEW,success,model,0.32200169563293457,2024-02-14T12:18:32.710732Z,2024-02-14T12:18:32.925732Z,2024-02-14T12:18:32.632733Z,2024-02-14T12:18:32.653736Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7522128c-52c7-458f-8adb-47050b76a514.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,7522128c-52c7-458f-8adb-47050b76a514,2024-02-14 12:18:35,2024-02-14 12:18:35.457820,int_keep_models_relevant_package,CREATE VIEW,success,model,0.08100080490112305,2024-02-14T12:18:32.966735Z,2024-02-14T12:18:33.032734Z,2024-02-14T12:18:32.956735Z,2024-02-14T12:18:32.963730Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7522128c-52c7-458f-8adb-47050b76a514.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,7522128c-52c7-458f-8adb-47050b76a514,2024-02-14 12:18:35,2024-02-14 12:18:35.457820,int_join_with_run_results,CREATE VIEW,success,model,0.08099913597106934,2024-02-14T12:18:33.055733Z,2024-02-14T12:18:33.120734Z,2024-02-14T12:18:33.045734Z,2024-02-14T12:18:33.053735Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7522128c-52c7-458f-8adb-47050b76a514.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,7522128c-52c7-458f-8adb-47050b76a514,2024-02-14 12:18:35,2024-02-14 12:18:35.457820,int_only_materialized_models,CREATE VIEW,success,model,0.1880025863647461,2024-02-14T12:18:33.180732Z,2024-02-14T12:18:33.299732Z,2024-02-14T12:18:33.144731Z,2024-02-14T12:18:33.150732Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7522128c-52c7-458f-8adb-47050b76a514.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,7522128c-52c7-458f-8adb-47050b76a514,2024-02-14 12:18:35,2024-02-14 12:18:35.457820,fct_all_models_plus_code,SELECT 11,success,model,0.21600818634033203,2024-02-14T12:18:33.153731Z,2024-02-14T12:18:33.343731Z,2024-02-14T12:18:33.137733Z,2024-02-14T12:18:33.149732Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

model_ids_and_code AS (

    SELECT
        DISTINCT(model_id),
        compiled_code

    FROM including_other_cols

)

SELECT * FROM model_ids_and_code",,,Thread-1 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
7522128c-52c7-458f-8adb-47050b76a514.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,7522128c-52c7-458f-8adb-47050b76a514,2024-02-14 12:18:35,2024-02-14 12:18:35.457820,int_include_monitoring_id,CREATE VIEW,success,model,0.10499453544616699,2024-02-14T12:18:33.367737Z,2024-02-14T12:18:33.449732Z,2024-02-14T12:18:33.352733Z,2024-02-14T12:18:33.366733Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,int_accounts_and_groups_joined,CREATE VIEW,success,model,1.2915630340576172,2024-02-14T12:48:10.506913Z,2024-02-14T12:48:11.551473Z,2024-02-14T12:48:10.329912Z,2024-02-14T12:48:10.459910Z,-1,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
    ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7522128c-52c7-458f-8adb-47050b76a514.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,7522128c-52c7-458f-8adb-47050b76a514,2024-02-14 12:18:35,2024-02-14 12:18:35.457820,int_maintenance_fractions,CREATE VIEW,success,model,0.08693718910217285,2024-02-14T12:18:33.470735Z,2024-02-14T12:18:33.543668Z,2024-02-14T12:18:33.461733Z,2024-02-14T12:18:33.468732Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
7522128c-52c7-458f-8adb-47050b76a514.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,7522128c-52c7-458f-8adb-47050b76a514,2024-02-14 12:18:35,2024-02-14 12:18:35.457820,fct_avg_maintenance_fractions,SELECT 3,success,model,0.11899971961975098,2024-02-14T12:18:33.563667Z,2024-02-14T12:18:33.668668Z,2024-02-14T12:18:33.555669Z,2024-02-14T12:18:33.560666Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-8 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,stg_groups,CREATE VIEW,success,model,0.9561100006103516,2024-02-14T12:47:59.842434Z,2024-02-14T12:48:00.570552Z,2024-02-14T12:47:59.704434Z,2024-02-14T12:47:59.779447Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 10

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,stg_transactions_4,CREATE VIEW,success,model,1.0541114807128906,2024-02-14T12:47:59.874437Z,2024-02-14T12:48:00.584579Z,2024-02-14T12:47:59.726436Z,2024-02-14T12:47:59.784435Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,stg_transactions_1,CREATE VIEW,success,model,1.0991003513336182,2024-02-14T12:47:59.852435Z,2024-02-14T12:48:00.588550Z,2024-02-14T12:47:59.710436Z,2024-02-14T12:47:59.780440Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,stg_transactions_3,CREATE VIEW,success,model,1.1281132698059082,2024-02-14T12:47:59.867438Z,2024-02-14T12:48:00.591578Z,2024-02-14T12:47:59.721435Z,2024-02-14T12:47:59.782452Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,stg_transactions_2,CREATE VIEW,success,model,1.1511385440826416,2024-02-14T12:47:59.859437Z,2024-02-14T12:48:00.616547Z,2024-02-14T12:47:59.715437Z,2024-02-14T12:47:59.781438Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,stg_accounts,CREATE VIEW,success,model,1.2141129970550537,2024-02-14T12:47:59.792438Z,2024-02-14T12:48:00.631549Z,2024-02-14T12:47:59.699438Z,2024-02-14T12:47:59.778435Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    LIMIT 20

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,schema_columns_snapshot,INSERT 0 0,success,model,1.629608154296875,2024-02-14T12:48:09.946386Z,2024-02-14T12:48:11.278473Z,2024-02-14T12:48:09.746384Z,2024-02-14T12:48:09.797385Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,data_monitoring_metrics,INSERT 0 0,success,model,2.3042757511138916,2024-02-14T12:47:59.882437Z,2024-02-14T12:48:01.913604Z,2024-02-14T12:47:59.733435Z,2024-02-14T12:47:59.785435Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.dbt_invocations,model.elementary.dbt_invocations,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,dbt_invocations,INSERT 0 0,success,model,5.96456241607666,2024-02-14T12:48:01.937604Z,2024-02-14T12:48:07.524675Z,2024-02-14T12:48:01.707605Z,2024-02-14T12:48:01.889604Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.dbt_run_results,model.elementary.dbt_run_results,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,dbt_run_results,INSERT 0 0,success,model,5.914068222045898,2024-02-14T12:48:01.975714Z,2024-02-14T12:48:07.532677Z,2024-02-14T12:48:01.808603Z,2024-02-14T12:48:01.901607Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.dbt_columns,model.elementary.dbt_columns,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,dbt_columns,INSERT 0 0,success,model,9.810660600662231,2024-02-14T12:47:59.910435Z,2024-02-14T12:48:09.141353Z,2024-02-14T12:47:59.757435Z,2024-02-14T12:47:59.787438Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.dbt_exposures,model.elementary.dbt_exposures,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,dbt_exposures,INSERT 0 0,success,model,7.960011959075928,2024-02-14T12:48:01.917605Z,2024-02-14T12:48:09.442098Z,2024-02-14T12:48:01.673605Z,2024-02-14T12:48:01.780606Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.dbt_metrics,model.elementary.dbt_metrics,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,dbt_metrics,INSERT 0 0,success,model,7.917515516281128,2024-02-14T12:48:01.952714Z,2024-02-14T12:48:09.508096Z,2024-02-14T12:48:01.751605Z,2024-02-14T12:48:01.892606Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.dbt_tests,model.elementary.dbt_tests,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,dbt_tests,INSERT 0 0,success,model,1.980614423751831,2024-02-14T12:48:09.766382Z,2024-02-14T12:48:11.445471Z,2024-02-14T12:48:09.614865Z,2024-02-14T12:48:09.686864Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.dbt_seeds,model.elementary.dbt_seeds,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,dbt_seeds,INSERT 0 0,success,model,7.921492338180542,2024-02-14T12:48:01.991718Z,2024-02-14T12:48:09.548103Z,2024-02-14T12:48:01.839604Z,2024-02-14T12:48:01.914604Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,dbt_snapshots,INSERT 0 0,success,model,7.0246741771698,2024-02-14T12:48:04.156503Z,2024-02-14T12:48:09.787390Z,2024-02-14T12:48:03.383231Z,2024-02-14T12:48:03.690372Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.dbt_models,model.elementary.dbt_models,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,dbt_models,INSERT 0 0,success,model,8.523779392242432,2024-02-14T12:48:01.964718Z,2024-02-14T12:48:10.139385Z,2024-02-14T12:48:01.781616Z,2024-02-14T12:48:01.894606Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,dbt_source_freshness_results,INSERT 0 0,success,model,2.0051052570343018,2024-02-14T12:48:09.516113Z,2024-02-14T12:48:10.574914Z,2024-02-14T12:48:09.027334Z,2024-02-14T12:48:09.301363Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.metadata,model.elementary.metadata,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,metadata,SELECT 1,success,model,1.1650457382202148,2024-02-14T12:48:09.818385Z,2024-02-14T12:48:10.640911Z,2024-02-14T12:48:09.732401Z,2024-02-14T12:48:09.779384Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-3 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,int_union_of_transactions,CREATE VIEW,success,model,1.1555323600769043,2024-02-14T12:48:10.143384Z,2024-02-14T12:48:11.152914Z,2024-02-14T12:48:10.075391Z,2024-02-14T12:48:10.101384Z,-1,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.elementary_test_results,model.elementary.elementary_test_results,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,elementary_test_results,INSERT 0 0,success,model,1.696610450744629,2024-02-14T12:48:09.800385Z,2024-02-14T12:48:11.272472Z,2024-02-14T12:48:09.687867Z,2024-02-14T12:48:09.744386Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
a9ae0a48-2066-406c-a409-0b8f6d4fed54.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,a9ae0a48-2066-406c-a409-0b8f6d4fed54,2024-02-16 08:39:48,2024-02-16 08:39:48.837441,stg_dbt_invocations,CREATE VIEW,success,model,0.6301982402801514,2024-02-16T08:39:43.341346Z,2024-02-16T08:39:43.770548Z,2024-02-16T08:39:43.188348Z,2024-02-16T08:39:43.217347Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.dbt_sources,model.elementary.dbt_sources,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,dbt_sources,INSERT 0 0,success,model,3.029664993286133,2024-02-14T12:48:09.531113Z,2024-02-14T12:48:11.616472Z,2024-02-14T12:48:09.071326Z,2024-02-14T12:48:09.372096Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,metrics_anomaly_score,CREATE VIEW,success,model,0.7765679359436035,2024-02-14T12:48:11.250472Z,2024-02-14T12:48:11.903481Z,2024-02-14T12:48:11.173910Z,2024-02-14T12:48:11.222916Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.monitors_runs,model.elementary.monitors_runs,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,monitors_runs,CREATE VIEW,success,model,0.7145617008209229,2024-02-14T12:48:11.316473Z,2024-02-14T12:48:11.911473Z,2024-02-14T12:48:11.238913Z,2024-02-14T12:48:11.284470Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.job_run_results,model.elementary.job_run_results,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,job_run_results,CREATE VIEW,success,model,0.7080016136169434,2024-02-14T12:48:11.416474Z,2024-02-14T12:48:11.986473Z,2024-02-14T12:48:11.344472Z,2024-02-14T12:48:11.390474Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,snapshot_run_results,CREATE VIEW,success,model,0.6479983329772949,2024-02-14T12:48:11.595473Z,2024-02-14T12:48:12.039471Z,2024-02-14T12:48:11.450475Z,2024-02-14T12:48:11.573472Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.model_run_results,model.elementary.model_run_results,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,model_run_results,CREATE VIEW,success,model,0.6410150527954102,2024-02-14T12:48:11.630474Z,2024-02-14T12:48:12.044475Z,2024-02-14T12:48:11.560474Z,2024-02-14T12:48:11.582473Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,alerts_anomaly_detection,CREATE VIEW,success,model,0.4030015468597412,2024-02-14T12:48:11.796474Z,2024-02-14T12:48:12.091472Z,2024-02-14T12:48:11.725471Z,2024-02-14T12:48:11.759473Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,int_transactions_and_accounts_and_groups_joined,CREATE VIEW,success,model,0.7220785617828369,2024-02-14T12:48:13.244022Z,2024-02-14T12:48:13.754103Z,2024-02-14T12:48:13.115036Z,2024-02-14T12:48:13.195024Z,-1,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
    ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,anomaly_threshold_sensitivity,CREATE VIEW,success,model,0.7080836296081543,2024-02-14T12:48:13.278023Z,2024-02-14T12:48:13.759103Z,2024-02-14T12:48:13.182024Z,2024-02-14T12:48:13.214024Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,alerts_dbt_tests,CREATE VIEW,success,model,0.7660794258117676,2024-02-14T12:48:13.196023Z,2024-02-14T12:48:13.775102Z,2024-02-14T12:48:13.062024Z,2024-02-14T12:48:13.096023Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,alerts_dbt_source_freshness,CREATE VIEW,success,model,0.7490854263305664,2024-02-14T12:48:13.252022Z,2024-02-14T12:48:13.799105Z,2024-02-14T12:48:13.122025Z,2024-02-14T12:48:13.208022Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3520cae6-5da9-490e-8b13-bf7d6346412b.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,3520cae6-5da9-490e-8b13-bf7d6346412b,2024-02-16 08:42:45,2024-02-16 08:42:46.203251,stg_dbt_invocations,CREATE VIEW,success,model,0.43151354789733887,2024-02-16T08:42:41.547908Z,2024-02-16T08:42:41.865426Z,2024-02-16T08:42:41.468910Z,2024-02-16T08:42:41.486911Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,alerts_schema_changes,CREATE VIEW,success,model,0.7980844974517822,2024-02-14T12:48:13.217024Z,2024-02-14T12:48:13.814111Z,2024-02-14T12:48:13.083026Z,2024-02-14T12:48:13.134023Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,dbt_artifacts_hashes,CREATE VIEW,success,model,0.7840855121612549,2024-02-14T12:48:13.266025Z,2024-02-14T12:48:13.817104Z,2024-02-14T12:48:13.135023Z,2024-02-14T12:48:13.211024Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.information_schema_columns,model.elementary.information_schema_columns,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,information_schema_columns,CREATE VIEW,success,model,0.8470871448516846,2024-02-14T12:48:13.399546Z,2024-02-14T12:48:13.916104Z,2024-02-14T12:48:13.148022Z,2024-02-14T12:48:13.378540Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.test_result_rows,model.elementary.test_result_rows,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,test_result_rows,INSERT 0 0,success,model,0.9180805683135986,2024-02-14T12:48:13.231021Z,2024-02-14T12:48:13.962102Z,2024-02-14T12:48:13.098023Z,2024-02-14T12:48:13.177022Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,int_grouped_on_group_id,CREATE VIEW,success,model,0.28800368309020996,2024-02-14T12:48:13.942102Z,2024-02-14T12:48:14.146103Z,2024-02-14T12:48:13.899106Z,2024-02-14T12:48:13.920103Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        SUM(amount) AS total_amount,
        'fixed_value' AS account_description

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,alerts_dbt_models,CREATE VIEW,success,model,0.3010120391845703,2024-02-14T12:48:13.928107Z,2024-02-14T12:48:14.152106Z,2024-02-14T12:48:13.883104Z,2024-02-14T12:48:13.917102Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
628ad639-c1ea-4a4f-a30f-3454180cd78a.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,628ad639-c1ea-4a4f-a30f-3454180cd78a,2024-02-14 12:48:40,2024-02-14 12:48:40.587385,int_only_materialized_models,CREATE VIEW,success,model,0.2068319320678711,2024-02-14T12:48:37.943870Z,2024-02-14T12:48:38.066705Z,2024-02-14T12:48:37.879867Z,2024-02-14T12:48:37.892873Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.elementary.enriched_columns,model.elementary.enriched_columns,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,enriched_columns,CREATE VIEW,success,model,0.19700312614440918,2024-02-14T12:48:14.011101Z,2024-02-14T12:48:14.172103Z,2024-02-14T12:48:13.993108Z,2024-02-14T12:48:14.007105Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
65cca4d0-fe4b-46d9-b081-ff5a2ecc0144.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,65cca4d0-fe4b-46d9-b081-ff5a2ecc0144,2024-02-14 12:48:15,2024-02-14 12:48:15.958638,grouped_transactions_unioned_with_original,SELECT 0,success,model,0.16300535202026367,2024-02-14T12:48:14.211103Z,2024-02-14T12:48:14.348103Z,2024-02-14T12:48:14.195106Z,2024-02-14T12:48:14.207103Z,0,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-4 (worker),table,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
628ad639-c1ea-4a4f-a30f-3454180cd78a.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,628ad639-c1ea-4a4f-a30f-3454180cd78a,2024-02-14 12:48:40,2024-02-14 12:48:40.587385,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.39414167404174805,2024-02-14T12:48:37.255186Z,2024-02-14T12:48:37.584321Z,2024-02-14T12:48:37.221185Z,2024-02-14T12:48:37.246183Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
628ad639-c1ea-4a4f-a30f-3454180cd78a.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,628ad639-c1ea-4a4f-a30f-3454180cd78a,2024-02-14 12:48:40,2024-02-14 12:48:40.587385,stg_dbt_run_results,CREATE VIEW,success,model,0.3921365737915039,2024-02-14T12:48:37.324225Z,2024-02-14T12:48:37.594324Z,2024-02-14T12:48:37.240185Z,2024-02-14T12:48:37.252186Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
628ad639-c1ea-4a4f-a30f-3454180cd78a.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,628ad639-c1ea-4a4f-a30f-3454180cd78a,2024-02-14 12:48:40,2024-02-14 12:48:40.587385,stg_dbt_models,CREATE VIEW,success,model,0.41113758087158203,2024-02-14T12:48:37.316219Z,2024-02-14T12:48:37.615322Z,2024-02-14T12:48:37.235184Z,2024-02-14T12:48:37.250185Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
628ad639-c1ea-4a4f-a30f-3454180cd78a.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,628ad639-c1ea-4a4f-a30f-3454180cd78a,2024-02-14 12:48:40,2024-02-14 12:48:40.587385,stg_dbt_invocations,CREATE VIEW,success,model,0.42113709449768066,2024-02-14T12:48:37.306187Z,2024-02-14T12:48:37.621323Z,2024-02-14T12:48:37.228191Z,2024-02-14T12:48:37.248194Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
628ad639-c1ea-4a4f-a30f-3454180cd78a.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,628ad639-c1ea-4a4f-a30f-3454180cd78a,2024-02-14 12:48:40,2024-02-14 12:48:40.587385,int_keep_models_relevant_package,CREATE VIEW,success,model,0.09654760360717773,2024-02-14T12:48:37.653323Z,2024-02-14T12:48:37.734870Z,2024-02-14T12:48:37.643322Z,2024-02-14T12:48:37.651322Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
628ad639-c1ea-4a4f-a30f-3454180cd78a.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,628ad639-c1ea-4a4f-a30f-3454180cd78a,2024-02-14 12:48:40,2024-02-14 12:48:40.587385,int_join_with_run_results,CREATE VIEW,success,model,0.10400152206420898,2024-02-14T12:48:37.758869Z,2024-02-14T12:48:37.846871Z,2024-02-14T12:48:37.749871Z,2024-02-14T12:48:37.755869Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f8ea7205-f531-46cd-80f8-7cd7c027254f.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,f8ea7205-f531-46cd-80f8-7cd7c027254f,2024-02-16 08:45:33,2024-02-16 08:45:34.109404,fct_destination_nodes,,skipped,model,0,,,,,,false,,,,Thread-7 (worker),table,{}
628ad639-c1ea-4a4f-a30f-3454180cd78a.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,628ad639-c1ea-4a4f-a30f-3454180cd78a,2024-02-14 12:48:40,2024-02-14 12:48:40.587385,fct_all_models_plus_code,SELECT 11,success,model,0.33083343505859375,2024-02-14T12:48:37.893868Z,2024-02-14T12:48:38.187704Z,2024-02-14T12:48:37.869870Z,2024-02-14T12:48:37.890870Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

model_ids_and_code AS (

    SELECT
        DISTINCT(model_id),
        compiled_code

    FROM including_other_cols

)

SELECT * FROM model_ids_and_code",,,Thread-1 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
628ad639-c1ea-4a4f-a30f-3454180cd78a.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,628ad639-c1ea-4a4f-a30f-3454180cd78a,2024-02-14 12:48:40,2024-02-14 12:48:40.587385,int_include_monitoring_id,CREATE VIEW,success,model,0.1755821704864502,2024-02-14T12:48:38.149703Z,2024-02-14T12:48:38.272286Z,2024-02-14T12:48:38.102706Z,2024-02-14T12:48:38.145704Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
628ad639-c1ea-4a4f-a30f-3454180cd78a.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,628ad639-c1ea-4a4f-a30f-3454180cd78a,2024-02-14 12:48:40,2024-02-14 12:48:40.587385,int_maintenance_fractions,CREATE VIEW,success,model,0.09200024604797363,2024-02-14T12:48:38.295286Z,2024-02-14T12:48:38.372286Z,2024-02-14T12:48:38.285285Z,2024-02-14T12:48:38.293285Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
628ad639-c1ea-4a4f-a30f-3454180cd78a.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,628ad639-c1ea-4a4f-a30f-3454180cd78a,2024-02-14 12:48:40,2024-02-14 12:48:40.587385,fct_avg_maintenance_fractions,SELECT 3,success,model,0.13500452041625977,2024-02-14T12:48:38.397286Z,2024-02-14T12:48:38.515284Z,2024-02-14T12:48:38.386284Z,2024-02-14T12:48:38.394282Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-8 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,stg_transactions_1,CREATE VIEW,success,model,1.0010359287261963,2024-02-14T12:52:22.993011Z,2024-02-14T12:52:23.670045Z,2024-02-14T12:52:22.834009Z,2024-02-14T12:52:22.907012Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,stg_transactions_3,CREATE VIEW,success,model,1.0050363540649414,2024-02-14T12:52:23.011013Z,2024-02-14T12:52:23.680052Z,2024-02-14T12:52:22.844007Z,2024-02-14T12:52:22.910013Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,stg_groups,CREATE VIEW,success,model,1.0820367336273193,2024-02-14T12:52:22.968008Z,2024-02-14T12:52:23.685050Z,2024-02-14T12:52:22.827026Z,2024-02-14T12:52:22.906011Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 10

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,stg_transactions_4,CREATE VIEW,success,model,1.0900344848632812,2024-02-14T12:52:23.021008Z,2024-02-14T12:52:23.687045Z,2024-02-14T12:52:22.850007Z,2024-02-14T12:52:22.912014Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,stg_accounts,CREATE VIEW,success,model,1.1290287971496582,2024-02-14T12:52:22.922009Z,2024-02-14T12:52:23.690052Z,2024-02-14T12:52:22.820008Z,2024-02-14T12:52:22.904010Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    LIMIT 20

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f8ea7205-f531-46cd-80f8-7cd7c027254f.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,f8ea7205-f531-46cd-80f8-7cd7c027254f,2024-02-16 08:45:33,2024-02-16 08:45:34.109404,int_include_monitoring_id,,skipped,model,0,,,,,,false,,,,Thread-6 (worker),view,{}
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,data_monitoring_metrics,INSERT 0 0,success,model,2.064748525619507,2024-02-14T12:52:23.030012Z,2024-02-14T12:52:24.772074Z,2024-02-14T12:52:22.855007Z,2024-02-14T12:52:22.913010Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.dbt_invocations,model.elementary.dbt_invocations,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,dbt_invocations,INSERT 0 0,success,model,5.957401514053345,2024-02-14T12:52:25.110802Z,2024-02-14T12:52:30.685476Z,2024-02-14T12:52:24.873760Z,2024-02-14T12:52:25.042792Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.dbt_run_results,model.elementary.dbt_run_results,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,dbt_run_results,INSERT 0 0,success,model,5.953686237335205,2024-02-14T12:52:25.145801Z,2024-02-14T12:52:30.709473Z,2024-02-14T12:52:24.979755Z,2024-02-14T12:52:25.073756Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.dbt_exposures,model.elementary.dbt_exposures,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,dbt_exposures,INSERT 0 0,success,model,8.150061845779419,2024-02-14T12:52:25.084759Z,2024-02-14T12:52:32.548591Z,2024-02-14T12:52:24.834758Z,2024-02-14T12:52:24.967755Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.dbt_metrics,model.elementary.dbt_metrics,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,dbt_metrics,INSERT 0 0,success,model,8.047974348068237,2024-02-14T12:52:25.122801Z,2024-02-14T12:52:32.655102Z,2024-02-14T12:52:24.907755Z,2024-02-14T12:52:25.043792Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.dbt_columns,model.elementary.dbt_columns,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,dbt_columns,INSERT 0 0,success,model,10.018131732940674,2024-02-14T12:52:23.059039Z,2024-02-14T12:52:32.693102Z,2024-02-14T12:52:22.876007Z,2024-02-14T12:52:22.915023Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,alerts_dbt_models,CREATE VIEW,success,model,0.33457159996032715,2024-02-14T12:52:37.456994Z,2024-02-14T12:52:37.702566Z,2024-02-14T12:52:37.404995Z,2024-02-14T12:52:37.441001Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.dbt_seeds,model.elementary.dbt_seeds,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,dbt_seeds,INSERT 0 0,success,model,8.00135064125061,2024-02-14T12:52:25.162804Z,2024-02-14T12:52:32.795132Z,2024-02-14T12:52:25.012758Z,2024-02-14T12:52:25.090757Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,dbt_snapshots,INSERT 0 0,success,model,7.863852262496948,2024-02-14T12:52:26.097829Z,2024-02-14T12:52:32.907655Z,2024-02-14T12:52:25.445801Z,2024-02-14T12:52:25.710801Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.dbt_models,model.elementary.dbt_models,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,dbt_models,INSERT 0 0,success,model,8.744547367095947,2024-02-14T12:52:25.134800Z,2024-02-14T12:52:33.449263Z,2024-02-14T12:52:24.945756Z,2024-02-14T12:52:25.045758Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,dbt_source_freshness_results,INSERT 0 0,success,model,2.6321511268615723,2024-02-14T12:52:32.492585Z,2024-02-14T12:52:33.919227Z,2024-02-14T12:52:31.763073Z,2024-02-14T12:52:32.064076Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,int_accounts_and_groups_joined,CREATE VIEW,success,model,1.2524974346160889,2024-02-14T12:52:33.367268Z,2024-02-14T12:52:34.170227Z,2024-02-14T12:52:33.284263Z,2024-02-14T12:52:33.332265Z,-1,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
    ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.metadata,model.elementary.metadata,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,metadata,SELECT 1,success,model,1.617107629776001,2024-02-14T12:52:33.166262Z,2024-02-14T12:52:34.329756Z,2024-02-14T12:52:33.074655Z,2024-02-14T12:52:33.124662Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-8 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,schema_columns_snapshot,INSERT 0 0,success,model,1.7965054512023926,2024-02-14T12:52:33.242263Z,2024-02-14T12:52:34.634161Z,2024-02-14T12:52:33.096659Z,2024-02-14T12:52:33.129657Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.elementary_test_results,model.elementary.elementary_test_results,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,elementary_test_results,INSERT 0 0,success,model,1.8065059185028076,2024-02-14T12:52:33.183263Z,2024-02-14T12:52:34.660159Z,2024-02-14T12:52:33.052659Z,2024-02-14T12:52:33.126662Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,int_union_of_transactions,CREATE VIEW,success,model,1.134941577911377,2024-02-14T12:52:33.893225Z,2024-02-14T12:52:34.838162Z,2024-02-14T12:52:33.804227Z,2024-02-14T12:52:33.838228Z,-1,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.dbt_sources,model.elementary.dbt_sources,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,dbt_sources,INSERT 0 0,success,model,3.560652494430542,2024-02-14T12:52:32.582133Z,2024-02-14T12:52:34.927162Z,2024-02-14T12:52:31.857084Z,2024-02-14T12:52:32.155070Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.dbt_tests,model.elementary.dbt_tests,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,dbt_tests,INSERT 0 0,success,model,2.087506055831909,2024-02-14T12:52:33.151656Z,2024-02-14T12:52:34.933160Z,2024-02-14T12:52:32.925655Z,2024-02-14T12:52:33.118655Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,metrics_anomaly_score,CREATE VIEW,success,model,0.713404655456543,2024-02-14T12:52:34.642157Z,2024-02-14T12:52:35.217161Z,2024-02-14T12:52:34.581780Z,2024-02-14T12:52:34.614161Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.monitors_runs,model.elementary.monitors_runs,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,monitors_runs,CREATE VIEW,success,model,0.6480035781860352,2024-02-14T12:52:34.735160Z,2024-02-14T12:52:35.244162Z,2024-02-14T12:52:34.677161Z,2024-02-14T12:52:34.713163Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.job_run_results,model.elementary.job_run_results,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,job_run_results,CREATE VIEW,success,model,0.6550092697143555,2024-02-14T12:52:34.752161Z,2024-02-14T12:52:35.251161Z,2024-02-14T12:52:34.686161Z,2024-02-14T12:52:34.718160Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
28859e6a-ec2a-4993-a209-e6fca4709cb8.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,28859e6a-ec2a-4993-a209-e6fca4709cb8,2024-02-15 15:31:44,2024-02-15 15:31:45.448881,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.3615853786468506,2024-02-15T15:31:40.409929Z,2024-02-15T15:31:40.709489Z,2024-02-15T15:31:40.371899Z,2024-02-15T15:31:40.400900Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,snapshot_run_results,CREATE VIEW,success,model,0.5633394718170166,2024-02-14T12:52:34.897161Z,2024-02-14T12:52:35.349949Z,2024-02-14T12:52:34.819163Z,2024-02-14T12:52:34.877162Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.model_run_results,model.elementary.model_run_results,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,model_run_results,CREATE VIEW,success,model,0.5623254776000977,2024-02-14T12:52:34.936162Z,2024-02-14T12:52:35.352949Z,2024-02-14T12:52:34.858160Z,2024-02-14T12:52:34.888162Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,alerts_anomaly_detection,CREATE VIEW,success,model,0.3893270492553711,2024-02-14T12:52:35.117160Z,2024-02-14T12:52:35.395482Z,2024-02-14T12:52:35.047163Z,2024-02-14T12:52:35.079162Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,alerts_dbt_tests,CREATE VIEW,success,model,0.9067518711090088,2024-02-14T12:52:36.583065Z,2024-02-14T12:52:37.249991Z,2024-02-14T12:52:36.403384Z,2024-02-14T12:52:36.447437Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,anomaly_threshold_sensitivity,CREATE VIEW,success,model,0.8458297252655029,2024-02-14T12:52:36.680058Z,2024-02-14T12:52:37.256992Z,2024-02-14T12:52:36.565059Z,2024-02-14T12:52:36.602059Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f8ea7205-f531-46cd-80f8-7cd7c027254f.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,f8ea7205-f531-46cd-80f8-7cd7c027254f,2024-02-16 08:45:33,2024-02-16 08:45:34.109404,int_maintenance_fractions,,skipped,model,0,,,,,,false,,,,Thread-8 (worker),view,{}
f8ea7205-f531-46cd-80f8-7cd7c027254f.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,f8ea7205-f531-46cd-80f8-7cd7c027254f,2024-02-16 08:45:33,2024-02-16 08:45:34.109404,fct_avg_maintenance_fractions,,skipped,model,0,,,,,,false,,,,Thread-2 (worker),table,{}
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,alerts_schema_changes,CREATE VIEW,success,model,0.9095561504364014,2024-02-14T12:52:36.603058Z,2024-02-14T12:52:37.264998Z,2024-02-14T12:52:36.426173Z,2024-02-14T12:52:36.478623Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,alerts_dbt_source_freshness,CREATE VIEW,success,model,0.9258229732513428,2024-02-14T12:52:36.652061Z,2024-02-14T12:52:37.302993Z,2024-02-14T12:52:36.490735Z,2024-02-14T12:52:36.596060Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,dbt_artifacts_hashes,CREATE VIEW,success,model,0.9258213043212891,2024-02-14T12:52:36.665059Z,2024-02-14T12:52:37.310999Z,2024-02-14T12:52:36.553058Z,2024-02-14T12:52:36.599059Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,int_transactions_and_accounts_and_groups_joined,SELECT 0,success,model,0.9991862773895264,2024-02-14T12:52:36.642059Z,2024-02-14T12:52:37.379996Z,2024-02-14T12:52:36.480456Z,2024-02-14T12:52:36.582061Z,0,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
    ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-7 (worker),table,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.information_schema_columns,model.elementary.information_schema_columns,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,information_schema_columns,CREATE VIEW,success,model,1.0078258514404297,2024-02-14T12:52:36.804994Z,2024-02-14T12:52:37.393994Z,2024-02-14T12:52:36.502060Z,2024-02-14T12:52:36.785478Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.test_result_rows,model.elementary.test_result_rows,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,test_result_rows,INSERT 0 0,success,model,1.1083626747131348,2024-02-14T12:52:36.625061Z,2024-02-14T12:52:37.485993Z,2024-02-14T12:52:36.448542Z,2024-02-14T12:52:36.578058Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,int_grouped_on_group_id,CREATE VIEW,success,model,0.2851114273071289,2024-02-14T12:52:37.553562Z,2024-02-14T12:52:37.764107Z,2024-02-14T12:52:37.503995Z,2024-02-14T12:52:37.542561Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        SUM(amount) AS total_amount,
        'fixed_value' AS account_description

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.elementary.enriched_columns,model.elementary.enriched_columns,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,enriched_columns,CREATE VIEW,success,model,0.28110814094543457,2024-02-14T12:52:37.570562Z,2024-02-14T12:52:37.767103Z,2024-02-14T12:52:37.521014Z,2024-02-14T12:52:37.550562Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
12be6363-58c0-4267-9a47-02cf9bef02cb.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,12be6363-58c0-4267-9a47-02cf9bef02cb,2024-02-14 12:52:40,2024-02-14 12:52:40.158090,grouped_transactions_unioned_with_original,SELECT 0,success,model,0.14200091361999512,2024-02-14T12:52:37.808103Z,2024-02-14T12:52:37.929103Z,2024-02-14T12:52:37.795106Z,2024-02-14T12:52:37.804103Z,0,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-7 (worker),table,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,stg_transactions_4,CREATE VIEW,success,model,1.1001086235046387,2024-02-15T12:58:03.225647Z,2024-02-15T12:58:04.013244Z,2024-02-15T12:58:03.003647Z,2024-02-15T12:58:03.078654Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,stg_accounts,CREATE VIEW,success,model,1.1136281490325928,2024-02-15T12:58:03.088650Z,2024-02-15T12:58:04.018240Z,2024-02-15T12:58:02.960650Z,2024-02-15T12:58:03.069648Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    LIMIT 30

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,stg_transactions_2,CREATE VIEW,success,model,1.1351044178009033,2024-02-15T12:58:03.196647Z,2024-02-15T12:58:04.021758Z,2024-02-15T12:58:02.986650Z,2024-02-15T12:58:03.074650Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,stg_groups,CREATE VIEW,success,model,1.1431078910827637,2024-02-15T12:58:03.168649Z,2024-02-15T12:58:04.026757Z,2024-02-15T12:58:02.969648Z,2024-02-15T12:58:03.071648Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 10

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,stg_transactions_1,CREATE VIEW,success,model,1.1461095809936523,2024-02-15T12:58:03.185648Z,2024-02-15T12:58:04.032768Z,2024-02-15T12:58:02.979651Z,2024-02-15T12:58:03.072653Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,stg_transactions_3,CREATE VIEW,success,model,1.195617914199829,2024-02-15T12:58:03.209649Z,2024-02-15T12:58:04.038757Z,2024-02-15T12:58:02.994647Z,2024-02-15T12:58:03.076648Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.metadata,model.elementary.metadata,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,metadata,SELECT 1,success,model,1.152930498123169,2024-02-20T09:13:53.229352Z,2024-02-20T09:13:53.853265Z,2024-02-20T09:13:53.147350Z,2024-02-20T09:13:53.190354Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-2 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,data_monitoring_metrics,INSERT 0 0,success,model,3.164280652999878,2024-02-15T12:58:03.239648Z,2024-02-15T12:58:06.057921Z,2024-02-15T12:58:03.012648Z,2024-02-15T12:58:03.080648Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.dbt_invocations,model.elementary.dbt_invocations,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,dbt_invocations,INSERT 0 0,success,model,7.026862621307373,2024-02-15T12:58:05.883014Z,2024-02-15T12:58:11.193188Z,2024-02-15T12:58:04.694167Z,2024-02-15T12:58:05.551902Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.dbt_columns,model.elementary.dbt_columns,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,dbt_columns,INSERT 0 0,success,model,8.279510259628296,2024-02-15T12:58:03.333647Z,2024-02-15T12:58:11.198153Z,2024-02-15T12:58:03.043648Z,2024-02-15T12:58:03.082652Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.dbt_run_results,model.elementary.dbt_run_results,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,dbt_run_results,INSERT 0 0,success,model,7.307047128677368,2024-02-15T12:58:05.945021Z,2024-02-15T12:58:11.225158Z,2024-02-15T12:58:05.363819Z,2024-02-15T12:58:05.827593Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.dbt_exposures,model.elementary.dbt_exposures,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,dbt_exposures,INSERT 0 0,success,model,9.035626888275146,2024-02-15T12:58:05.870045Z,2024-02-15T12:58:13.179899Z,2024-02-15T12:58:04.472472Z,2024-02-15T12:58:05.347809Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.dbt_metrics,model.elementary.dbt_metrics,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,dbt_metrics,INSERT 0 0,success,model,9.031630277633667,2024-02-15T12:58:05.897022Z,2024-02-15T12:58:13.185903Z,2024-02-15T12:58:04.940708Z,2024-02-15T12:58:05.709067Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,alerts_dbt_models,CREATE VIEW,success,model,0.285628080368042,2024-02-15T12:58:17.721839Z,2024-02-15T12:58:17.925468Z,2024-02-15T12:58:17.676838Z,2024-02-15T12:58:17.707838Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.dbt_seeds,model.elementary.dbt_seeds,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,dbt_seeds,INSERT 0 0,success,model,8.993775367736816,2024-02-15T12:58:05.959147Z,2024-02-15T12:58:13.241897Z,2024-02-15T12:58:05.504902Z,2024-02-15T12:58:05.829590Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.dbt_models,model.elementary.dbt_models,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,dbt_models,INSERT 0 0,success,model,9.433518409729004,2024-02-15T12:58:05.912014Z,2024-02-15T12:58:13.611791Z,2024-02-15T12:58:05.062706Z,2024-02-15T12:58:05.786584Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,dbt_snapshots,INSERT 0 0,success,model,5.275525808334351,2024-02-15T12:58:10.565797Z,2024-02-15T12:58:13.740831Z,2024-02-15T12:58:09.846464Z,2024-02-15T12:58:10.527796Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,dbt_source_freshness_results,INSERT 0 0,success,model,1.2391371726989746,2024-02-15T12:58:13.124330Z,2024-02-15T12:58:14.158380Z,2024-02-15T12:58:12.979763Z,2024-02-15T12:58:13.051277Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.metadata,model.elementary.metadata,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,metadata,SELECT 1,success,model,1.5203027725219727,2024-02-15T12:58:13.562131Z,2024-02-15T12:58:14.868666Z,2024-02-15T12:58:13.462128Z,2024-02-15T12:58:13.494131Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-4 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,int_accounts_and_groups_joined,CREATE VIEW,success,model,1.2631347179412842,2024-02-15T12:58:13.875381Z,2024-02-15T12:58:14.987962Z,2024-02-15T12:58:13.799350Z,2024-02-15T12:58:13.823868Z,-1,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
    ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.elementary_test_results,model.elementary.elementary_test_results,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,elementary_test_results,INSERT 0 0,success,model,1.6305441856384277,2024-02-15T12:58:13.538126Z,2024-02-15T12:58:15.001959Z,2024-02-15T12:58:13.421127Z,2024-02-15T12:58:13.485133Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.dbt_tests,model.elementary.dbt_tests,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,dbt_tests,INSERT 0 0,success,model,2.0742006301879883,2024-02-15T12:58:13.190901Z,2024-02-15T12:58:15.058478Z,2024-02-15T12:58:13.068276Z,2024-02-15T12:58:13.139323Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,schema_columns_snapshot,INSERT 0 0,success,model,1.6153533458709717,2024-02-15T12:58:13.635790Z,2024-02-15T12:58:15.071475Z,2024-02-15T12:58:13.504131Z,2024-02-15T12:58:13.611791Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,int_union_of_transactions,CREATE VIEW,success,model,1.2636325359344482,2024-02-15T12:58:14.103380Z,2024-02-15T12:58:15.117478Z,2024-02-15T12:58:13.918379Z,2024-02-15T12:58:13.956380Z,-1,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.dbt_sources,model.elementary.dbt_sources,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,dbt_sources,INSERT 0 0,success,model,2.2932722568511963,2024-02-15T12:58:13.145324Z,2024-02-15T12:58:15.207529Z,2024-02-15T12:58:13.011279Z,2024-02-15T12:58:13.066280Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,metrics_anomaly_score,CREATE VIEW,success,model,0.6424236297607422,2024-02-15T12:58:14.943443Z,2024-02-15T12:58:15.463795Z,2024-02-15T12:58:14.870633Z,2024-02-15T12:58:14.916467Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.monitors_runs,model.elementary.monitors_runs,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,monitors_runs,CREATE VIEW,success,model,0.6419291496276855,2024-02-15T12:58:15.098485Z,2024-02-15T12:58:15.634312Z,2024-02-15T12:58:15.046480Z,2024-02-15T12:58:15.076477Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.job_run_results,model.elementary.job_run_results,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,job_run_results,CREATE VIEW,success,model,0.5664119720458984,2024-02-15T12:58:15.235517Z,2024-02-15T12:58:15.677889Z,2024-02-15T12:58:15.158004Z,2024-02-15T12:58:15.200514Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.metadata,model.elementary.metadata,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,metadata,SELECT 1,success,model,1.2093641757965088,2024-03-08T10:52:47.259171Z,2024-03-08T10:52:48.253288Z,2024-03-08T10:52:47.203910Z,2024-03-08T10:52:47.244930Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-3 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.model_run_results,model.elementary.model_run_results,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,model_run_results,CREATE VIEW,success,model,0.5914053916931152,2024-02-15T12:58:15.267513Z,2024-02-15T12:58:15.722892Z,2024-02-15T12:58:15.180001Z,2024-02-15T12:58:15.221512Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,snapshot_run_results,CREATE VIEW,success,model,0.5433864593505859,2024-02-15T12:58:15.330094Z,2024-02-15T12:58:15.742896Z,2024-02-15T12:58:15.258513Z,2024-02-15T12:58:15.313515Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,alerts_anomaly_detection,CREATE VIEW,success,model,0.5353777408599854,2024-02-15T12:58:15.350090Z,2024-02-15T12:58:15.749894Z,2024-02-15T12:58:15.283514Z,2024-02-15T12:58:15.318514Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,anomaly_threshold_sensitivity,CREATE VIEW,success,model,0.7711637020111084,2024-02-15T12:58:16.968745Z,2024-02-15T12:58:17.514316Z,2024-02-15T12:58:16.864157Z,2024-02-15T12:58:16.908742Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,alerts_dbt_tests,CREATE VIEW,success,model,0.8532054424285889,2024-02-15T12:58:16.880746Z,2024-02-15T12:58:17.539321Z,2024-02-15T12:58:16.751155Z,2024-02-15T12:58:16.809153Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eb449906-16f9-4aa6-a5bd-e691063f1810.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,eb449906-16f9-4aa6-a5bd-e691063f1810,2024-02-15 13:21:04,2024-02-15 13:21:04.574851,stg_dbt_invocations,CREATE VIEW,success,model,0.38155341148376465,2024-02-15T13:21:00.962064Z,2024-02-15T13:21:01.235577Z,2024-02-15T13:21:00.884542Z,2024-02-15T13:21:00.905543Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,alerts_schema_changes,CREATE VIEW,success,model,0.8463490009307861,2024-02-15T12:58:16.897744Z,2024-02-15T12:58:17.541316Z,2024-02-15T12:58:16.767153Z,2024-02-15T12:58:16.820149Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,dbt_artifacts_hashes,CREATE VIEW,success,model,0.8411502838134766,2024-02-15T12:58:16.952747Z,2024-02-15T12:58:17.551318Z,2024-02-15T12:58:16.821151Z,2024-02-15T12:58:16.878746Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,alerts_dbt_source_freshness,CREATE VIEW,success,model,0.8736817836761475,2024-02-15T12:58:16.939746Z,2024-02-15T12:58:17.569316Z,2024-02-15T12:58:16.811154Z,2024-02-15T12:58:16.875745Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,int_transactions_and_accounts_and_groups_joined,SELECT 0,success,model,0.9547591209411621,2024-02-15T12:58:16.928747Z,2024-02-15T12:58:17.666837Z,2024-02-15T12:58:16.803151Z,2024-02-15T12:58:16.863157Z,0,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
    ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-4 (worker),table,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.information_schema_columns,model.elementary.information_schema_columns,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,information_schema_columns,CREATE VIEW,success,model,0.9336953163146973,2024-02-15T12:58:17.110275Z,2024-02-15T12:58:17.674843Z,2024-02-15T12:58:16.830149Z,2024-02-15T12:58:17.076278Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.test_result_rows,model.elementary.test_result_rows,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,test_result_rows,INSERT 0 0,success,model,0.9865965843200684,2024-02-15T12:58:16.909746Z,2024-02-15T12:58:17.706838Z,2024-02-15T12:58:16.786154Z,2024-02-15T12:58:16.837182Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.elementary.enriched_columns,model.elementary.enriched_columns,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,enriched_columns,CREATE VIEW,success,model,0.2280430793762207,2024-02-15T12:58:17.811944Z,2024-02-15T12:58:17.978993Z,2024-02-15T12:58:17.774944Z,2024-02-15T12:58:17.792947Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,int_grouped_on_group_id,CREATE VIEW,success,model,0.24104714393615723,2024-02-15T12:58:17.794945Z,2024-02-15T12:58:17.984997Z,2024-02-15T12:58:17.764944Z,2024-02-15T12:58:17.789944Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        SUM(amount) AS total_amount,
        'fixed_value' AS account_description

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
026fed2b-a4c7-4ab3-8326-67a64b8ec578.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,026fed2b-a4c7-4ab3-8326-67a64b8ec578,2024-02-15 12:58:19,2024-02-15 12:58:19.599115,grouped_transactions_unioned_with_original,SELECT 0,success,model,0.1385176181793213,2024-02-15T12:58:18.024507Z,2024-02-15T12:58:18.141508Z,2024-02-15T12:58:18.010992Z,2024-02-15T12:58:18.021509Z,0,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-4 (worker),table,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
e45ef96a-a832-407e-898c-7c35f393c3fb.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,e45ef96a-a832-407e-898c-7c35f393c3fb,2024-02-15 12:58:36,2024-02-15 12:58:36.615853,stg_dbt_models,CREATE VIEW,success,model,0.34360647201538086,2024-02-15T12:58:33.673932Z,2024-02-15T12:58:33.907542Z,2024-02-15T12:58:33.598932Z,2024-02-15T12:58:33.617936Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e45ef96a-a832-407e-898c-7c35f393c3fb.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,e45ef96a-a832-407e-898c-7c35f393c3fb,2024-02-15 12:58:36,2024-02-15 12:58:36.615853,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.3556027412414551,2024-02-15T12:58:33.621934Z,2024-02-15T12:58:33.913542Z,2024-02-15T12:58:33.580938Z,2024-02-15T12:58:33.613935Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e45ef96a-a832-407e-898c-7c35f393c3fb.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,e45ef96a-a832-407e-898c-7c35f393c3fb,2024-02-15 12:58:36,2024-02-15 12:58:36.615853,stg_dbt_invocations,CREATE VIEW,success,model,0.3645970821380615,2024-02-15T12:58:33.664933Z,2024-02-15T12:58:33.922543Z,2024-02-15T12:58:33.591934Z,2024-02-15T12:58:33.614935Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e45ef96a-a832-407e-898c-7c35f393c3fb.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,e45ef96a-a832-407e-898c-7c35f393c3fb,2024-02-15 12:58:36,2024-02-15 12:58:36.615853,stg_dbt_run_results,CREATE VIEW,success,model,0.3686046600341797,2024-02-15T12:58:33.685453Z,2024-02-15T12:58:33.930547Z,2024-02-15T12:58:33.607937Z,2024-02-15T12:58:33.620934Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e45ef96a-a832-407e-898c-7c35f393c3fb.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,e45ef96a-a832-407e-898c-7c35f393c3fb,2024-02-15 12:58:36,2024-02-15 12:58:36.615853,int_keep_models_relevant_package,CREATE VIEW,success,model,0.08975481986999512,2024-02-15T12:58:33.965547Z,2024-02-15T12:58:34.038298Z,2024-02-15T12:58:33.955551Z,2024-02-15T12:58:33.963544Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5f5c5853-2ee3-49a1-abbe-b4b4932259a0.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,5f5c5853-2ee3-49a1-abbe-b4b4932259a0,2024-02-16 08:46:16,2024-02-16 08:46:17.616923,stg_dbt_invocations,CREATE VIEW,success,model,0.5419418811798096,2024-02-16T08:46:12.098595Z,2024-02-16T08:46:12.436013Z,2024-02-16T08:46:11.930070Z,2024-02-16T08:46:11.956072Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e45ef96a-a832-407e-898c-7c35f393c3fb.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,e45ef96a-a832-407e-898c-7c35f393c3fb,2024-02-15 12:58:36,2024-02-15 12:58:36.615853,int_join_with_run_results,CREATE VIEW,success,model,0.0806272029876709,2024-02-15T12:58:34.057301Z,2024-02-15T12:58:34.123917Z,2024-02-15T12:58:34.050299Z,2024-02-15T12:58:34.055293Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e45ef96a-a832-407e-898c-7c35f393c3fb.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,e45ef96a-a832-407e-898c-7c35f393c3fb,2024-02-15 12:58:36,2024-02-15 12:58:36.615853,int_only_materialized_models,CREATE VIEW,success,model,0.216888427734375,2024-02-15T12:58:34.205447Z,2024-02-15T12:58:34.339336Z,2024-02-15T12:58:34.146445Z,2024-02-15T12:58:34.155446Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e45ef96a-a832-407e-898c-7c35f393c3fb.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,e45ef96a-a832-407e-898c-7c35f393c3fb,2024-02-15 12:58:36,2024-02-15 12:58:36.615853,fct_all_models_plus_code,SELECT 12,success,model,0.333984375,2024-02-15T12:58:34.156446Z,2024-02-15T12:58:34.457428Z,2024-02-15T12:58:34.140448Z,2024-02-15T12:58:34.152444Z,12,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

model_ids_and_code AS (

    SELECT
        DISTINCT(model_id),
        compiled_code

    FROM including_other_cols

)

SELECT * FROM model_ids_and_code",,,Thread-3 (worker),table,"{""_message"": ""SELECT 12"", ""code"": ""SELECT"", ""rows_affected"": 12}"
e45ef96a-a832-407e-898c-7c35f393c3fb.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,e45ef96a-a832-407e-898c-7c35f393c3fb,2024-02-15 12:58:36,2024-02-15 12:58:36.615853,int_include_monitoring_id,CREATE VIEW,success,model,0.1957721710205078,2024-02-15T12:58:34.458429Z,2024-02-15T12:58:34.556105Z,2024-02-15T12:58:34.406425Z,2024-02-15T12:58:34.423430Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e45ef96a-a832-407e-898c-7c35f393c3fb.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,e45ef96a-a832-407e-898c-7c35f393c3fb,2024-02-15 12:58:36,2024-02-15 12:58:36.615853,int_maintenance_fractions,CREATE VIEW,success,model,0.1027383804321289,2024-02-15T12:58:34.584103Z,2024-02-15T12:58:34.669850Z,2024-02-15T12:58:34.573104Z,2024-02-15T12:58:34.581102Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e45ef96a-a832-407e-898c-7c35f393c3fb.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,e45ef96a-a832-407e-898c-7c35f393c3fb,2024-02-15 12:58:36,2024-02-15 12:58:36.615853,fct_avg_maintenance_fractions,SELECT 3,success,model,0.12899422645568848,2024-02-15T12:58:34.691847Z,2024-02-15T12:58:34.805841Z,2024-02-15T12:58:34.682846Z,2024-02-15T12:58:34.689843Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-8 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
eb449906-16f9-4aa6-a5bd-e691063f1810.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,eb449906-16f9-4aa6-a5bd-e691063f1810,2024-02-15 13:21:04,2024-02-15 13:21:04.574851,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.35755467414855957,2024-02-15T13:21:00.911543Z,2024-02-15T13:21:01.213579Z,2024-02-15T13:21:00.875546Z,2024-02-15T13:21:00.904542Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eb449906-16f9-4aa6-a5bd-e691063f1810.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,eb449906-16f9-4aa6-a5bd-e691063f1810,2024-02-15 13:21:04,2024-02-15 13:21:04.574851,stg_dbt_models,CREATE VIEW,success,model,0.372560977935791,2024-02-15T13:21:00.972064Z,2024-02-15T13:21:01.230578Z,2024-02-15T13:21:00.891544Z,2024-02-15T13:21:00.906543Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eb449906-16f9-4aa6-a5bd-e691063f1810.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,eb449906-16f9-4aa6-a5bd-e691063f1810,2024-02-15 13:21:04,2024-02-15 13:21:04.574851,stg_dbt_run_results,CREATE VIEW,success,model,0.3800358772277832,2024-02-15T13:21:00.980064Z,2024-02-15T13:21:01.238579Z,2024-02-15T13:21:00.898547Z,2024-02-15T13:21:00.908553Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eb449906-16f9-4aa6-a5bd-e691063f1810.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,eb449906-16f9-4aa6-a5bd-e691063f1810,2024-02-15 13:21:04,2024-02-15 13:21:04.574851,int_keep_models_relevant_package,CREATE VIEW,success,model,0.08703970909118652,2024-02-15T13:21:01.275578Z,2024-02-15T13:21:01.349619Z,2024-02-15T13:21:01.266578Z,2024-02-15T13:21:01.272581Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eb449906-16f9-4aa6-a5bd-e691063f1810.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,eb449906-16f9-4aa6-a5bd-e691063f1810,2024-02-15 13:21:04,2024-02-15 13:21:04.574851,int_join_with_run_results,CREATE VIEW,success,model,0.08899998664855957,2024-02-15T13:21:01.372621Z,2024-02-15T13:21:01.446616Z,2024-02-15T13:21:01.362621Z,2024-02-15T13:21:01.369618Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eb449906-16f9-4aa6-a5bd-e691063f1810.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,eb449906-16f9-4aa6-a5bd-e691063f1810,2024-02-15 13:21:04,2024-02-15 13:21:04.574851,int_only_materialized_models,CREATE VIEW,success,model,0.17252254486083984,2024-02-15T13:21:01.537617Z,2024-02-15T13:21:01.630137Z,2024-02-15T13:21:01.474615Z,2024-02-15T13:21:01.485618Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eb449906-16f9-4aa6-a5bd-e691063f1810.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,eb449906-16f9-4aa6-a5bd-e691063f1810,2024-02-15 13:21:04,2024-02-15 13:21:04.574851,int_include_monitoring_id,CREATE VIEW,success,model,0.10860443115234375,2024-02-15T13:21:01.661146Z,2024-02-15T13:21:01.749745Z,2024-02-15T13:21:01.647138Z,2024-02-15T13:21:01.657135Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eb449906-16f9-4aa6-a5bd-e691063f1810.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,eb449906-16f9-4aa6-a5bd-e691063f1810,2024-02-15 13:21:04,2024-02-15 13:21:04.574851,fct_all_models_plus_code,"Database Error in model fct_all_models_plus_code (models\marts\fct_all_models_plus_code.sql)
  syntax error at or near "";""
  LINE 60:     AND i.compiled_at = m.latest_compiled_at;
                                                       ^
  compiled Code at target\run\view_selection_tool\models\marts\fct_all_models_plus_code.sql",error,model,0.3081212043762207,2024-02-15T13:21:01.486619Z,2024-02-15T13:21:01.586616Z,2024-02-15T13:21:01.465618Z,2024-02-15T13:21:01.483618Z,,false,"-- WITH
--
-- including_other_cols AS (
--
--     SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""
--
-- ),
--
-- model_ids_and_code AS (
--
--     SELECT
--         DISTINCT(model_id),
--         compiled_code
--
--     FROM including_other_cols
--
-- )
--
-- SELECT * FROM model_ids_and_code

WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compiled_at = m.latest_compiled_at;

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-1 (worker),table,{}
eb449906-16f9-4aa6-a5bd-e691063f1810.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,eb449906-16f9-4aa6-a5bd-e691063f1810,2024-02-15 13:21:04,2024-02-15 13:21:04.574851,int_maintenance_fractions,CREATE VIEW,success,model,0.11903262138366699,2024-02-15T13:21:01.789257Z,2024-02-15T13:21:01.883772Z,2024-02-15T13:21:01.773746Z,2024-02-15T13:21:01.786259Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
eb449906-16f9-4aa6-a5bd-e691063f1810.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,eb449906-16f9-4aa6-a5bd-e691063f1810,2024-02-15 13:21:04,2024-02-15 13:21:04.574851,fct_avg_maintenance_fractions,SELECT 3,success,model,0.20352935791015625,2024-02-15T13:21:01.911301Z,2024-02-15T13:21:02.096303Z,2024-02-15T13:21:01.899771Z,2024-02-15T13:21:01.908302Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-8 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
99f22575-c179-4dc2-8bcc-cf682586e8d3.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,99f22575-c179-4dc2-8bcc-cf682586e8d3,2024-02-15 13:21:40,2024-02-15 13:21:41.324481,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.4211728572845459,2024-02-15T13:21:37.640372Z,2024-02-15T13:21:37.991560Z,2024-02-15T13:21:37.595371Z,2024-02-15T13:21:37.629371Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
99f22575-c179-4dc2-8bcc-cf682586e8d3.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,99f22575-c179-4dc2-8bcc-cf682586e8d3,2024-02-15 13:21:40,2024-02-15 13:21:41.324481,stg_dbt_invocations,CREATE VIEW,success,model,0.42317986488342285,2024-02-15T13:21:37.697370Z,2024-02-15T13:21:37.997554Z,2024-02-15T13:21:37.601372Z,2024-02-15T13:21:37.631372Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
99f22575-c179-4dc2-8bcc-cf682586e8d3.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,99f22575-c179-4dc2-8bcc-cf682586e8d3,2024-02-15 13:21:40,2024-02-15 13:21:41.324481,stg_dbt_run_results,CREATE VIEW,success,model,0.4381875991821289,2024-02-15T13:21:37.716372Z,2024-02-15T13:21:38.016558Z,2024-02-15T13:21:37.619371Z,2024-02-15T13:21:37.636372Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
99f22575-c179-4dc2-8bcc-cf682586e8d3.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,99f22575-c179-4dc2-8bcc-cf682586e8d3,2024-02-15 13:21:40,2024-02-15 13:21:41.324481,stg_dbt_models,CREATE VIEW,success,model,0.44419217109680176,2024-02-15T13:21:37.708369Z,2024-02-15T13:21:38.019558Z,2024-02-15T13:21:37.609377Z,2024-02-15T13:21:37.633373Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
99f22575-c179-4dc2-8bcc-cf682586e8d3.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,99f22575-c179-4dc2-8bcc-cf682586e8d3,2024-02-15 13:21:40,2024-02-15 13:21:41.324481,int_keep_models_relevant_package,CREATE VIEW,success,model,0.11453628540039062,2024-02-15T13:21:38.056557Z,2024-02-15T13:21:38.153090Z,2024-02-15T13:21:38.044557Z,2024-02-15T13:21:38.054555Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
99f22575-c179-4dc2-8bcc-cf682586e8d3.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,99f22575-c179-4dc2-8bcc-cf682586e8d3,2024-02-15 13:21:40,2024-02-15 13:21:41.324481,int_join_with_run_results,CREATE VIEW,success,model,0.11752128601074219,2024-02-15T13:21:38.183091Z,2024-02-15T13:21:38.279608Z,2024-02-15T13:21:38.170089Z,2024-02-15T13:21:38.180089Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
99f22575-c179-4dc2-8bcc-cf682586e8d3.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,99f22575-c179-4dc2-8bcc-cf682586e8d3,2024-02-15 13:21:40,2024-02-15 13:21:41.324481,fct_all_models_plus_code,"Database Error in model fct_all_models_plus_code (models\marts\fct_all_models_plus_code.sql)
  column i.compiled_at does not exist
  LINE 60:     AND i.compiled_at = m.latest_compiled_at
                   ^
  compiled Code at target\run\view_selection_tool\models\marts\fct_all_models_plus_code.sql",error,model,0.18251729011535645,2024-02-15T13:21:38.322609Z,2024-02-15T13:21:38.439615Z,2024-02-15T13:21:38.301617Z,2024-02-15T13:21:38.318611Z,,false,"-- WITH
--
-- including_other_cols AS (
--
--     SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""
--
-- ),
--
-- model_ids_and_code AS (
--
--     SELECT
--         DISTINCT(model_id),
--         compiled_code
--
--     FROM including_other_cols
--
-- )
--
-- SELECT * FROM model_ids_and_code

WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compiled_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-1 (worker),table,{}
99f22575-c179-4dc2-8bcc-cf682586e8d3.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,99f22575-c179-4dc2-8bcc-cf682586e8d3,2024-02-15 13:21:40,2024-02-15 13:21:41.324481,int_only_materialized_models,CREATE VIEW,success,model,0.20351386070251465,2024-02-15T13:21:38.371608Z,2024-02-15T13:21:38.497130Z,2024-02-15T13:21:38.310610Z,2024-02-15T13:21:38.321609Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
99f22575-c179-4dc2-8bcc-cf682586e8d3.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,99f22575-c179-4dc2-8bcc-cf682586e8d3,2024-02-15 13:21:40,2024-02-15 13:21:41.324481,int_include_monitoring_id,CREATE VIEW,success,model,0.10200166702270508,2024-02-15T13:21:38.528131Z,2024-02-15T13:21:38.608126Z,2024-02-15T13:21:38.511127Z,2024-02-15T13:21:38.524146Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
99f22575-c179-4dc2-8bcc-cf682586e8d3.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,99f22575-c179-4dc2-8bcc-cf682586e8d3,2024-02-15 13:21:40,2024-02-15 13:21:41.324481,int_maintenance_fractions,CREATE VIEW,success,model,0.09299540519714355,2024-02-15T13:21:38.632130Z,2024-02-15T13:21:38.709127Z,2024-02-15T13:21:38.621132Z,2024-02-15T13:21:38.629125Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
99f22575-c179-4dc2-8bcc-cf682586e8d3.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,99f22575-c179-4dc2-8bcc-cf682586e8d3,2024-02-15 13:21:40,2024-02-15 13:21:41.324481,fct_avg_maintenance_fractions,SELECT 3,success,model,0.17106938362121582,2024-02-15T13:21:38.733128Z,2024-02-15T13:21:38.889190Z,2024-02-15T13:21:38.724128Z,2024-02-15T13:21:38.730127Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-8 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
23c0c2c0-785f-4f68-b5a6-ba5f141464b0.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,23c0c2c0-785f-4f68-b5a6-ba5f141464b0,2024-02-15 13:22:40,2024-02-15 13:22:40.704376,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.38458776473999023,2024-02-15T13:22:37.153106Z,2024-02-15T13:22:37.464684Z,2024-02-15T13:22:37.111101Z,2024-02-15T13:22:37.143032Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
23c0c2c0-785f-4f68-b5a6-ba5f141464b0.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,23c0c2c0-785f-4f68-b5a6-ba5f141464b0,2024-02-15 13:22:40,2024-02-15 13:22:40.704376,stg_dbt_run_results,CREATE VIEW,success,model,0.402585506439209,2024-02-15T13:22:37.226111Z,2024-02-15T13:22:37.493692Z,2024-02-15T13:22:37.135914Z,2024-02-15T13:22:37.150107Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
23c0c2c0-785f-4f68-b5a6-ba5f141464b0.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,23c0c2c0-785f-4f68-b5a6-ba5f141464b0,2024-02-15 13:22:40,2024-02-15 13:22:40.704376,stg_dbt_invocations,CREATE VIEW,success,model,0.41458725929260254,2024-02-15T13:22:37.202106Z,2024-02-15T13:22:37.501688Z,2024-02-15T13:22:37.122568Z,2024-02-15T13:22:37.144110Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
23c0c2c0-785f-4f68-b5a6-ba5f141464b0.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,23c0c2c0-785f-4f68-b5a6-ba5f141464b0,2024-02-15 13:22:40,2024-02-15 13:22:40.704376,stg_dbt_models,CREATE VIEW,success,model,0.4155843257904053,2024-02-15T13:22:37.212126Z,2024-02-15T13:22:37.504685Z,2024-02-15T13:22:37.128156Z,2024-02-15T13:22:37.146107Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
23c0c2c0-785f-4f68-b5a6-ba5f141464b0.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,23c0c2c0-785f-4f68-b5a6-ba5f141464b0,2024-02-15 13:22:40,2024-02-15 13:22:40.704376,int_keep_models_relevant_package,CREATE VIEW,success,model,0.09500241279602051,2024-02-15T13:22:37.550687Z,2024-02-15T13:22:37.625686Z,2024-02-15T13:22:37.537685Z,2024-02-15T13:22:37.547688Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
23c0c2c0-785f-4f68-b5a6-ba5f141464b0.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,23c0c2c0-785f-4f68-b5a6-ba5f141464b0,2024-02-15 13:22:40,2024-02-15 13:22:40.704376,int_join_with_run_results,CREATE VIEW,success,model,0.07999897003173828,2024-02-15T13:22:37.645686Z,2024-02-15T13:22:37.712694Z,2024-02-15T13:22:37.637686Z,2024-02-15T13:22:37.643687Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
23c0c2c0-785f-4f68-b5a6-ba5f141464b0.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,23c0c2c0-785f-4f68-b5a6-ba5f141464b0,2024-02-15 13:22:40,2024-02-15 13:22:40.704376,int_only_materialized_models,CREATE VIEW,success,model,0.1842501163482666,2024-02-15T13:22:37.798753Z,2024-02-15T13:22:37.899759Z,2024-02-15T13:22:37.740232Z,2024-02-15T13:22:37.749233Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
23c0c2c0-785f-4f68-b5a6-ba5f141464b0.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,23c0c2c0-785f-4f68-b5a6-ba5f141464b0,2024-02-15 13:22:40,2024-02-15 13:22:40.704376,fct_all_models_plus_code,SELECT 11,success,model,0.2580747604370117,2024-02-15T13:22:37.750234Z,2024-02-15T13:22:37.973752Z,2024-02-15T13:22:37.729138Z,2024-02-15T13:22:37.746232Z,11,false,"-- WITH
--
-- including_other_cols AS (
--
--     SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""
--
-- ),
--
-- model_ids_and_code AS (
--
--     SELECT
--         DISTINCT(model_id),
--         compiled_code
--
--     FROM including_other_cols
--
-- )
--
-- SELECT * FROM model_ids_and_code

WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-1 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
23c0c2c0-785f-4f68-b5a6-ba5f141464b0.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,23c0c2c0-785f-4f68-b5a6-ba5f141464b0,2024-02-15 13:22:40,2024-02-15 13:22:40.704376,int_include_monitoring_id,CREATE VIEW,success,model,0.1277327537536621,2024-02-15T13:22:37.974755Z,2024-02-15T13:22:38.044488Z,2024-02-15T13:22:37.943757Z,2024-02-15T13:22:37.953761Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
23c0c2c0-785f-4f68-b5a6-ba5f141464b0.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,23c0c2c0-785f-4f68-b5a6-ba5f141464b0,2024-02-15 13:22:40,2024-02-15 13:22:40.704376,int_maintenance_fractions,CREATE VIEW,success,model,0.13603782653808594,2024-02-15T13:22:38.066484Z,2024-02-15T13:22:38.188531Z,2024-02-15T13:22:38.057487Z,2024-02-15T13:22:38.063485Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
23c0c2c0-785f-4f68-b5a6-ba5f141464b0.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,23c0c2c0-785f-4f68-b5a6-ba5f141464b0,2024-02-15 13:22:40,2024-02-15 13:22:40.704376,fct_avg_maintenance_fractions,SELECT 3,success,model,0.12751126289367676,2024-02-15T13:22:38.209530Z,2024-02-15T13:22:38.324039Z,2024-02-15T13:22:38.201531Z,2024-02-15T13:22:38.207527Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-8 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
c4da474a-11fa-49cb-a0ed-4534766b88a9.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,c4da474a-11fa-49cb-a0ed-4534766b88a9,2024-02-15 15:30:02,2024-02-15 15:30:02.964465,stg_dbt_run_results,"Database Error in model stg_dbt_run_results (models\staging\stg_dbt_run_results.sql)
  relation ""elementary_src.dbt_run_results"" does not exist
  LINE 11:     SELECT * FROM ""postgres"".""elementary_src"".""dbt_run_resul...
                             ^
  compiled Code at target\run\view_selection_tool\models\staging\stg_dbt_run_results.sql",error,model,0.29809117317199707,2024-02-15T15:29:59.593341Z,2024-02-15T15:29:59.684436Z,2024-02-15T15:29:59.520371Z,2024-02-15T15:29:59.530344Z,,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""elementary_src"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,{}
c4da474a-11fa-49cb-a0ed-4534766b88a9.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,c4da474a-11fa-49cb-a0ed-4534766b88a9,2024-02-15 15:30:02,2024-02-15 15:30:02.964465,stg_dbt_models,"Database Error in model stg_dbt_models (models\staging\stg_dbt_models.sql)
  relation ""elementary_src.dbt_models"" does not exist
  LINE 11:     SELECT * FROM ""postgres"".""elementary_src"".""dbt_models""
                             ^
  compiled Code at target\run\view_selection_tool\models\staging\stg_dbt_models.sql",error,model,0.30208826065063477,2024-02-15T15:29:59.585341Z,2024-02-15T15:29:59.683436Z,2024-02-15T15:29:59.514346Z,2024-02-15T15:29:59.529364Z,,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""elementary_src"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,{}
c4da474a-11fa-49cb-a0ed-4534766b88a9.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,c4da474a-11fa-49cb-a0ed-4534766b88a9,2024-02-15 15:30:02,2024-02-15 15:30:02.964465,stg_data_monitoring_metrics,"Database Error in model stg_data_monitoring_metrics (models\staging\stg_data_monitoring_metrics.sql)
  relation ""elementary_src.data_monitoring_metrics"" does not exist
  LINE 11:     SELECT * FROM ""postgres"".""elementary_src"".""data_monitori...
                             ^
  compiled Code at target\run\view_selection_tool\models\staging\stg_data_monitoring_metrics.sql",error,model,0.30707526206970215,2024-02-15T15:29:59.533343Z,2024-02-15T15:29:59.662023Z,2024-02-15T15:29:59.497347Z,2024-02-15T15:29:59.525342Z,,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""elementary_src"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,{}
c4da474a-11fa-49cb-a0ed-4534766b88a9.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,c4da474a-11fa-49cb-a0ed-4534766b88a9,2024-02-15 15:30:02,2024-02-15 15:30:02.964465,stg_dbt_invocations,"Database Error in model stg_dbt_invocations (models\staging\stg_dbt_invocations.sql)
  relation ""elementary_src.dbt_invocations"" does not exist
  LINE 11:     SELECT * FROM ""postgres"".""elementary_src"".""dbt_invocatio...
                             ^
  compiled Code at target\run\view_selection_tool\models\staging\stg_dbt_invocations.sql",error,model,0.3060915470123291,2024-02-15T15:29:59.577340Z,2024-02-15T15:29:59.658435Z,2024-02-15T15:29:59.504343Z,2024-02-15T15:29:59.527341Z,,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""elementary_src"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,{}
c4da474a-11fa-49cb-a0ed-4534766b88a9.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,c4da474a-11fa-49cb-a0ed-4534766b88a9,2024-02-15 15:30:02,2024-02-15 15:30:02.964465,int_keep_models_relevant_package,,skipped,model,0,,,,,,false,,,,Thread-6 (worker),view,{}
c4da474a-11fa-49cb-a0ed-4534766b88a9.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,c4da474a-11fa-49cb-a0ed-4534766b88a9,2024-02-15 15:30:02,2024-02-15 15:30:02.964465,int_join_with_run_results,,skipped,model,0,,,,,,false,,,,Thread-8 (worker),view,{}
c4da474a-11fa-49cb-a0ed-4534766b88a9.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,c4da474a-11fa-49cb-a0ed-4534766b88a9,2024-02-15 15:30:02,2024-02-15 15:30:02.964465,fct_all_models_plus_code,,skipped,model,0,,,,,,false,,,,Thread-4 (worker),table,{}
c4da474a-11fa-49cb-a0ed-4534766b88a9.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,c4da474a-11fa-49cb-a0ed-4534766b88a9,2024-02-15 15:30:02,2024-02-15 15:30:02.964465,int_only_materialized_models,,skipped,model,0,,,,,,false,,,,Thread-3 (worker),view,{}
c4da474a-11fa-49cb-a0ed-4534766b88a9.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,c4da474a-11fa-49cb-a0ed-4534766b88a9,2024-02-15 15:30:02,2024-02-15 15:30:02.964465,int_include_monitoring_id,,skipped,model,0,,,,,,false,,,,Thread-1 (worker),view,{}
c4da474a-11fa-49cb-a0ed-4534766b88a9.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,c4da474a-11fa-49cb-a0ed-4534766b88a9,2024-02-15 15:30:02,2024-02-15 15:30:02.964465,int_maintenance_fractions,,skipped,model,0,,,,,,false,,,,Thread-6 (worker),view,{}
c4da474a-11fa-49cb-a0ed-4534766b88a9.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,c4da474a-11fa-49cb-a0ed-4534766b88a9,2024-02-15 15:30:02,2024-02-15 15:30:02.964465,fct_avg_maintenance_fractions,,skipped,model,0,,,,,,false,,,,Thread-8 (worker),table,{}
28859e6a-ec2a-4993-a209-e6fca4709cb8.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,28859e6a-ec2a-4993-a209-e6fca4709cb8,2024-02-15 15:31:44,2024-02-15 15:31:45.448881,stg_dbt_invocations,CREATE VIEW,success,model,0.35059022903442383,2024-02-15T15:31:40.459488Z,2024-02-15T15:31:40.705490Z,2024-02-15T15:31:40.375931Z,2024-02-15T15:31:40.402904Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e4e5b1e1-3a62-4707-905c-ceed0afa1ce4.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,e4e5b1e1-3a62-4707-905c-ceed0afa1ce4,2024-02-16 09:00:00,2024-02-16 09:00:01.349197,stg_dbt_invocations,CREATE VIEW,success,model,0.4469411373138428,2024-02-16T08:59:57.087819Z,2024-02-16T08:59:57.458747Z,2024-02-16T08:59:57.039808Z,2024-02-16T08:59:57.057809Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
28859e6a-ec2a-4993-a209-e6fca4709cb8.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,28859e6a-ec2a-4993-a209-e6fca4709cb8,2024-02-15 15:31:44,2024-02-15 15:31:45.448881,stg_dbt_models,CREATE VIEW,success,model,0.3685882091522217,2024-02-15T15:31:40.470488Z,2024-02-15T15:31:40.719494Z,2024-02-15T15:31:40.386929Z,2024-02-15T15:31:40.403903Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
28859e6a-ec2a-4993-a209-e6fca4709cb8.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,28859e6a-ec2a-4993-a209-e6fca4709cb8,2024-02-15 15:31:44,2024-02-15 15:31:45.448881,stg_dbt_run_results,CREATE VIEW,success,model,0.3695793151855469,2024-02-15T15:31:40.480490Z,2024-02-15T15:31:40.724492Z,2024-02-15T15:31:40.394902Z,2024-02-15T15:31:40.406900Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
28859e6a-ec2a-4993-a209-e6fca4709cb8.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,28859e6a-ec2a-4993-a209-e6fca4709cb8,2024-02-15 15:31:44,2024-02-15 15:31:45.448881,int_keep_models_relevant_package,CREATE VIEW,success,model,0.09199976921081543,2024-02-15T15:31:40.761489Z,2024-02-15T15:31:40.834490Z,2024-02-15T15:31:40.748496Z,2024-02-15T15:31:40.758487Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
28859e6a-ec2a-4993-a209-e6fca4709cb8.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,28859e6a-ec2a-4993-a209-e6fca4709cb8,2024-02-15 15:31:44,2024-02-15 15:31:45.448881,int_join_with_run_results,CREATE VIEW,success,model,0.09054756164550781,2024-02-15T15:31:40.855550Z,2024-02-15T15:31:40.933039Z,2024-02-15T15:31:40.846490Z,2024-02-15T15:31:40.853437Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        p.depends_on_nodes,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
28859e6a-ec2a-4993-a209-e6fca4709cb8.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,28859e6a-ec2a-4993-a209-e6fca4709cb8,2024-02-15 15:31:44,2024-02-15 15:31:45.448881,int_only_materialized_models,CREATE VIEW,success,model,0.17799997329711914,2024-02-15T15:31:41.001037Z,2024-02-15T15:31:41.111040Z,2024-02-15T15:31:40.953035Z,2024-02-15T15:31:40.963039Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
28859e6a-ec2a-4993-a209-e6fca4709cb8.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,28859e6a-ec2a-4993-a209-e6fca4709cb8,2024-02-15 15:31:44,2024-02-15 15:31:45.448881,fct_all_models_plus_code,SELECT 11,success,model,0.2660045623779297,2024-02-15T15:31:40.964038Z,2024-02-15T15:31:41.196037Z,2024-02-15T15:31:40.948038Z,2024-02-15T15:31:40.960037Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code,
        i.depends_on_nodes

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-2 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
28859e6a-ec2a-4993-a209-e6fca4709cb8.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,28859e6a-ec2a-4993-a209-e6fca4709cb8,2024-02-15 15:31:44,2024-02-15 15:31:45.448881,int_include_monitoring_id,CREATE VIEW,success,model,0.16299724578857422,2024-02-15T15:31:41.197039Z,2024-02-15T15:31:41.292038Z,2024-02-15T15:31:41.163041Z,2024-02-15T15:31:41.174044Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6703099f-90af-4553-90f2-0ffa1e660b86.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,6703099f-90af-4553-90f2-0ffa1e660b86,2024-02-16 08:36:55,2024-02-16 08:36:55.968327,int_only_materialized_models,CREATE VIEW,success,model,0.2720005512237549,2024-02-16T08:36:51.030441Z,2024-02-16T08:36:51.210446Z,2024-02-16T08:36:50.964441Z,2024-02-16T08:36:50.978441Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
28859e6a-ec2a-4993-a209-e6fca4709cb8.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,28859e6a-ec2a-4993-a209-e6fca4709cb8,2024-02-15 15:31:44,2024-02-15 15:31:45.448881,int_maintenance_fractions,CREATE VIEW,success,model,0.08100342750549316,2024-02-15T15:31:41.312039Z,2024-02-15T15:31:41.380035Z,2024-02-15T15:31:41.304040Z,2024-02-15T15:31:41.310037Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
28859e6a-ec2a-4993-a209-e6fca4709cb8.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,28859e6a-ec2a-4993-a209-e6fca4709cb8,2024-02-15 15:31:44,2024-02-15 15:31:45.448881,fct_avg_maintenance_fractions,SELECT 3,success,model,0.13900136947631836,2024-02-15T15:31:41.405037Z,2024-02-15T15:31:41.526067Z,2024-02-15T15:31:41.393038Z,2024-02-15T15:31:41.402036Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-8 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
6703099f-90af-4553-90f2-0ffa1e660b86.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,6703099f-90af-4553-90f2-0ffa1e660b86,2024-02-16 08:36:55,2024-02-16 08:36:55.968327,stg_dbt_invocations,CREATE VIEW,success,model,0.6076791286468506,2024-02-16T08:36:50.086866Z,2024-02-16T08:36:50.545883Z,2024-02-16T08:36:49.984870Z,2024-02-16T08:36:50.016871Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6703099f-90af-4553-90f2-0ffa1e660b86.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,6703099f-90af-4553-90f2-0ffa1e660b86,2024-02-16 08:36:55,2024-02-16 08:36:55.968327,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.6266858577728271,2024-02-16T08:36:50.025869Z,2024-02-16T08:36:50.553880Z,2024-02-16T08:36:49.966208Z,2024-02-16T08:36:50.014873Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6703099f-90af-4553-90f2-0ffa1e660b86.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,6703099f-90af-4553-90f2-0ffa1e660b86,2024-02-16 08:36:55,2024-02-16 08:36:55.968327,stg_dbt_models,CREATE VIEW,success,model,0.6396751403808594,2024-02-16T08:36:50.117866Z,2024-02-16T08:36:50.569881Z,2024-02-16T08:36:49.995871Z,2024-02-16T08:36:50.018872Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6703099f-90af-4553-90f2-0ffa1e660b86.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,6703099f-90af-4553-90f2-0ffa1e660b86,2024-02-16 08:36:55,2024-02-16 08:36:55.968327,stg_dbt_run_results,CREATE VIEW,success,model,0.643674373626709,2024-02-16T08:36:50.127866Z,2024-02-16T08:36:50.578882Z,2024-02-16T08:36:50.004869Z,2024-02-16T08:36:50.021871Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6703099f-90af-4553-90f2-0ffa1e660b86.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,6703099f-90af-4553-90f2-0ffa1e660b86,2024-02-16 08:36:55,2024-02-16 08:36:55.968327,int_keep_models_relevant_package,CREATE VIEW,success,model,0.1605687141418457,2024-02-16T08:36:50.642884Z,2024-02-16T08:36:50.772443Z,2024-02-16T08:36:50.622885Z,2024-02-16T08:36:50.638878Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6703099f-90af-4553-90f2-0ffa1e660b86.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,6703099f-90af-4553-90f2-0ffa1e660b86,2024-02-16 08:36:55,2024-02-16 08:36:55.968327,int_join_with_run_results,CREATE VIEW,success,model,0.13100910186767578,2024-02-16T08:36:50.819441Z,2024-02-16T08:36:50.922441Z,2024-02-16T08:36:50.799442Z,2024-02-16T08:36:50.815442Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        p.depends_on_nodes,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6703099f-90af-4553-90f2-0ffa1e660b86.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,6703099f-90af-4553-90f2-0ffa1e660b86,2024-02-16 08:36:55,2024-02-16 08:36:55.968327,fct_all_models_plus_code,SELECT 11,success,model,0.49852657318115234,2024-02-16T08:36:50.980441Z,2024-02-16T08:36:51.422955Z,2024-02-16T08:36:50.949440Z,2024-02-16T08:36:50.975441Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code,
        i.depends_on_nodes

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-2 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
6703099f-90af-4553-90f2-0ffa1e660b86.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,6703099f-90af-4553-90f2-0ffa1e660b86,2024-02-16 08:36:55,2024-02-16 08:36:55.968327,int_include_monitoring_id,CREATE VIEW,success,model,0.27803802490234375,2024-02-16T08:36:51.281443Z,2024-02-16T08:36:51.515482Z,2024-02-16T08:36:51.251445Z,2024-02-16T08:36:51.275442Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6703099f-90af-4553-90f2-0ffa1e660b86.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,6703099f-90af-4553-90f2-0ffa1e660b86,2024-02-16 08:36:55,2024-02-16 08:36:55.968327,int_maintenance_fractions,CREATE VIEW,success,model,0.15899157524108887,2024-02-16T08:36:51.563479Z,2024-02-16T08:36:51.693480Z,2024-02-16T08:36:51.546480Z,2024-02-16T08:36:51.559478Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6703099f-90af-4553-90f2-0ffa1e660b86.model.view_selection_tool.fct_downstream_models,model.view_selection_tool.fct_downstream_models,6703099f-90af-4553-90f2-0ffa1e660b86,2024-02-16 08:36:55,2024-02-16 08:36:55.968327,fct_downstream_models,"Database Error in model fct_downstream_models (models\marts\fct_downstream_models.sql)
  syntax error at or near ""unique_referenced_models""
  LINE 41:             unique_referenced_models
                       ^
  compiled Code at target\run\view_selection_tool\models\marts\fct_downstream_models.sql",error,model,0.35952281951904297,2024-02-16T08:36:51.494481Z,2024-02-16T08:36:51.596488Z,2024-02-16T08:36:51.463959Z,2024-02-16T08:36:51.489483Z,,false,"WITH

referenced_models AS (

    SELECT
        UNNEST(JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB)) AS referenced_model_id

    FROM ""postgres"".""transformed_view_selection_tool"".""fct_all_models_plus_code""

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

independent_model_ids AS (

    SELECT
        model_id

    FROM your_source_table

    WHERE model_id NOT IN
--           (SELECT referenced_model_id FROM unique_referenced_models)
            unique_referenced_models

)

    SELECT * independent_model_ids",,,Thread-6 (worker),table,{}
6703099f-90af-4553-90f2-0ffa1e660b86.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,6703099f-90af-4553-90f2-0ffa1e660b86,2024-02-16 08:36:55,2024-02-16 08:36:55.968327,fct_avg_maintenance_fractions,SELECT 3,success,model,0.30299925804138184,2024-02-16T08:36:51.735481Z,2024-02-16T08:36:52.009483Z,2024-02-16T08:36:51.715484Z,2024-02-16T08:36:51.730479Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-1 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
6844b420-96d1-453b-a0e8-408d0b507efd.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,6844b420-96d1-453b-a0e8-408d0b507efd,2024-02-16 08:37:28,2024-02-16 08:37:28.867816,stg_dbt_invocations,CREATE VIEW,success,model,0.4370841979980469,2024-02-16T08:37:24.791054Z,2024-02-16T08:37:25.102145Z,2024-02-16T08:37:24.703054Z,2024-02-16T08:37:24.725066Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6844b420-96d1-453b-a0e8-408d0b507efd.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,6844b420-96d1-453b-a0e8-408d0b507efd,2024-02-16 08:37:28,2024-02-16 08:37:28.867816,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.45609116554260254,2024-02-16T08:37:24.733055Z,2024-02-16T08:37:25.109145Z,2024-02-16T08:37:24.694058Z,2024-02-16T08:37:24.724056Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,stg_groups,CREATE VIEW,success,model,0.7992343902587891,2024-02-22T09:41:08.556916Z,2024-02-22T09:41:09.123153Z,2024-02-22T09:41:08.406918Z,2024-02-22T09:41:08.494919Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 10000

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6844b420-96d1-453b-a0e8-408d0b507efd.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,6844b420-96d1-453b-a0e8-408d0b507efd,2024-02-16 08:37:28,2024-02-16 08:37:28.867816,stg_dbt_run_results,CREATE VIEW,success,model,0.45908522605895996,2024-02-16T08:37:24.813054Z,2024-02-16T08:37:25.120146Z,2024-02-16T08:37:24.717058Z,2024-02-16T08:37:24.729053Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6844b420-96d1-453b-a0e8-408d0b507efd.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,6844b420-96d1-453b-a0e8-408d0b507efd,2024-02-16 08:37:28,2024-02-16 08:37:28.867816,stg_dbt_models,CREATE VIEW,success,model,0.4650905132293701,2024-02-16T08:37:24.802054Z,2024-02-16T08:37:25.126143Z,2024-02-16T08:37:24.710054Z,2024-02-16T08:37:24.727055Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6844b420-96d1-453b-a0e8-408d0b507efd.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,6844b420-96d1-453b-a0e8-408d0b507efd,2024-02-16 08:37:28,2024-02-16 08:37:28.867816,int_keep_models_relevant_package,CREATE VIEW,success,model,0.12012338638305664,2024-02-16T08:37:25.179144Z,2024-02-16T08:37:25.276271Z,2024-02-16T08:37:25.164150Z,2024-02-16T08:37:25.175145Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6844b420-96d1-453b-a0e8-408d0b507efd.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,6844b420-96d1-453b-a0e8-408d0b507efd,2024-02-16 08:37:28,2024-02-16 08:37:28.867816,int_join_with_run_results,CREATE VIEW,success,model,0.12300539016723633,2024-02-16T08:37:25.310269Z,2024-02-16T08:37:25.411270Z,2024-02-16T08:37:25.295270Z,2024-02-16T08:37:25.306269Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        p.depends_on_nodes,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6844b420-96d1-453b-a0e8-408d0b507efd.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,6844b420-96d1-453b-a0e8-408d0b507efd,2024-02-16 08:37:28,2024-02-16 08:37:28.867816,int_only_materialized_models,CREATE VIEW,success,model,0.21200084686279297,2024-02-16T08:37:25.491268Z,2024-02-16T08:37:25.636268Z,2024-02-16T08:37:25.443270Z,2024-02-16T08:37:25.455271Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6844b420-96d1-453b-a0e8-408d0b507efd.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,6844b420-96d1-453b-a0e8-408d0b507efd,2024-02-16 08:37:28,2024-02-16 08:37:28.867816,fct_all_models_plus_code,SELECT 11,success,model,0.3410053253173828,2024-02-16T08:37:25.459268Z,2024-02-16T08:37:25.762269Z,2024-02-16T08:37:25.433273Z,2024-02-16T08:37:25.454270Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code,
        i.depends_on_nodes

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-2 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
6844b420-96d1-453b-a0e8-408d0b507efd.model.view_selection_tool.fct_downstream_models,model.view_selection_tool.fct_downstream_models,6844b420-96d1-453b-a0e8-408d0b507efd,2024-02-16 08:37:28,2024-02-16 08:37:28.867816,fct_downstream_models,"Database Error in model fct_downstream_models (models\marts\fct_downstream_models.sql)
  syntax error at or near ""unique_referenced_models""
  LINE 41:             unique_referenced_models
                       ^
  compiled Code at target\run\view_selection_tool\models\marts\fct_downstream_models.sql",error,model,0.10653066635131836,2024-02-16T08:37:25.802805Z,2024-02-16T08:37:25.865340Z,2024-02-16T08:37:25.785810Z,2024-02-16T08:37:25.797804Z,,false,"WITH

referenced_models AS (

    SELECT
        UNNEST(JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB)) AS referenced_model_id

    FROM ""postgres"".""transformed_view_selection_tool"".""fct_all_models_plus_code""

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

independent_model_ids AS (

    SELECT
        model_id

    FROM your_source_table

    WHERE model_id NOT IN
--           (SELECT referenced_model_id FROM unique_referenced_models)
            unique_referenced_models

)

    SELECT * independent_model_ids",,,Thread-6 (worker),table,{}
a9ae0a48-2066-406c-a409-0b8f6d4fed54.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,a9ae0a48-2066-406c-a409-0b8f6d4fed54,2024-02-16 08:39:48,2024-02-16 08:39:48.837441,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.6132042407989502,2024-02-16T08:39:43.229349Z,2024-02-16T08:39:43.761550Z,2024-02-16T08:39:43.178348Z,2024-02-16T08:39:43.215349Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6844b420-96d1-453b-a0e8-408d0b507efd.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,6844b420-96d1-453b-a0e8-408d0b507efd,2024-02-16 08:37:28,2024-02-16 08:37:28.867816,int_include_monitoring_id,CREATE VIEW,success,model,0.3210716247558594,2024-02-16T08:37:25.726271Z,2024-02-16T08:37:25.985343Z,2024-02-16T08:37:25.671270Z,2024-02-16T08:37:25.721270Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6844b420-96d1-453b-a0e8-408d0b507efd.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,6844b420-96d1-453b-a0e8-408d0b507efd,2024-02-16 08:37:28,2024-02-16 08:37:28.867816,int_maintenance_fractions,CREATE VIEW,success,model,0.11800527572631836,2024-02-16T08:37:26.020345Z,2024-02-16T08:37:26.115341Z,2024-02-16T08:37:26.005339Z,2024-02-16T08:37:26.016342Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6844b420-96d1-453b-a0e8-408d0b507efd.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,6844b420-96d1-453b-a0e8-408d0b507efd,2024-02-16 08:37:28,2024-02-16 08:37:28.867816,fct_avg_maintenance_fractions,SELECT 3,success,model,0.1529982089996338,2024-02-16T08:37:26.150344Z,2024-02-16T08:37:26.281338Z,2024-02-16T08:37:26.135338Z,2024-02-16T08:37:26.146338Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-1 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
96afee47-b55d-4dca-8626-6b1269f10580.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,96afee47-b55d-4dca-8626-6b1269f10580,2024-02-16 08:38:18,2024-02-16 08:38:19.511373,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.4470024108886719,2024-02-16T08:38:14.707703Z,2024-02-16T08:38:15.084702Z,2024-02-16T08:38:14.664706Z,2024-02-16T08:38:14.697697Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
96afee47-b55d-4dca-8626-6b1269f10580.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,96afee47-b55d-4dca-8626-6b1269f10580,2024-02-16 08:38:18,2024-02-16 08:38:19.511373,stg_dbt_invocations,CREATE VIEW,success,model,0.4569988250732422,2024-02-16T08:38:14.767702Z,2024-02-16T08:38:15.090704Z,2024-02-16T08:38:14.676698Z,2024-02-16T08:38:14.699703Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
96afee47-b55d-4dca-8626-6b1269f10580.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,96afee47-b55d-4dca-8626-6b1269f10580,2024-02-16 08:38:18,2024-02-16 08:38:19.511373,stg_dbt_run_results,CREATE VIEW,success,model,0.4570045471191406,2024-02-16T08:38:14.790702Z,2024-02-16T08:38:15.094699Z,2024-02-16T08:38:14.691699Z,2024-02-16T08:38:14.704700Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
96afee47-b55d-4dca-8626-6b1269f10580.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,96afee47-b55d-4dca-8626-6b1269f10580,2024-02-16 08:38:18,2024-02-16 08:38:19.511373,stg_dbt_models,CREATE VIEW,success,model,0.46700477600097656,2024-02-16T08:38:14.777699Z,2024-02-16T08:38:15.102700Z,2024-02-16T08:38:14.682699Z,2024-02-16T08:38:14.701704Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
96afee47-b55d-4dca-8626-6b1269f10580.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,96afee47-b55d-4dca-8626-6b1269f10580,2024-02-16 08:38:18,2024-02-16 08:38:19.511373,int_keep_models_relevant_package,CREATE VIEW,success,model,0.10099911689758301,2024-02-16T08:38:15.158698Z,2024-02-16T08:38:15.238697Z,2024-02-16T08:38:15.143705Z,2024-02-16T08:38:15.154699Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
96afee47-b55d-4dca-8626-6b1269f10580.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,96afee47-b55d-4dca-8626-6b1269f10580,2024-02-16 08:38:18,2024-02-16 08:38:19.511373,int_join_with_run_results,CREATE VIEW,success,model,0.0989990234375,2024-02-16T08:38:15.265700Z,2024-02-16T08:38:15.345697Z,2024-02-16T08:38:15.253700Z,2024-02-16T08:38:15.262701Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        p.depends_on_nodes,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
96afee47-b55d-4dca-8626-6b1269f10580.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,96afee47-b55d-4dca-8626-6b1269f10580,2024-02-16 08:38:18,2024-02-16 08:38:19.511373,int_only_materialized_models,CREATE VIEW,success,model,0.19000005722045898,2024-02-16T08:38:15.418697Z,2024-02-16T08:38:15.547698Z,2024-02-16T08:38:15.373696Z,2024-02-16T08:38:15.384701Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
96afee47-b55d-4dca-8626-6b1269f10580.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,96afee47-b55d-4dca-8626-6b1269f10580,2024-02-16 08:38:18,2024-02-16 08:38:19.511373,fct_all_models_plus_code,SELECT 11,success,model,0.31952881813049316,2024-02-16T08:38:15.387698Z,2024-02-16T08:38:15.674216Z,2024-02-16T08:38:15.365700Z,2024-02-16T08:38:15.383698Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code,
        i.depends_on_nodes

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-1 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
96afee47-b55d-4dca-8626-6b1269f10580.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,96afee47-b55d-4dca-8626-6b1269f10580,2024-02-16 08:38:18,2024-02-16 08:38:19.511373,int_include_monitoring_id,CREATE VIEW,success,model,0.2115330696105957,2024-02-16T08:38:15.638220Z,2024-02-16T08:38:15.782221Z,2024-02-16T08:38:15.583700Z,2024-02-16T08:38:15.633221Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
96afee47-b55d-4dca-8626-6b1269f10580.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,96afee47-b55d-4dca-8626-6b1269f10580,2024-02-16 08:38:18,2024-02-16 08:38:19.511373,fct_destination_nodes,"Database Error in model fct_destination_nodes (models\marts\fct_destination_nodes.sql)
  syntax error at or near ""independent_model_ids""
  LINE 45:     SELECT * independent_model_ids
                        ^
  compiled Code at target\run\view_selection_tool\models\marts\fct_destination_nodes.sql",error,model,0.13899922370910645,2024-02-16T08:38:15.716221Z,2024-02-16T08:38:15.777220Z,2024-02-16T08:38:15.697219Z,2024-02-16T08:38:15.710218Z,,false,"WITH

referenced_models AS (

    SELECT
        UNNEST(JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB)) AS referenced_model_id

    FROM ""postgres"".""transformed_view_selection_tool"".""fct_all_models_plus_code""

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

independent_model_ids AS (

    SELECT
        model_id

    FROM your_source_table

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)
--             unique_referenced_models

)

    SELECT * independent_model_ids",,,Thread-6 (worker),table,{}
96afee47-b55d-4dca-8626-6b1269f10580.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,96afee47-b55d-4dca-8626-6b1269f10580,2024-02-16 08:38:18,2024-02-16 08:38:19.511373,int_maintenance_fractions,CREATE VIEW,success,model,0.14299964904785156,2024-02-16T08:38:15.821217Z,2024-02-16T08:38:15.939223Z,2024-02-16T08:38:15.806220Z,2024-02-16T08:38:15.814221Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
96afee47-b55d-4dca-8626-6b1269f10580.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,96afee47-b55d-4dca-8626-6b1269f10580,2024-02-16 08:38:18,2024-02-16 08:38:19.511373,fct_avg_maintenance_fractions,SELECT 3,success,model,0.2787473201751709,2024-02-16T08:38:15.976220Z,2024-02-16T08:38:16.230963Z,2024-02-16T08:38:15.961222Z,2024-02-16T08:38:15.972219Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-2 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
a9ae0a48-2066-406c-a409-0b8f6d4fed54.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,a9ae0a48-2066-406c-a409-0b8f6d4fed54,2024-02-16 08:39:48,2024-02-16 08:39:48.837441,stg_dbt_models,CREATE VIEW,success,model,0.6352031230926514,2024-02-16T08:39:43.389348Z,2024-02-16T08:39:43.781546Z,2024-02-16T08:39:43.195347Z,2024-02-16T08:39:43.220348Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a9ae0a48-2066-406c-a409-0b8f6d4fed54.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,a9ae0a48-2066-406c-a409-0b8f6d4fed54,2024-02-16 08:39:48,2024-02-16 08:39:48.837441,stg_dbt_run_results,CREATE VIEW,success,model,0.6402053833007812,2024-02-16T08:39:43.410380Z,2024-02-16T08:39:43.788550Z,2024-02-16T08:39:43.204346Z,2024-02-16T08:39:43.224350Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a9ae0a48-2066-406c-a409-0b8f6d4fed54.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,a9ae0a48-2066-406c-a409-0b8f6d4fed54,2024-02-16 08:39:48,2024-02-16 08:39:48.837441,int_keep_models_relevant_package,CREATE VIEW,success,model,0.13900256156921387,2024-02-16T08:39:43.855549Z,2024-02-16T08:39:43.965546Z,2024-02-16T08:39:43.834548Z,2024-02-16T08:39:43.850552Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a9ae0a48-2066-406c-a409-0b8f6d4fed54.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,a9ae0a48-2066-406c-a409-0b8f6d4fed54,2024-02-16 08:39:48,2024-02-16 08:39:48.837441,int_join_with_run_results,CREATE VIEW,success,model,0.15099740028381348,2024-02-16T08:39:43.999551Z,2024-02-16T08:39:44.125551Z,2024-02-16T08:39:43.984555Z,2024-02-16T08:39:43.995548Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        p.depends_on_nodes,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a9ae0a48-2066-406c-a409-0b8f6d4fed54.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,a9ae0a48-2066-406c-a409-0b8f6d4fed54,2024-02-16 08:39:48,2024-02-16 08:39:48.837441,int_only_materialized_models,CREATE VIEW,success,model,0.2919797897338867,2024-02-16T08:39:44.227546Z,2024-02-16T08:39:44.433549Z,2024-02-16T08:39:44.170548Z,2024-02-16T08:39:44.186549Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a9ae0a48-2066-406c-a409-0b8f6d4fed54.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,a9ae0a48-2066-406c-a409-0b8f6d4fed54,2024-02-16 08:39:48,2024-02-16 08:39:48.837441,fct_all_models_plus_code,SELECT 11,success,model,0.42099952697753906,2024-02-16T08:39:44.192551Z,2024-02-16T08:39:44.553548Z,2024-02-16T08:39:44.159549Z,2024-02-16T08:39:44.183546Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code,
        i.depends_on_nodes

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-1 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
a9ae0a48-2066-406c-a409-0b8f6d4fed54.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,a9ae0a48-2066-406c-a409-0b8f6d4fed54,2024-02-16 08:39:48,2024-02-16 08:39:48.837441,int_include_monitoring_id,CREATE VIEW,success,model,0.23152804374694824,2024-02-16T08:39:44.554547Z,2024-02-16T08:39:44.717081Z,2024-02-16T08:39:44.506550Z,2024-02-16T08:39:44.524549Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3520cae6-5da9-490e-8b13-bf7d6346412b.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,3520cae6-5da9-490e-8b13-bf7d6346412b,2024-02-16 08:42:45,2024-02-16 08:42:46.203251,stg_dbt_models,CREATE VIEW,success,model,0.4225125312805176,2024-02-16T08:42:41.555911Z,2024-02-16T08:42:41.859424Z,2024-02-16T08:42:41.473910Z,2024-02-16T08:42:41.488913Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a9ae0a48-2066-406c-a409-0b8f6d4fed54.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,a9ae0a48-2066-406c-a409-0b8f6d4fed54,2024-02-16 08:39:48,2024-02-16 08:39:48.837441,fct_destination_nodes,"Database Error in model fct_destination_nodes (models\marts\fct_destination_nodes.sql)
  function unnest(text) does not exist
  LINE 17:         UNNEST(JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::J...
                   ^
  HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
  compiled Code at target\run\view_selection_tool\models\marts\fct_destination_nodes.sql",error,model,0.28451967239379883,2024-02-16T08:39:44.614549Z,2024-02-16T08:39:44.719076Z,2024-02-16T08:39:44.595548Z,2024-02-16T08:39:44.609547Z,,false,"WITH

referenced_models AS (

    SELECT
        UNNEST(JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB)) AS referenced_model_id

    FROM ""postgres"".""transformed_view_selection_tool"".""fct_all_models_plus_code""

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

independent_model_ids AS (

    SELECT
        model_id

    FROM your_source_table

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)
--             unique_referenced_models

)

    SELECT * from independent_model_ids",,,Thread-6 (worker),table,{}
a9ae0a48-2066-406c-a409-0b8f6d4fed54.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,a9ae0a48-2066-406c-a409-0b8f6d4fed54,2024-02-16 08:39:48,2024-02-16 08:39:48.837441,int_maintenance_fractions,CREATE VIEW,success,model,0.24300765991210938,2024-02-16T08:39:44.855075Z,2024-02-16T08:39:44.985074Z,2024-02-16T08:39:44.753073Z,2024-02-16T08:39:44.850072Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a9ae0a48-2066-406c-a409-0b8f6d4fed54.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,a9ae0a48-2066-406c-a409-0b8f6d4fed54,2024-02-16 08:39:48,2024-02-16 08:39:48.837441,fct_avg_maintenance_fractions,SELECT 3,success,model,0.18100452423095703,2024-02-16T08:39:45.026077Z,2024-02-16T08:39:45.181072Z,2024-02-16T08:39:45.009073Z,2024-02-16T08:39:45.022080Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-2 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
31ec435a-b9ee-4176-94b7-00bec0cd801f.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,31ec435a-b9ee-4176-94b7-00bec0cd801f,2024-02-16 08:42:04,2024-02-16 08:42:04.904866,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.5135610103607178,2024-02-16T08:41:59.893851Z,2024-02-16T08:42:00.343411Z,2024-02-16T08:41:59.856852Z,2024-02-16T08:41:59.885853Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
31ec435a-b9ee-4176-94b7-00bec0cd801f.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,31ec435a-b9ee-4176-94b7-00bec0cd801f,2024-02-16 08:42:04,2024-02-16 08:42:04.904866,stg_dbt_invocations,CREATE VIEW,success,model,0.5225667953491211,2024-02-16T08:41:59.961851Z,2024-02-16T08:42:00.349410Z,2024-02-16T08:41:59.865852Z,2024-02-16T08:41:59.887851Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
31ec435a-b9ee-4176-94b7-00bec0cd801f.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,31ec435a-b9ee-4176-94b7-00bec0cd801f,2024-02-16 08:42:04,2024-02-16 08:42:04.904866,stg_dbt_models,CREATE VIEW,success,model,0.5245604515075684,2024-02-16T08:41:59.971849Z,2024-02-16T08:42:00.353411Z,2024-02-16T08:41:59.871851Z,2024-02-16T08:41:59.889850Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
31ec435a-b9ee-4176-94b7-00bec0cd801f.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,31ec435a-b9ee-4176-94b7-00bec0cd801f,2024-02-16 08:42:04,2024-02-16 08:42:04.904866,stg_dbt_run_results,CREATE VIEW,success,model,0.5305595397949219,2024-02-16T08:41:59.980850Z,2024-02-16T08:42:00.361420Z,2024-02-16T08:41:59.877850Z,2024-02-16T08:41:59.891850Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
31ec435a-b9ee-4176-94b7-00bec0cd801f.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,31ec435a-b9ee-4176-94b7-00bec0cd801f,2024-02-16 08:42:04,2024-02-16 08:42:04.904866,int_keep_models_relevant_package,CREATE VIEW,success,model,0.1139991283416748,2024-02-16T08:42:00.422411Z,2024-02-16T08:42:00.508410Z,2024-02-16T08:42:00.401417Z,2024-02-16T08:42:00.419411Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
31ec435a-b9ee-4176-94b7-00bec0cd801f.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,31ec435a-b9ee-4176-94b7-00bec0cd801f,2024-02-16 08:42:04,2024-02-16 08:42:04.904866,int_join_with_run_results,CREATE VIEW,success,model,0.13700008392333984,2024-02-16T08:42:00.540413Z,2024-02-16T08:42:00.653410Z,2024-02-16T08:42:00.526414Z,2024-02-16T08:42:00.537410Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        p.depends_on_nodes,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
31ec435a-b9ee-4176-94b7-00bec0cd801f.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,31ec435a-b9ee-4176-94b7-00bec0cd801f,2024-02-16 08:42:04,2024-02-16 08:42:04.904866,int_only_materialized_models,CREATE VIEW,success,model,0.24257373809814453,2024-02-16T08:42:00.772978Z,2024-02-16T08:42:00.910980Z,2024-02-16T08:42:00.694411Z,2024-02-16T08:42:00.712413Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
31ec435a-b9ee-4176-94b7-00bec0cd801f.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,31ec435a-b9ee-4176-94b7-00bec0cd801f,2024-02-16 08:42:04,2024-02-16 08:42:04.904866,fct_all_models_plus_code,SELECT 11,success,model,0.35956311225891113,2024-02-16T08:42:00.713412Z,2024-02-16T08:42:01.019978Z,2024-02-16T08:42:00.682413Z,2024-02-16T08:42:00.708413Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code,
        i.depends_on_nodes

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-1 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
31ec435a-b9ee-4176-94b7-00bec0cd801f.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,31ec435a-b9ee-4176-94b7-00bec0cd801f,2024-02-16 08:42:04,2024-02-16 08:42:04.904866,int_include_monitoring_id,CREATE VIEW,success,model,0.201002836227417,2024-02-16T08:42:01.020978Z,2024-02-16T08:42:01.137979Z,2024-02-16T08:42:00.948983Z,2024-02-16T08:42:00.993980Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
31ec435a-b9ee-4176-94b7-00bec0cd801f.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,31ec435a-b9ee-4176-94b7-00bec0cd801f,2024-02-16 08:42:04,2024-02-16 08:42:04.904866,fct_destination_nodes,"Database Error in model fct_destination_nodes (models\marts\fct_destination_nodes.sql)
  relation ""your_source_table"" does not exist
  LINE 37:     FROM your_source_table
                    ^
  compiled Code at target\run\view_selection_tool\models\marts\fct_destination_nodes.sql",error,model,0.22199511528015137,2024-02-16T08:42:01.068980Z,2024-02-16T08:42:01.140984Z,2024-02-16T08:42:01.052981Z,2024-02-16T08:42:01.063979Z,,false,"WITH

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM ""postgres"".""transformed_view_selection_tool"".""fct_all_models_plus_code""

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

independent_model_ids AS (

    SELECT
        model_id

    FROM your_source_table

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)
--             unique_referenced_models

)

    SELECT * from independent_model_ids",,,Thread-6 (worker),table,{}
31ec435a-b9ee-4176-94b7-00bec0cd801f.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,31ec435a-b9ee-4176-94b7-00bec0cd801f,2024-02-16 08:42:04,2024-02-16 08:42:04.904866,int_maintenance_fractions,CREATE VIEW,success,model,0.1979978084564209,2024-02-16T08:42:01.252980Z,2024-02-16T08:42:01.355982Z,2024-02-16T08:42:01.163979Z,2024-02-16T08:42:01.249979Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
31ec435a-b9ee-4176-94b7-00bec0cd801f.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,31ec435a-b9ee-4176-94b7-00bec0cd801f,2024-02-16 08:42:04,2024-02-16 08:42:04.904866,fct_avg_maintenance_fractions,SELECT 3,success,model,0.13099884986877441,2024-02-16T08:42:01.381979Z,2024-02-16T08:42:01.496979Z,2024-02-16T08:42:01.371980Z,2024-02-16T08:42:01.378978Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-2 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
3520cae6-5da9-490e-8b13-bf7d6346412b.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,3520cae6-5da9-490e-8b13-bf7d6346412b,2024-02-16 08:42:45,2024-02-16 08:42:46.203251,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.43651509284973145,2024-02-16T08:42:41.494909Z,2024-02-16T08:42:41.867425Z,2024-02-16T08:42:41.459911Z,2024-02-16T08:42:41.485912Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3520cae6-5da9-490e-8b13-bf7d6346412b.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,3520cae6-5da9-490e-8b13-bf7d6346412b,2024-02-16 08:42:45,2024-02-16 08:42:46.203251,stg_dbt_run_results,CREATE VIEW,success,model,0.4335150718688965,2024-02-16T08:42:41.563911Z,2024-02-16T08:42:41.870428Z,2024-02-16T08:42:41.478910Z,2024-02-16T08:42:41.490913Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3520cae6-5da9-490e-8b13-bf7d6346412b.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,3520cae6-5da9-490e-8b13-bf7d6346412b,2024-02-16 08:42:45,2024-02-16 08:42:46.203251,int_keep_models_relevant_package,CREATE VIEW,success,model,0.10000419616699219,2024-02-16T08:42:41.918428Z,2024-02-16T08:42:42.000424Z,2024-02-16T08:42:41.907425Z,2024-02-16T08:42:41.914424Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3520cae6-5da9-490e-8b13-bf7d6346412b.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,3520cae6-5da9-490e-8b13-bf7d6346412b,2024-02-16 08:42:45,2024-02-16 08:42:46.203251,int_join_with_run_results,CREATE VIEW,success,model,0.10900545120239258,2024-02-16T08:42:42.026428Z,2024-02-16T08:42:42.117433Z,2024-02-16T08:42:42.015425Z,2024-02-16T08:42:42.024424Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        p.depends_on_nodes,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3520cae6-5da9-490e-8b13-bf7d6346412b.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,3520cae6-5da9-490e-8b13-bf7d6346412b,2024-02-16 08:42:45,2024-02-16 08:42:46.203251,int_only_materialized_models,CREATE VIEW,success,model,0.23061013221740723,2024-02-16T08:42:42.197988Z,2024-02-16T08:42:42.355027Z,2024-02-16T08:42:42.150986Z,2024-02-16T08:42:42.160993Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3520cae6-5da9-490e-8b13-bf7d6346412b.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,3520cae6-5da9-490e-8b13-bf7d6346412b,2024-02-16 08:42:45,2024-02-16 08:42:46.203251,fct_all_models_plus_code,SELECT 11,success,model,0.34738826751708984,2024-02-16T08:42:42.164986Z,2024-02-16T08:42:42.476811Z,2024-02-16T08:42:42.143003Z,2024-02-16T08:42:42.158988Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code,
        i.depends_on_nodes

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-3 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
3520cae6-5da9-490e-8b13-bf7d6346412b.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,3520cae6-5da9-490e-8b13-bf7d6346412b,2024-02-16 08:42:45,2024-02-16 08:42:46.203251,int_include_monitoring_id,CREATE VIEW,success,model,0.2287917137145996,2024-02-16T08:42:42.440812Z,2024-02-16T08:42:42.608813Z,2024-02-16T08:42:42.416812Z,2024-02-16T08:42:42.436814Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3520cae6-5da9-490e-8b13-bf7d6346412b.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,3520cae6-5da9-490e-8b13-bf7d6346412b,2024-02-16 08:42:45,2024-02-16 08:42:46.203251,fct_destination_nodes,SELECT 1,success,model,0.29154086112976074,2024-02-16T08:42:42.521815Z,2024-02-16T08:42:42.785344Z,2024-02-16T08:42:42.502813Z,2024-02-16T08:42:42.516813Z,1,false,"WITH

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM ""postgres"".""transformed_view_selection_tool"".""fct_all_models_plus_code""

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

independent_model_ids AS (

    SELECT
        model_id

    FROM ""postgres"".""transformed_view_selection_tool"".""fct_all_models_plus_code""

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)
--             unique_referenced_models

)

    SELECT * from independent_model_ids",,,Thread-6 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
3520cae6-5da9-490e-8b13-bf7d6346412b.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,3520cae6-5da9-490e-8b13-bf7d6346412b,2024-02-16 08:42:45,2024-02-16 08:42:46.203251,int_maintenance_fractions,CREATE VIEW,success,model,0.14800739288330078,2024-02-16T08:42:42.741346Z,2024-02-16T08:42:42.866344Z,2024-02-16T08:42:42.727344Z,2024-02-16T08:42:42.736346Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3520cae6-5da9-490e-8b13-bf7d6346412b.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,3520cae6-5da9-490e-8b13-bf7d6346412b,2024-02-16 08:42:45,2024-02-16 08:42:46.203251,fct_avg_maintenance_fractions,SELECT 3,success,model,0.16300177574157715,2024-02-16T08:42:42.901347Z,2024-02-16T08:42:43.040379Z,2024-02-16T08:42:42.884350Z,2024-02-16T08:42:42.897348Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-7 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
f8ea7205-f531-46cd-80f8-7cd7c027254f.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,f8ea7205-f531-46cd-80f8-7cd7c027254f,2024-02-16 08:45:33,2024-02-16 08:45:34.109404,stg_dbt_invocations,"Database Error in model stg_dbt_invocations (models\staging\stg_dbt_invocations.sql)
  relation ""elementary_src.dbt_invocations"" does not exist
  LINE 11:     SELECT * FROM ""postgres"".""elementary_src"".""dbt_invocatio...
                             ^
  compiled Code at target\run\view_selection_tool\models\staging\stg_dbt_invocations.sql",error,model,0.32599878311157227,2024-02-16T08:45:28.544305Z,2024-02-16T08:45:28.663305Z,2024-02-16T08:45:28.411305Z,2024-02-16T08:45:28.442309Z,,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""elementary_src"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,{}
f8ea7205-f531-46cd-80f8-7cd7c027254f.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,f8ea7205-f531-46cd-80f8-7cd7c027254f,2024-02-16 08:45:33,2024-02-16 08:45:34.109404,stg_data_monitoring_metrics,"Database Error in model stg_data_monitoring_metrics (models\staging\stg_data_monitoring_metrics.sql)
  relation ""elementary_src.data_monitoring_metrics"" does not exist
  LINE 11:     SELECT * FROM ""postgres"".""elementary_src"".""data_monitori...
                             ^
  compiled Code at target\run\view_selection_tool\models\staging\stg_data_monitoring_metrics.sql",error,model,0.33299875259399414,2024-02-16T08:45:28.454306Z,2024-02-16T08:45:28.664304Z,2024-02-16T08:45:28.396305Z,2024-02-16T08:45:28.440306Z,,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""elementary_src"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,{}
f8ea7205-f531-46cd-80f8-7cd7c027254f.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,f8ea7205-f531-46cd-80f8-7cd7c027254f,2024-02-16 08:45:33,2024-02-16 08:45:34.109404,stg_dbt_models,"Database Error in model stg_dbt_models (models\staging\stg_dbt_models.sql)
  relation ""elementary_src.dbt_models"" does not exist
  LINE 11:     SELECT * FROM ""postgres"".""elementary_src"".""dbt_models""
                             ^
  compiled Code at target\run\view_selection_tool\models\staging\stg_dbt_models.sql",error,model,0.3309938907623291,2024-02-16T08:45:28.554305Z,2024-02-16T08:45:28.658303Z,2024-02-16T08:45:28.418305Z,2024-02-16T08:45:28.447309Z,,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""elementary_src"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,{}
f8ea7205-f531-46cd-80f8-7cd7c027254f.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,f8ea7205-f531-46cd-80f8-7cd7c027254f,2024-02-16 08:45:33,2024-02-16 08:45:34.109404,stg_dbt_run_results,"Database Error in model stg_dbt_run_results (models\staging\stg_dbt_run_results.sql)
  relation ""elementary_src.dbt_run_results"" does not exist
  LINE 11:     SELECT * FROM ""postgres"".""elementary_src"".""dbt_run_resul...
                             ^
  compiled Code at target\run\view_selection_tool\models\staging\stg_dbt_run_results.sql",error,model,0.33099842071533203,2024-02-16T08:45:28.566305Z,2024-02-16T08:45:28.679305Z,2024-02-16T08:45:28.429305Z,2024-02-16T08:45:28.449312Z,,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""elementary_src"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,{}
f8ea7205-f531-46cd-80f8-7cd7c027254f.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,f8ea7205-f531-46cd-80f8-7cd7c027254f,2024-02-16 08:45:33,2024-02-16 08:45:34.109404,int_keep_models_relevant_package,,skipped,model,0,,,,,,false,,,,Thread-6 (worker),view,{}
f8ea7205-f531-46cd-80f8-7cd7c027254f.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,f8ea7205-f531-46cd-80f8-7cd7c027254f,2024-02-16 08:45:33,2024-02-16 08:45:34.109404,int_join_with_run_results,,skipped,model,0,,,,,,false,,,,Thread-8 (worker),view,{}
f8ea7205-f531-46cd-80f8-7cd7c027254f.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,f8ea7205-f531-46cd-80f8-7cd7c027254f,2024-02-16 08:45:33,2024-02-16 08:45:34.109404,fct_all_models_plus_code,,skipped,model,0,,,,,,false,,,,Thread-2 (worker),table,{}
f8ea7205-f531-46cd-80f8-7cd7c027254f.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,f8ea7205-f531-46cd-80f8-7cd7c027254f,2024-02-16 08:45:33,2024-02-16 08:45:34.109404,int_only_materialized_models,,skipped,model,0,,,,,,false,,,,Thread-1 (worker),view,{}
5f5c5853-2ee3-49a1-abbe-b4b4932259a0.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,5f5c5853-2ee3-49a1-abbe-b4b4932259a0,2024-02-16 08:46:16,2024-02-16 08:46:17.616923,stg_dbt_run_results,CREATE VIEW,success,model,0.5529439449310303,2024-02-16T08:46:11.973070Z,2024-02-16T08:46:12.444008Z,2024-02-16T08:46:11.947069Z,2024-02-16T08:46:11.961071Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5f5c5853-2ee3-49a1-abbe-b4b4932259a0.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,5f5c5853-2ee3-49a1-abbe-b4b4932259a0,2024-02-16 08:46:16,2024-02-16 08:46:17.616923,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.5619370937347412,2024-02-16T08:46:11.966070Z,2024-02-16T08:46:12.447006Z,2024-02-16T08:46:11.919071Z,2024-02-16T08:46:11.953071Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5f5c5853-2ee3-49a1-abbe-b4b4932259a0.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,5f5c5853-2ee3-49a1-abbe-b4b4932259a0,2024-02-16 08:46:16,2024-02-16 08:46:17.616923,stg_dbt_models,CREATE VIEW,success,model,0.562936544418335,2024-02-16T08:46:12.019071Z,2024-02-16T08:46:12.455006Z,2024-02-16T08:46:11.938074Z,2024-02-16T08:46:11.958070Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5f5c5853-2ee3-49a1-abbe-b4b4932259a0.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,5f5c5853-2ee3-49a1-abbe-b4b4932259a0,2024-02-16 08:46:16,2024-02-16 08:46:17.616923,int_keep_models_relevant_package,CREATE VIEW,success,model,0.11900138854980469,2024-02-16T08:46:12.510006Z,2024-02-16T08:46:12.608008Z,2024-02-16T08:46:12.496006Z,2024-02-16T08:46:12.507006Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5f5c5853-2ee3-49a1-abbe-b4b4932259a0.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,5f5c5853-2ee3-49a1-abbe-b4b4932259a0,2024-02-16 08:46:16,2024-02-16 08:46:17.616923,int_join_with_run_results,CREATE VIEW,success,model,0.11099863052368164,2024-02-16T08:46:12.637006Z,2024-02-16T08:46:12.729006Z,2024-02-16T08:46:12.624009Z,2024-02-16T08:46:12.635007Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        p.depends_on_nodes,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5f5c5853-2ee3-49a1-abbe-b4b4932259a0.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,5f5c5853-2ee3-49a1-abbe-b4b4932259a0,2024-02-16 08:46:16,2024-02-16 08:46:17.616923,int_only_materialized_models,CREATE VIEW,success,model,0.225006103515625,2024-02-16T08:46:12.805004Z,2024-02-16T08:46:12.956010Z,2024-02-16T08:46:12.763007Z,2024-02-16T08:46:12.772007Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5f5c5853-2ee3-49a1-abbe-b4b4932259a0.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,5f5c5853-2ee3-49a1-abbe-b4b4932259a0,2024-02-16 08:46:16,2024-02-16 08:46:17.616923,fct_all_models_plus_code,SELECT 11,success,model,0.3580052852630615,2024-02-16T08:46:12.776008Z,2024-02-16T08:46:13.095006Z,2024-02-16T08:46:12.751006Z,2024-02-16T08:46:12.770006Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code,
        i.depends_on_nodes

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-2 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
5f5c5853-2ee3-49a1-abbe-b4b4932259a0.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,5f5c5853-2ee3-49a1-abbe-b4b4932259a0,2024-02-16 08:46:16,2024-02-16 08:46:17.616923,int_include_monitoring_id,CREATE VIEW,success,model,0.20800232887268066,2024-02-16T08:46:13.060005Z,2024-02-16T08:46:13.208005Z,2024-02-16T08:46:13.013011Z,2024-02-16T08:46:13.053005Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5f5c5853-2ee3-49a1-abbe-b4b4932259a0.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,5f5c5853-2ee3-49a1-abbe-b4b4932259a0,2024-02-16 08:46:16,2024-02-16 08:46:17.616923,fct_destination_nodes,"Database Error in model fct_destination_nodes (models\marts\fct_destination_nodes.sql)
  syntax error at or near ""unique_referenced_models""
  LINE 45:     WHERE model_id NOT IN unique_referenced_models
                                     ^
  compiled Code at target\run\view_selection_tool\models\marts\fct_destination_nodes.sql",error,model,0.16300106048583984,2024-02-16T08:46:13.134010Z,2024-02-16T08:46:13.212009Z,2024-02-16T08:46:13.116005Z,2024-02-16T08:46:13.126008Z,,false,"WITH

all_models_plus_code AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""fct_all_models_plus_code""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models_plus_code

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

independent_model_ids AS (

    SELECT
        model_id

    FROM all_models_plus_code

    WHERE model_id NOT IN unique_referenced_models
--           (SELECT referenced_model_id FROM unique_referenced_models)
--             unique_referenced_models

)

    SELECT * FROM independent_model_ids",,,Thread-6 (worker),table,{}
5f5c5853-2ee3-49a1-abbe-b4b4932259a0.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,5f5c5853-2ee3-49a1-abbe-b4b4932259a0,2024-02-16 08:46:16,2024-02-16 08:46:17.616923,int_maintenance_fractions,CREATE VIEW,success,model,0.1309976577758789,2024-02-16T08:46:13.252012Z,2024-02-16T08:46:13.361007Z,2024-02-16T08:46:13.239008Z,2024-02-16T08:46:13.248009Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5f5c5853-2ee3-49a1-abbe-b4b4932259a0.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,5f5c5853-2ee3-49a1-abbe-b4b4932259a0,2024-02-16 08:46:16,2024-02-16 08:46:17.616923,fct_avg_maintenance_fractions,SELECT 3,success,model,0.22649264335632324,2024-02-16T08:46:13.392009Z,2024-02-16T08:46:13.596498Z,2024-02-16T08:46:13.378009Z,2024-02-16T08:46:13.390004Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-4 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
99ad329c-9f3c-48c6-ab33-339a2b092bf1.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,99ad329c-9f3c-48c6-ab33-339a2b092bf1,2024-02-16 08:52:56,2024-02-16 08:52:57.392149,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.40790748596191406,2024-02-16T08:52:53.014113Z,2024-02-16T08:52:53.365023Z,2024-02-16T08:52:52.979113Z,2024-02-16T08:52:53.006112Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
99ad329c-9f3c-48c6-ab33-339a2b092bf1.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,99ad329c-9f3c-48c6-ab33-339a2b092bf1,2024-02-16 08:52:56,2024-02-16 08:52:57.392149,stg_dbt_invocations,CREATE VIEW,success,model,0.41691017150878906,2024-02-16T08:52:53.079019Z,2024-02-16T08:52:53.371023Z,2024-02-16T08:52:52.987114Z,2024-02-16T08:52:53.007114Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
99ad329c-9f3c-48c6-ab33-339a2b092bf1.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,99ad329c-9f3c-48c6-ab33-339a2b092bf1,2024-02-16 08:52:56,2024-02-16 08:52:57.392149,stg_dbt_models,CREATE VIEW,success,model,0.42490720748901367,2024-02-16T08:52:53.087023Z,2024-02-16T08:52:53.379021Z,2024-02-16T08:52:52.992112Z,2024-02-16T08:52:53.009111Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
99ad329c-9f3c-48c6-ab33-339a2b092bf1.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,99ad329c-9f3c-48c6-ab33-339a2b092bf1,2024-02-16 08:52:56,2024-02-16 08:52:57.392149,stg_dbt_run_results,CREATE VIEW,success,model,0.42770934104919434,2024-02-16T08:52:53.096022Z,2024-02-16T08:52:53.383023Z,2024-02-16T08:52:52.998113Z,2024-02-16T08:52:53.011114Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
99ad329c-9f3c-48c6-ab33-339a2b092bf1.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,99ad329c-9f3c-48c6-ab33-339a2b092bf1,2024-02-16 08:52:56,2024-02-16 08:52:57.392149,int_keep_models_relevant_package,CREATE VIEW,success,model,0.10051393508911133,2024-02-16T08:52:53.433586Z,2024-02-16T08:52:53.514106Z,2024-02-16T08:52:53.420588Z,2024-02-16T08:52:53.429588Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
99ad329c-9f3c-48c6-ab33-339a2b092bf1.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,99ad329c-9f3c-48c6-ab33-339a2b092bf1,2024-02-16 08:52:56,2024-02-16 08:52:57.392149,int_join_with_run_results,CREATE VIEW,success,model,0.20799875259399414,2024-02-16T08:52:53.584104Z,2024-02-16T08:52:53.712107Z,2024-02-16T08:52:53.542101Z,2024-02-16T08:52:53.550106Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
99ad329c-9f3c-48c6-ab33-339a2b092bf1.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,99ad329c-9f3c-48c6-ab33-339a2b092bf1,2024-02-16 08:52:56,2024-02-16 08:52:57.392149,fct_destination_nodes,SELECT 1,success,model,0.24800515174865723,2024-02-16T08:52:53.553102Z,2024-02-16T08:52:53.765101Z,2024-02-16T08:52:53.534106Z,2024-02-16T08:52:53.548101Z,1,false,"WITH

all_models_plus_code AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models_plus_code

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

independent_model_ids AS (

    SELECT
        model_id

    FROM all_models_plus_code

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM independent_model_ids",,,Thread-8 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
99ad329c-9f3c-48c6-ab33-339a2b092bf1.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,99ad329c-9f3c-48c6-ab33-339a2b092bf1,2024-02-16 08:52:56,2024-02-16 08:52:57.392149,int_only_materialized_models,CREATE VIEW,success,model,0.18199992179870605,2024-02-16T08:52:53.815107Z,2024-02-16T08:52:53.944105Z,2024-02-16T08:52:53.789106Z,2024-02-16T08:52:53.800104Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
99ad329c-9f3c-48c6-ab33-339a2b092bf1.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,99ad329c-9f3c-48c6-ab33-339a2b092bf1,2024-02-16 08:52:56,2024-02-16 08:52:57.392149,fct_all_models_plus_code,SELECT 11,success,model,0.22500252723693848,2024-02-16T08:52:53.803103Z,2024-02-16T08:52:53.990101Z,2024-02-16T08:52:53.783114Z,2024-02-16T08:52:53.798102Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-2 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
99ad329c-9f3c-48c6-ab33-339a2b092bf1.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,99ad329c-9f3c-48c6-ab33-339a2b092bf1,2024-02-16 08:52:56,2024-02-16 08:52:57.392149,int_include_monitoring_id,CREATE VIEW,success,model,0.17100262641906738,2024-02-16T08:52:53.999103Z,2024-02-16T08:52:54.139103Z,2024-02-16T08:52:53.975104Z,2024-02-16T08:52:53.992103Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
99ad329c-9f3c-48c6-ab33-339a2b092bf1.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,99ad329c-9f3c-48c6-ab33-339a2b092bf1,2024-02-16 08:52:56,2024-02-16 08:52:57.392149,int_maintenance_fractions,CREATE VIEW,success,model,0.09600281715393066,2024-02-16T08:52:54.170104Z,2024-02-16T08:52:54.246138Z,2024-02-16T08:52:54.156105Z,2024-02-16T08:52:54.167104Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
99ad329c-9f3c-48c6-ab33-339a2b092bf1.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,99ad329c-9f3c-48c6-ab33-339a2b092bf1,2024-02-16 08:52:56,2024-02-16 08:52:57.392149,fct_avg_maintenance_fractions,SELECT 3,success,model,0.16752243041992188,2024-02-16T08:52:54.274103Z,2024-02-16T08:52:54.419620Z,2024-02-16T08:52:54.261102Z,2024-02-16T08:52:54.271131Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-7 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
e4e5b1e1-3a62-4707-905c-ceed0afa1ce4.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,e4e5b1e1-3a62-4707-905c-ceed0afa1ce4,2024-02-16 09:00:00,2024-02-16 09:00:01.349197,stg_dbt_models,CREATE VIEW,success,model,0.46593713760375977,2024-02-16T08:59:57.125805Z,2024-02-16T08:59:57.469746Z,2024-02-16T08:59:57.044806Z,2024-02-16T08:59:57.059806Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e4e5b1e1-3a62-4707-905c-ceed0afa1ce4.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,e4e5b1e1-3a62-4707-905c-ceed0afa1ce4,2024-02-16 09:00:00,2024-02-16 09:00:01.349197,stg_dbt_run_results,CREATE VIEW,success,model,0.46893882751464844,2024-02-16T08:59:57.169355Z,2024-02-16T08:59:57.476748Z,2024-02-16T08:59:57.049806Z,2024-02-16T08:59:57.060807Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e4e5b1e1-3a62-4707-905c-ceed0afa1ce4.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,e4e5b1e1-3a62-4707-905c-ceed0afa1ce4,2024-02-16 09:00:00,2024-02-16 09:00:01.349197,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.4779384136199951,2024-02-16T08:59:57.064807Z,2024-02-16T08:59:57.480745Z,2024-02-16T08:59:57.029809Z,2024-02-16T08:59:57.055807Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e4e5b1e1-3a62-4707-905c-ceed0afa1ce4.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,e4e5b1e1-3a62-4707-905c-ceed0afa1ce4,2024-02-16 09:00:00,2024-02-16 09:00:01.349197,int_keep_models_relevant_package,CREATE VIEW,success,model,0.09900283813476562,2024-02-16T08:59:57.522747Z,2024-02-16T08:59:57.604747Z,2024-02-16T08:59:57.512745Z,2024-02-16T08:59:57.519747Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e4e5b1e1-3a62-4707-905c-ceed0afa1ce4.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,e4e5b1e1-3a62-4707-905c-ceed0afa1ce4,2024-02-16 09:00:00,2024-02-16 09:00:01.349197,int_join_with_run_results,CREATE VIEW,success,model,0.20000505447387695,2024-02-16T08:59:57.679744Z,2024-02-16T08:59:57.816744Z,2024-02-16T08:59:57.632743Z,2024-02-16T08:59:57.642749Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e4e5b1e1-3a62-4707-905c-ceed0afa1ce4.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,e4e5b1e1-3a62-4707-905c-ceed0afa1ce4,2024-02-16 09:00:00,2024-02-16 09:00:01.349197,fct_destination_nodes,SELECT 1,success,model,0.3260040283203125,2024-02-16T08:59:57.645745Z,2024-02-16T08:59:57.938746Z,2024-02-16T08:59:57.626745Z,2024-02-16T08:59:57.640745Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM destination_models",,,Thread-8 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
e4e5b1e1-3a62-4707-905c-ceed0afa1ce4.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,e4e5b1e1-3a62-4707-905c-ceed0afa1ce4,2024-02-16 09:00:00,2024-02-16 09:00:01.349197,int_only_materialized_models,CREATE VIEW,success,model,0.22300505638122559,2024-02-16T08:59:57.913746Z,2024-02-16T08:59:58.063745Z,2024-02-16T08:59:57.866745Z,2024-02-16T08:59:57.900745Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e4e5b1e1-3a62-4707-905c-ceed0afa1ce4.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,e4e5b1e1-3a62-4707-905c-ceed0afa1ce4,2024-02-16 09:00:00,2024-02-16 09:00:01.349197,fct_all_models_plus_code,SELECT 11,success,model,0.2700018882751465,2024-02-16T08:59:57.905745Z,2024-02-16T08:59:58.114744Z,2024-02-16T08:59:57.858745Z,2024-02-16T08:59:57.898744Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-3 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
e4e5b1e1-3a62-4707-905c-ceed0afa1ce4.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,e4e5b1e1-3a62-4707-905c-ceed0afa1ce4,2024-02-16 09:00:00,2024-02-16 09:00:01.349197,int_include_monitoring_id,CREATE VIEW,success,model,0.1249992847442627,2024-02-16T08:59:58.125744Z,2024-02-16T08:59:58.213747Z,2024-02-16T08:59:58.097745Z,2024-02-16T08:59:58.117747Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e4e5b1e1-3a62-4707-905c-ceed0afa1ce4.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,e4e5b1e1-3a62-4707-905c-ceed0afa1ce4,2024-02-16 09:00:00,2024-02-16 09:00:01.349197,int_maintenance_fractions,CREATE VIEW,success,model,0.1731886863708496,2024-02-16T08:59:58.245748Z,2024-02-16T08:59:58.396744Z,2024-02-16T08:59:58.232747Z,2024-02-16T08:59:58.242751Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e4e5b1e1-3a62-4707-905c-ceed0afa1ce4.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,e4e5b1e1-3a62-4707-905c-ceed0afa1ce4,2024-02-16 09:00:00,2024-02-16 09:00:01.349197,fct_avg_maintenance_fractions,SELECT 3,success,model,0.14400148391723633,2024-02-16T08:59:58.423734Z,2024-02-16T08:59:58.553732Z,2024-02-16T08:59:58.414728Z,2024-02-16T08:59:58.421730Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-4 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7,2024-02-16 09:44:22,2024-02-16 09:44:23.406445,stg_dbt_invocations,CREATE VIEW,success,model,0.5706899166107178,2024-02-16T09:44:18.421778Z,2024-02-16T09:44:18.875860Z,2024-02-16T09:44:18.338724Z,2024-02-16T09:44:18.360315Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7,2024-02-16 09:44:22,2024-02-16 09:44:23.406445,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.5876905918121338,2024-02-16T09:44:18.367307Z,2024-02-16T09:44:18.883383Z,2024-02-16T09:44:18.330698Z,2024-02-16T09:44:18.358694Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7,2024-02-16 09:44:22,2024-02-16 09:44:23.406445,stg_dbt_run_results,CREATE VIEW,success,model,0.5936853885650635,2024-02-16T09:44:18.467766Z,2024-02-16T09:44:18.896381Z,2024-02-16T09:44:18.351695Z,2024-02-16T09:44:18.363310Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7,2024-02-16 09:44:22,2024-02-16 09:44:23.406445,stg_dbt_models,CREATE VIEW,success,model,0.6036901473999023,2024-02-16T09:44:18.457774Z,2024-02-16T09:44:18.902386Z,2024-02-16T09:44:18.344695Z,2024-02-16T09:44:18.361308Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7,2024-02-16 09:44:22,2024-02-16 09:44:23.406445,int_keep_models_relevant_package,CREATE VIEW,success,model,0.13650202751159668,2024-02-16T09:44:18.960386Z,2024-02-16T09:44:19.073180Z,2024-02-16T09:44:18.945383Z,2024-02-16T09:44:18.957383Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7,2024-02-16 09:44:22,2024-02-16 09:44:23.406445,int_join_with_run_results,CREATE VIEW,success,model,0.37393808364868164,2024-02-16T09:44:19.246868Z,2024-02-16T09:44:19.439130Z,2024-02-16T09:44:19.139063Z,2024-02-16T09:44:19.154984Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7.model.view_selection_tool.fct_model_dependencies,model.view_selection_tool.fct_model_dependencies,6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7,2024-02-16 09:44:22,2024-02-16 09:44:23.406445,fct_model_dependencies,SELECT 11,success,model,0.4295613765716553,2024-02-16T09:44:19.229506Z,2024-02-16T09:44:19.508133Z,2024-02-16T09:44:19.132093Z,2024-02-16T09:44:19.151398Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes

    FROM including_irrelevant_cols

)

    SELECT * FROM model_dependencies",,,Thread-5 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7,2024-02-16 09:44:22,2024-02-16 09:44:23.406445,fct_destination_nodes,SELECT 1,success,model,0.4777240753173828,2024-02-16T09:44:19.157932Z,2024-02-16T09:44:19.544133Z,2024-02-16T09:44:19.104692Z,2024-02-16T09:44:19.149462Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM destination_models",,,Thread-8 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7,2024-02-16 09:44:22,2024-02-16 09:44:23.406445,int_only_materialized_models,CREATE VIEW,success,model,0.29100656509399414,2024-02-16T09:44:19.598132Z,2024-02-16T09:44:19.822137Z,2024-02-16T09:44:19.563132Z,2024-02-16T09:44:19.577134Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7,2024-02-16 09:44:22,2024-02-16 09:44:23.406445,fct_all_models_plus_code,SELECT 11,success,model,0.37300586700439453,2024-02-16T09:44:19.584133Z,2024-02-16T09:44:19.902133Z,2024-02-16T09:44:19.553132Z,2024-02-16T09:44:19.575132Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-4 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7,2024-02-16 09:44:22,2024-02-16 09:44:23.406445,int_include_monitoring_id,CREATE VIEW,success,model,0.17200040817260742,2024-02-16T09:44:19.887133Z,2024-02-16T09:44:20.021133Z,2024-02-16T09:44:19.859133Z,2024-02-16T09:44:19.882132Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7,2024-02-16 09:44:22,2024-02-16 09:44:23.406445,int_maintenance_fractions,CREATE VIEW,success,model,0.11299872398376465,2024-02-16T09:44:20.054135Z,2024-02-16T09:44:20.147131Z,2024-02-16T09:44:20.041142Z,2024-02-16T09:44:20.052131Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,6ceb8b89-58f9-4bfd-9d9f-22c8bc98f8b7,2024-02-16 09:44:22,2024-02-16 09:44:23.406445,fct_avg_maintenance_fractions,SELECT 3,success,model,0.1582174301147461,2024-02-16T09:44:20.176261Z,2024-02-16T09:44:20.316355Z,2024-02-16T09:44:20.164134Z,2024-02-16T09:44:20.174259Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-5 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
e417d8bd-5b71-4f60-953b-bd73018403d5.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,e417d8bd-5b71-4f60-953b-bd73018403d5,2024-02-16 10:19:07,2024-02-16 10:19:07.788337,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.43660426139831543,2024-02-16T10:19:03.121248Z,2024-02-16T10:19:03.499849Z,2024-02-16T10:19:03.089250Z,2024-02-16T10:19:03.113247Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e417d8bd-5b71-4f60-953b-bd73018403d5.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,e417d8bd-5b71-4f60-953b-bd73018403d5,2024-02-16 10:19:07,2024-02-16 10:19:07.788337,stg_dbt_invocations,CREATE VIEW,success,model,0.4456009864807129,2024-02-16T10:19:03.174246Z,2024-02-16T10:19:03.506848Z,2024-02-16T10:19:03.094247Z,2024-02-16T10:19:03.114252Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e417d8bd-5b71-4f60-953b-bd73018403d5.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,e417d8bd-5b71-4f60-953b-bd73018403d5,2024-02-16 10:19:07,2024-02-16 10:19:07.788337,stg_dbt_run_results,CREATE VIEW,success,model,0.44860243797302246,2024-02-16T10:19:03.190763Z,2024-02-16T10:19:03.510851Z,2024-02-16T10:19:03.107245Z,2024-02-16T10:19:03.118248Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e417d8bd-5b71-4f60-953b-bd73018403d5.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,e417d8bd-5b71-4f60-953b-bd73018403d5,2024-02-16 10:19:07,2024-02-16 10:19:07.788337,stg_dbt_models,CREATE VIEW,success,model,0.45760226249694824,2024-02-16T10:19:03.182247Z,2024-02-16T10:19:03.519851Z,2024-02-16T10:19:03.101248Z,2024-02-16T10:19:03.116247Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e417d8bd-5b71-4f60-953b-bd73018403d5.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,e417d8bd-5b71-4f60-953b-bd73018403d5,2024-02-16 10:19:07,2024-02-16 10:19:07.788337,int_keep_models_relevant_package,CREATE VIEW,success,model,0.10700511932373047,2024-02-16T10:19:03.570848Z,2024-02-16T10:19:03.657849Z,2024-02-16T10:19:03.557849Z,2024-02-16T10:19:03.567849Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e417d8bd-5b71-4f60-953b-bd73018403d5.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,e417d8bd-5b71-4f60-953b-bd73018403d5,2024-02-16 10:19:07,2024-02-16 10:19:07.788337,int_join_with_run_results,CREATE VIEW,success,model,0.38799571990966797,2024-02-16T10:19:03.787847Z,2024-02-16T10:19:03.984850Z,2024-02-16T10:19:03.701850Z,2024-02-16T10:19:03.718848Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e417d8bd-5b71-4f60-953b-bd73018403d5.model.view_selection_tool.fct_model_dependencies,model.view_selection_tool.fct_model_dependencies,e417d8bd-5b71-4f60-953b-bd73018403d5,2024-02-16 10:19:07,2024-02-16 10:19:07.788337,fct_model_dependencies,SELECT 11,success,model,0.5090014934539795,2024-02-16T10:19:03.777847Z,2024-02-16T10:19:04.162848Z,2024-02-16T10:19:03.694850Z,2024-02-16T10:19:03.715857Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes,
        database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS compiled_code_reference

    FROM including_irrelevant_cols

)

    SELECT * FROM model_dependencies",,,Thread-5 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
38cb601f-a8bd-469f-8c2f-a4c780875972.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,38cb601f-a8bd-469f-8c2f-a4c780875972,2024-02-16 10:21:26,2024-02-16 10:21:27.677093,stg_dbt_models,CREATE VIEW,success,model,0.5117356777191162,2024-02-16T10:21:20.643207Z,2024-02-16T10:21:21.019459Z,2024-02-16T10:21:20.549693Z,2024-02-16T10:21:20.568206Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e417d8bd-5b71-4f60-953b-bd73018403d5.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,e417d8bd-5b71-4f60-953b-bd73018403d5,2024-02-16 10:19:07,2024-02-16 10:19:07.788337,fct_destination_nodes,SELECT 1,success,model,0.5150015354156494,2024-02-16T10:19:03.720848Z,2024-02-16T10:19:04.168847Z,2024-02-16T10:19:03.687849Z,2024-02-16T10:19:03.713848Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM destination_models",,,Thread-8 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
e417d8bd-5b71-4f60-953b-bd73018403d5.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,e417d8bd-5b71-4f60-953b-bd73018403d5,2024-02-16 10:19:07,2024-02-16 10:19:07.788337,int_only_materialized_models,CREATE VIEW,success,model,0.22000455856323242,2024-02-16T10:19:04.191851Z,2024-02-16T10:19:04.329852Z,2024-02-16T10:19:04.135848Z,2024-02-16T10:19:04.169848Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e417d8bd-5b71-4f60-953b-bd73018403d5.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,e417d8bd-5b71-4f60-953b-bd73018403d5,2024-02-16 10:19:07,2024-02-16 10:19:07.788337,fct_all_models_plus_code,SELECT 11,success,model,0.2830016613006592,2024-02-16T10:19:04.174850Z,2024-02-16T10:19:04.380852Z,2024-02-16T10:19:04.127848Z,2024-02-16T10:19:04.155847Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-4 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
e417d8bd-5b71-4f60-953b-bd73018403d5.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,e417d8bd-5b71-4f60-953b-bd73018403d5,2024-02-16 10:19:07,2024-02-16 10:19:07.788337,int_include_monitoring_id,CREATE VIEW,success,model,0.12400531768798828,2024-02-16T10:19:04.381848Z,2024-02-16T10:19:04.472849Z,2024-02-16T10:19:04.362849Z,2024-02-16T10:19:04.372849Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e417d8bd-5b71-4f60-953b-bd73018403d5.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,e417d8bd-5b71-4f60-953b-bd73018403d5,2024-02-16 10:19:07,2024-02-16 10:19:07.788337,int_maintenance_fractions,CREATE VIEW,success,model,0.10500502586364746,2024-02-16T10:19:04.498852Z,2024-02-16T10:19:04.586850Z,2024-02-16T10:19:04.488849Z,2024-02-16T10:19:04.495848Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e417d8bd-5b71-4f60-953b-bd73018403d5.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,e417d8bd-5b71-4f60-953b-bd73018403d5,2024-02-16 10:19:07,2024-02-16 10:19:07.788337,fct_avg_maintenance_fractions,SELECT 3,success,model,0.15299630165100098,2024-02-16T10:19:04.616849Z,2024-02-16T10:19:04.749850Z,2024-02-16T10:19:04.603848Z,2024-02-16T10:19:04.612848Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-5 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
06a26733-5b4b-41e8-a894-1e90efdba7fc.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,06a26733-5b4b-41e8-a894-1e90efdba7fc,2024-02-16 10:20:55,2024-02-16 10:20:56.067895,stg_dbt_invocations,"Database Error in model stg_dbt_invocations (models\staging\stg_dbt_invocations.sql)
  relation ""elementary_src.dbt_invocations"" does not exist
  LINE 11:     SELECT * FROM ""postgres"".""elementary_src"".""dbt_invocatio...
                             ^
  compiled Code at target\run\view_selection_tool\models\staging\stg_dbt_invocations.sql",error,model,0.2669961452484131,2024-02-16T10:20:51.742448Z,2024-02-16T10:20:51.904455Z,2024-02-16T10:20:51.703451Z,2024-02-16T10:20:51.734449Z,,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""elementary_src"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,{}
06a26733-5b4b-41e8-a894-1e90efdba7fc.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,06a26733-5b4b-41e8-a894-1e90efdba7fc,2024-02-16 10:20:55,2024-02-16 10:20:56.067895,stg_dbt_models,"Database Error in model stg_dbt_models (models\staging\stg_dbt_models.sql)
  relation ""elementary_src.dbt_models"" does not exist
  LINE 11:     SELECT * FROM ""postgres"".""elementary_src"".""dbt_models""
                             ^
  compiled Code at target\run\view_selection_tool\models\staging\stg_dbt_models.sql",error,model,0.26599979400634766,2024-02-16T10:20:51.813453Z,2024-02-16T10:20:51.929449Z,2024-02-16T10:20:51.721451Z,2024-02-16T10:20:51.737449Z,,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""elementary_src"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,{}
06a26733-5b4b-41e8-a894-1e90efdba7fc.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,06a26733-5b4b-41e8-a894-1e90efdba7fc,2024-02-16 10:20:55,2024-02-16 10:20:56.067895,stg_dbt_run_results,"Database Error in model stg_dbt_run_results (models\staging\stg_dbt_run_results.sql)
  relation ""elementary_src.dbt_run_results"" does not exist
  LINE 11:     SELECT * FROM ""postgres"".""elementary_src"".""dbt_run_resul...
                             ^
  compiled Code at target\run\view_selection_tool\models\staging\stg_dbt_run_results.sql",error,model,0.26499509811401367,2024-02-16T10:20:51.823452Z,2024-02-16T10:20:51.925449Z,2024-02-16T10:20:51.727447Z,2024-02-16T10:20:51.739450Z,,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""elementary_src"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,{}
06a26733-5b4b-41e8-a894-1e90efdba7fc.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,06a26733-5b4b-41e8-a894-1e90efdba7fc,2024-02-16 10:20:55,2024-02-16 10:20:56.067895,stg_data_monitoring_metrics,"Database Error in model stg_data_monitoring_metrics (models\staging\stg_data_monitoring_metrics.sql)
  relation ""elementary_src.data_monitoring_metrics"" does not exist
  LINE 11:     SELECT * FROM ""postgres"".""elementary_src"".""data_monitori...
                             ^
  compiled Code at target\run\view_selection_tool\models\staging\stg_data_monitoring_metrics.sql",error,model,0.2720000743865967,2024-02-16T10:20:51.803449Z,2024-02-16T10:20:51.909450Z,2024-02-16T10:20:51.714451Z,2024-02-16T10:20:51.736451Z,,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""elementary_src"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,{}
06a26733-5b4b-41e8-a894-1e90efdba7fc.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,06a26733-5b4b-41e8-a894-1e90efdba7fc,2024-02-16 10:20:55,2024-02-16 10:20:56.067895,int_keep_models_relevant_package,,skipped,model,0,,,,,,false,,,,Thread-6 (worker),view,{}
06a26733-5b4b-41e8-a894-1e90efdba7fc.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,06a26733-5b4b-41e8-a894-1e90efdba7fc,2024-02-16 10:20:55,2024-02-16 10:20:56.067895,fct_destination_nodes,,skipped,model,0,,,,,,false,,,,Thread-8 (worker),table,{}
06a26733-5b4b-41e8-a894-1e90efdba7fc.model.view_selection_tool.fct_model_dependencies,model.view_selection_tool.fct_model_dependencies,06a26733-5b4b-41e8-a894-1e90efdba7fc,2024-02-16 10:20:55,2024-02-16 10:20:56.067895,fct_model_dependencies,,skipped,model,0,,,,,,false,,,,Thread-5 (worker),table,{}
06a26733-5b4b-41e8-a894-1e90efdba7fc.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,06a26733-5b4b-41e8-a894-1e90efdba7fc,2024-02-16 10:20:55,2024-02-16 10:20:56.067895,int_join_with_run_results,,skipped,model,0,,,,,,false,,,,Thread-2 (worker),view,{}
06a26733-5b4b-41e8-a894-1e90efdba7fc.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,06a26733-5b4b-41e8-a894-1e90efdba7fc,2024-02-16 10:20:55,2024-02-16 10:20:56.067895,fct_all_models_plus_code,,skipped,model,0,,,,,,false,,,,Thread-7 (worker),table,{}
06a26733-5b4b-41e8-a894-1e90efdba7fc.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,06a26733-5b4b-41e8-a894-1e90efdba7fc,2024-02-16 10:20:55,2024-02-16 10:20:56.067895,int_only_materialized_models,,skipped,model,0,,,,,,false,,,,Thread-4 (worker),view,{}
06a26733-5b4b-41e8-a894-1e90efdba7fc.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,06a26733-5b4b-41e8-a894-1e90efdba7fc,2024-02-16 10:20:55,2024-02-16 10:20:56.067895,int_include_monitoring_id,,skipped,model,0,,,,,,false,,,,Thread-6 (worker),view,{}
06a26733-5b4b-41e8-a894-1e90efdba7fc.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,06a26733-5b4b-41e8-a894-1e90efdba7fc,2024-02-16 10:20:55,2024-02-16 10:20:56.067895,int_maintenance_fractions,,skipped,model,0,,,,,,false,,,,Thread-8 (worker),view,{}
06a26733-5b4b-41e8-a894-1e90efdba7fc.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,06a26733-5b4b-41e8-a894-1e90efdba7fc,2024-02-16 10:20:55,2024-02-16 10:20:56.067895,fct_avg_maintenance_fractions,,skipped,model,0,,,,,,false,,,,Thread-2 (worker),table,{}
38cb601f-a8bd-469f-8c2f-a4c780875972.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,38cb601f-a8bd-469f-8c2f-a4c780875972,2024-02-16 10:21:26,2024-02-16 10:21:27.677093,stg_dbt_invocations,CREATE VIEW,success,model,0.47815632820129395,2024-02-16T10:21:20.633204Z,2024-02-16T10:21:20.988848Z,2024-02-16T10:21:20.544698Z,2024-02-16T10:21:20.566208Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
38cb601f-a8bd-469f-8c2f-a4c780875972.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,38cb601f-a8bd-469f-8c2f-a4c780875972,2024-02-16 10:21:26,2024-02-16 10:21:27.677093,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.48615217208862305,2024-02-16T10:21:20.573205Z,2024-02-16T10:21:20.993846Z,2024-02-16T10:21:20.536695Z,2024-02-16T10:21:20.564207Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
38cb601f-a8bd-469f-8c2f-a4c780875972.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,38cb601f-a8bd-469f-8c2f-a4c780875972,2024-02-16 10:21:26,2024-02-16 10:21:27.677093,stg_dbt_run_results,CREATE VIEW,success,model,0.5147459506988525,2024-02-16T10:21:20.654205Z,2024-02-16T10:21:21.027432Z,2024-02-16T10:21:20.558208Z,2024-02-16T10:21:20.570207Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
38cb601f-a8bd-469f-8c2f-a4c780875972.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,38cb601f-a8bd-469f-8c2f-a4c780875972,2024-02-16 10:21:26,2024-02-16 10:21:27.677093,int_keep_models_relevant_package,CREATE VIEW,success,model,0.1690046787261963,2024-02-16T10:21:21.090430Z,2024-02-16T10:21:21.230430Z,2024-02-16T10:21:21.070432Z,2024-02-16T10:21:21.085432Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
38cb601f-a8bd-469f-8c2f-a4c780875972.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,38cb601f-a8bd-469f-8c2f-a4c780875972,2024-02-16 10:21:26,2024-02-16 10:21:27.677093,int_join_with_run_results,CREATE VIEW,success,model,0.46155428886413574,2024-02-16T10:21:21.459431Z,2024-02-16T10:21:21.703983Z,2024-02-16T10:21:21.304434Z,2024-02-16T10:21:21.327433Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
38cb601f-a8bd-469f-8c2f-a4c780875972.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,38cb601f-a8bd-469f-8c2f-a4c780875972,2024-02-16 10:21:26,2024-02-16 10:21:27.677093,fct_destination_nodes,SELECT 1,success,model,0.7190845012664795,2024-02-16T10:21:21.332431Z,2024-02-16T10:21:21.938512Z,2024-02-16T10:21:21.277433Z,2024-02-16T10:21:21.319434Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM destination_models",,,Thread-8 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
38cb601f-a8bd-469f-8c2f-a4c780875972.model.view_selection_tool.fct_model_dependencies,model.view_selection_tool.fct_model_dependencies,38cb601f-a8bd-469f-8c2f-a4c780875972,2024-02-16 10:21:26,2024-02-16 10:21:27.677093,fct_model_dependencies,SELECT 11,success,model,0.7180821895599365,2024-02-16T10:21:21.408433Z,2024-02-16T10:21:21.944513Z,2024-02-16T10:21:21.292434Z,2024-02-16T10:21:21.322433Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes,
        '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS compiled_code_reference

    FROM including_irrelevant_cols

)

    SELECT * FROM model_dependencies",,,Thread-5 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
38cb601f-a8bd-469f-8c2f-a4c780875972.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,38cb601f-a8bd-469f-8c2f-a4c780875972,2024-02-16 10:21:26,2024-02-16 10:21:27.677093,int_only_materialized_models,CREATE VIEW,success,model,0.3408985137939453,2024-02-16T10:21:21.984521Z,2024-02-16T10:21:22.176408Z,2024-02-16T10:21:21.866513Z,2024-02-16T10:21:21.948513Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
38cb601f-a8bd-469f-8c2f-a4c780875972.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,38cb601f-a8bd-469f-8c2f-a4c780875972,2024-02-16 10:21:26,2024-02-16 10:21:27.677093,fct_all_models_plus_code,SELECT 11,success,model,0.5069034099578857,2024-02-16T10:21:21.953512Z,2024-02-16T10:21:22.269404Z,2024-02-16T10:21:21.851515Z,2024-02-16T10:21:21.900517Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-3 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
38cb601f-a8bd-469f-8c2f-a4c780875972.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,38cb601f-a8bd-469f-8c2f-a4c780875972,2024-02-16 10:21:26,2024-02-16 10:21:27.677093,int_include_monitoring_id,CREATE VIEW,success,model,0.20410728454589844,2024-02-16T10:21:22.249404Z,2024-02-16T10:21:22.413500Z,2024-02-16T10:21:22.218404Z,2024-02-16T10:21:22.242409Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
38cb601f-a8bd-469f-8c2f-a4c780875972.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,38cb601f-a8bd-469f-8c2f-a4c780875972,2024-02-16 10:21:26,2024-02-16 10:21:27.677093,int_maintenance_fractions,CREATE VIEW,success,model,0.16500115394592285,2024-02-16T10:21:22.460503Z,2024-02-16T10:21:22.595499Z,2024-02-16T10:21:22.440500Z,2024-02-16T10:21:22.455501Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
38cb601f-a8bd-469f-8c2f-a4c780875972.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,38cb601f-a8bd-469f-8c2f-a4c780875972,2024-02-16 10:21:26,2024-02-16 10:21:27.677093,fct_avg_maintenance_fractions,SELECT 3,success,model,0.23100972175598145,2024-02-16T10:21:22.635501Z,2024-02-16T10:21:22.838503Z,2024-02-16T10:21:22.618502Z,2024-02-16T10:21:22.632498Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-8 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,stg_transactions_2,CREATE VIEW,success,model,0.7551138401031494,2024-02-20T09:06:59.597324Z,2024-02-20T09:07:00.133541Z,2024-02-20T09:06:59.450424Z,2024-02-20T09:06:59.515414Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,stg_groups,CREATE VIEW,success,model,0.7671113014221191,2024-02-20T09:06:59.582359Z,2024-02-20T09:07:00.138527Z,2024-02-20T09:06:59.438414Z,2024-02-20T09:06:59.513415Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 10

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,stg_transactions_3,CREATE VIEW,success,model,0.7661087512969971,2024-02-20T09:06:59.605325Z,2024-02-20T09:07:00.142524Z,2024-02-20T09:06:59.457412Z,2024-02-20T09:06:59.518412Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,stg_transactions_4,CREATE VIEW,success,model,0.7971103191375732,2024-02-20T09:06:59.640323Z,2024-02-20T09:07:00.147522Z,2024-02-20T09:06:59.462411Z,2024-02-20T09:06:59.520413Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,stg_accounts,CREATE VIEW,success,model,0.8091142177581787,2024-02-20T09:06:59.528414Z,2024-02-20T09:07:00.149523Z,2024-02-20T09:06:59.430414Z,2024-02-20T09:06:59.511411Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    LIMIT 20

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,stg_transactions_1,CREATE VIEW,success,model,0.8071138858795166,2024-02-20T09:06:59.590325Z,2024-02-20T09:07:00.152523Z,2024-02-20T09:06:59.445414Z,2024-02-20T09:06:59.514413Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.dbt_tests,model.elementary.dbt_tests,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,dbt_tests,INSERT 0 0,success,model,1.963686227798462,2024-02-20T09:07:10.240544Z,2024-02-20T09:07:11.889237Z,2024-02-20T09:07:09.988546Z,2024-02-20T09:07:10.203543Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,data_monitoring_metrics,INSERT 0 0,success,model,2.358262777328491,2024-02-20T09:06:59.613326Z,2024-02-20T09:07:01.758670Z,2024-02-20T09:06:59.468414Z,2024-02-20T09:06:59.519412Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.dbt_invocations,model.elementary.dbt_invocations,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,dbt_invocations,INSERT 0 0,success,model,7.356420278549194,2024-02-20T09:07:01.458670Z,2024-02-20T09:07:07.602947Z,2024-02-20T09:07:00.657591Z,2024-02-20T09:07:01.066701Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.dbt_run_results,model.elementary.dbt_run_results,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,dbt_run_results,INSERT 0 0,success,model,7.353046178817749,2024-02-20T09:07:01.659673Z,2024-02-20T09:07:07.609940Z,2024-02-20T09:07:00.884840Z,2024-02-20T09:07:01.221700Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.dbt_exposures,model.elementary.dbt_exposures,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,dbt_exposures,INSERT 0 0,success,model,9.62402606010437,2024-02-20T09:07:01.379741Z,2024-02-20T09:07:09.632541Z,2024-02-20T09:07:00.396523Z,2024-02-20T09:07:00.868827Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.dbt_seeds,model.elementary.dbt_seeds,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,dbt_seeds,INSERT 0 0,success,model,9.58202314376831,2024-02-20T09:07:01.683670Z,2024-02-20T09:07:09.842541Z,2024-02-20T09:07:00.935743Z,2024-02-20T09:07:01.282701Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.dbt_metrics,model.elementary.dbt_metrics,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,dbt_metrics,INSERT 0 0,success,model,9.598007678985596,2024-02-20T09:07:01.574704Z,2024-02-20T09:07:09.869543Z,2024-02-20T09:07:00.724557Z,2024-02-20T09:07:01.105716Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,stg_dbt_invocations,CREATE VIEW,success,model,1.2157764434814453,2024-02-20T09:07:10.912456Z,2024-02-20T09:07:11.919237Z,2024-02-20T09:07:10.847454Z,2024-02-20T09:07:10.864454Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.dbt_columns,model.elementary.dbt_columns,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,dbt_columns,INSERT 0 0,success,model,10.562134742736816,2024-02-20T09:06:59.674485Z,2024-02-20T09:07:09.948542Z,2024-02-20T09:06:59.491413Z,2024-02-20T09:06:59.521412Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,dbt_snapshots,INSERT 0 0,success,model,8.464878559112549,2024-02-20T09:07:02.863643Z,2024-02-20T09:07:10.282542Z,2024-02-20T09:07:02.115166Z,2024-02-20T09:07:02.457429Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.dbt_models,model.elementary.dbt_models,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,dbt_models,INSERT 0 0,success,model,10.337931871414185,2024-02-20T09:07:01.614708Z,2024-02-20T09:07:10.580457Z,2024-02-20T09:07:00.783585Z,2024-02-20T09:07:01.141736Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,dbt_source_freshness_results,INSERT 0 0,success,model,2.4088892936706543,2024-02-20T09:07:09.736572Z,2024-02-20T09:07:10.932460Z,2024-02-20T09:07:09.010080Z,2024-02-20T09:07:09.297640Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.metadata,model.elementary.metadata,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,metadata,SELECT 1,success,model,1.4429523944854736,2024-02-20T09:07:10.304543Z,2024-02-20T09:07:11.403497Z,2024-02-20T09:07:10.205544Z,2024-02-20T09:07:10.234544Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-5 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.elementary_test_results,model.elementary.elementary_test_results,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,elementary_test_results,INSERT 0 0,success,model,1.7636899948120117,2024-02-20T09:07:10.264554Z,2024-02-20T09:07:11.702232Z,2024-02-20T09:07:10.144541Z,2024-02-20T09:07:10.219544Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,stg_data_monitoring_metrics,CREATE VIEW,success,model,1.2746922969818115,2024-02-20T09:07:10.658462Z,2024-02-20T09:07:11.778232Z,2024-02-20T09:07:10.561455Z,2024-02-20T09:07:10.615456Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,schema_columns_snapshot,INSERT 0 0,success,model,1.544682502746582,2024-02-20T09:07:10.457542Z,2024-02-20T09:07:11.817228Z,2024-02-20T09:07:10.358544Z,2024-02-20T09:07:10.426542Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.dbt_sources,model.elementary.dbt_sources,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,dbt_sources,INSERT 0 0,success,model,3.40966534614563,2024-02-20T09:07:09.792570Z,2024-02-20T09:07:11.996227Z,2024-02-20T09:07:09.105605Z,2024-02-20T09:07:09.353671Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,stg_dbt_models,CREATE VIEW,success,model,0.6177325248718262,2024-02-20T09:07:11.734230Z,2024-02-20T09:07:12.166234Z,2024-02-20T09:07:11.583217Z,2024-02-20T09:07:11.705230Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,stg_dbt_run_results,CREATE VIEW,success,model,0.5040078163146973,2024-02-20T09:07:11.799229Z,2024-02-20T09:07:12.197230Z,2024-02-20T09:07:11.746231Z,2024-02-20T09:07:11.769246Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,int_accounts_and_groups_joined,CREATE VIEW,success,model,0.43212389945983887,2024-02-20T09:07:11.897229Z,2024-02-20T09:07:12.224229Z,2024-02-20T09:07:11.850230Z,2024-02-20T09:07:11.869236Z,-1,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
    ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,int_union_of_transactions,CREATE VIEW,success,model,0.39264822006225586,2024-02-20T09:07:11.999233Z,2024-02-20T09:07:12.272877Z,2024-02-20T09:07:11.930229Z,2024-02-20T09:07:11.947233Z,-1,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,metrics_anomaly_score,CREATE VIEW,success,model,0.38465380668640137,2024-02-20T09:07:12.032229Z,2024-02-20T09:07:12.319877Z,2024-02-20T09:07:11.968230Z,2024-02-20T09:07:12.014231Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.monitors_runs,model.elementary.monitors_runs,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,monitors_runs,CREATE VIEW,success,model,0.31064796447753906,2024-02-20T09:07:12.089228Z,2024-02-20T09:07:12.329876Z,2024-02-20T09:07:12.056229Z,2024-02-20T09:07:12.069231Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,stg_transactions_3,CREATE VIEW,success,model,1.3874614238739014,2024-02-20T09:13:43.690523Z,2024-02-20T09:13:44.453536Z,2024-02-20T09:13:43.476517Z,2024-02-20T09:13:43.594961Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.job_run_results,model.elementary.job_run_results,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,job_run_results,CREATE VIEW,success,model,0.7262568473815918,2024-02-20T09:07:16.436785Z,2024-02-20T09:07:16.965482Z,2024-02-20T09:07:16.300233Z,2024-02-20T09:07:16.362231Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,snapshot_run_results,CREATE VIEW,success,model,0.7512502670288086,2024-02-20T09:07:16.451786Z,2024-02-20T09:07:17.007480Z,2024-02-20T09:07:16.330232Z,2024-02-20T09:07:16.388231Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.model_run_results,model.elementary.model_run_results,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,model_run_results,CREATE VIEW,success,model,0.7632505893707275,2024-02-20T09:07:16.464491Z,2024-02-20T09:07:17.027486Z,2024-02-20T09:07:16.349258Z,2024-02-20T09:07:16.406232Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,alerts_anomaly_detection,CREATE VIEW,success,model,0.786792516708374,2024-02-20T09:07:16.478463Z,2024-02-20T09:07:17.044484Z,2024-02-20T09:07:16.363237Z,2024-02-20T09:07:16.431230Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,alerts_dbt_source_freshness,CREATE VIEW,success,model,0.7558114528656006,2024-02-20T09:07:16.532461Z,2024-02-20T09:07:17.052484Z,2024-02-20T09:07:16.421232Z,2024-02-20T09:07:16.456787Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,alerts_schema_changes,CREATE VIEW,success,model,0.7888123989105225,2024-02-20T09:07:16.505496Z,2024-02-20T09:07:17.055485Z,2024-02-20T09:07:16.390232Z,2024-02-20T09:07:16.435787Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,alerts_dbt_tests,CREATE VIEW,success,model,0.794806957244873,2024-02-20T09:07:16.492462Z,2024-02-20T09:07:17.058479Z,2024-02-20T09:07:16.377230Z,2024-02-20T09:07:16.432232Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.test_result_rows,model.elementary.test_result_rows,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,test_result_rows,INSERT 0 0,success,model,0.9921207427978516,2024-02-20T09:07:16.517490Z,2024-02-20T09:07:17.248168Z,2024-02-20T09:07:16.401230Z,2024-02-20T09:07:16.449784Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,int_keep_models_relevant_package,CREATE VIEW,success,model,0.5283980369567871,2024-02-20T09:07:17.301754Z,2024-02-20T09:07:17.638974Z,2024-02-20T09:07:17.200569Z,2024-02-20T09:07:17.226568Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,dbt_artifacts_hashes,CREATE VIEW,success,model,0.6014857292175293,2024-02-20T09:07:17.182566Z,2024-02-20T09:07:17.641966Z,2024-02-20T09:07:17.096049Z,2024-02-20T09:07:17.119567Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,anomaly_threshold_sensitivity,CREATE VIEW,success,model,0.4664022922515869,2024-02-20T09:07:17.344872Z,2024-02-20T09:07:17.656968Z,2024-02-20T09:07:17.249163Z,2024-02-20T09:07:17.300757Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,alerts_dbt_models,CREATE VIEW,success,model,0.5054051876068115,2024-02-20T09:07:17.355869Z,2024-02-20T09:07:17.703969Z,2024-02-20T09:07:17.267754Z,2024-02-20T09:07:17.314352Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.information_schema_columns,model.elementary.information_schema_columns,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,information_schema_columns,CREATE VIEW,success,model,0.6489200592041016,2024-02-20T09:07:17.408871Z,2024-02-20T09:07:17.751486Z,2024-02-20T09:07:17.137566Z,2024-02-20T09:07:17.396876Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,int_transactions_and_accounts_and_groups_joined,SELECT 0,success,model,0.6069140434265137,2024-02-20T09:07:17.328873Z,2024-02-20T09:07:17.770485Z,2024-02-20T09:07:17.230568Z,2024-02-20T09:07:17.287755Z,0,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
    ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-5 (worker),table,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,int_join_with_run_results,CREATE VIEW,success,model,0.36152052879333496,2024-02-20T09:07:17.783487Z,2024-02-20T09:07:18.062488Z,2024-02-20T09:07:17.744486Z,2024-02-20T09:07:17.757487Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.elementary.enriched_columns,model.elementary.enriched_columns,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,enriched_columns,CREATE VIEW,success,model,0.45000529289245605,2024-02-20T09:07:17.864488Z,2024-02-20T09:07:18.235489Z,2024-02-20T09:07:17.827487Z,2024-02-20T09:07:17.854491Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.view_selection_tool.fct_model_dependencies,model.view_selection_tool.fct_model_dependencies,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,fct_model_dependencies,SELECT 11,success,model,0.5555202960968018,2024-02-20T09:07:17.791486Z,2024-02-20T09:07:18.240487Z,2024-02-20T09:07:17.738967Z,2024-02-20T09:07:17.758488Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes,
        '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS compiled_code_reference

    FROM including_irrelevant_cols

)

    SELECT * FROM model_dependencies",,,Thread-8 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,fct_destination_nodes,SELECT 1,success,model,0.5605201721191406,2024-02-20T09:07:17.773486Z,2024-02-20T09:07:18.243490Z,2024-02-20T09:07:17.731969Z,2024-02-20T09:07:17.757487Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM destination_models",,,Thread-3 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,int_grouped_on_group_id,CREATE VIEW,success,model,0.4450104236602783,2024-02-20T09:07:17.881486Z,2024-02-20T09:07:18.259486Z,2024-02-20T09:07:17.845486Z,2024-02-20T09:07:17.859488Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        SUM(amount) AS total_amount,
        'fixed_value' AS account_description

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,int_only_materialized_models,CREATE VIEW,success,model,0.24209904670715332,2024-02-20T09:07:18.304486Z,2024-02-20T09:07:18.459583Z,2024-02-20T09:07:18.260486Z,2024-02-20T09:07:18.278486Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,fct_all_models_plus_code,SELECT 11,success,model,0.29909515380859375,2024-02-20T09:07:18.294489Z,2024-02-20T09:07:18.517588Z,2024-02-20T09:07:18.251491Z,2024-02-20T09:07:18.276487Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-4 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,grouped_transactions_unioned_with_original,SELECT 0,success,model,0.23110032081604004,2024-02-20T09:07:18.347492Z,2024-02-20T09:07:18.547580Z,2024-02-20T09:07:18.330488Z,2024-02-20T09:07:18.344489Z,0,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-2 (worker),table,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,int_include_monitoring_id,CREATE VIEW,success,model,0.13000893592834473,2024-02-20T09:07:18.533584Z,2024-02-20T09:07:18.624587Z,2024-02-20T09:07:18.505585Z,2024-02-20T09:07:18.524582Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,int_maintenance_fractions,CREATE VIEW,success,model,0.10689759254455566,2024-02-20T09:07:19.872555Z,2024-02-20T09:07:19.962491Z,2024-02-20T09:07:19.862556Z,2024-02-20T09:07:19.869554Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
02911711-085a-4aa8-b7f8-e2f2f36cb1be.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,02911711-085a-4aa8-b7f8-e2f2f36cb1be,2024-02-20 09:07:21,2024-02-20 09:07:21.922039,fct_avg_maintenance_fractions,SELECT 3,success,model,0.1309983730316162,2024-02-20T09:07:19.987462Z,2024-02-20T09:07:20.101491Z,2024-02-20T09:07:19.977492Z,2024-02-20T09:07:19.984458Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-1 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,stg_groups,CREATE VIEW,success,model,1.3644318580627441,2024-02-20T09:13:43.661487Z,2024-02-20T09:13:44.450538Z,2024-02-20T09:13:43.458518Z,2024-02-20T09:13:43.589954Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 10

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,stg_transactions_2,CREATE VIEW,success,model,1.4124600887298584,2024-02-20T09:13:43.683483Z,2024-02-20T09:13:44.456541Z,2024-02-20T09:13:43.470518Z,2024-02-20T09:13:43.592952Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,stg_transactions_4,CREATE VIEW,success,model,1.4494335651397705,2024-02-20T09:13:43.697487Z,2024-02-20T09:13:44.458567Z,2024-02-20T09:13:43.481517Z,2024-02-20T09:13:43.595953Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,stg_accounts,CREATE VIEW,success,model,1.4914333820343018,2024-02-20T09:13:43.605989Z,2024-02-20T09:13:44.461925Z,2024-02-20T09:13:43.451519Z,2024-02-20T09:13:43.587959Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 20

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,stg_transactions_1,CREATE VIEW,success,model,1.521425485610962,2024-02-20T09:13:43.674484Z,2024-02-20T09:13:44.463920Z,2024-02-20T09:13:43.465519Z,2024-02-20T09:13:43.590954Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,data_monitoring_metrics,INSERT 0 0,success,model,2.44743275642395,2024-02-20T09:13:43.735522Z,2024-02-20T09:13:45.763452Z,2024-02-20T09:13:43.488517Z,2024-02-20T09:13:43.598952Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.dbt_invocations,model.elementary.dbt_invocations,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,dbt_invocations,INSERT 0 0,success,model,5.469524145126343,2024-02-20T09:13:45.782048Z,2024-02-20T09:13:50.881894Z,2024-02-20T09:13:45.523810Z,2024-02-20T09:13:45.739019Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.dbt_run_results,model.elementary.dbt_run_results,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,dbt_run_results,INSERT 0 0,success,model,5.4660303592681885,2024-02-20T09:13:45.819080Z,2024-02-20T09:13:50.890898Z,2024-02-20T09:13:45.670397Z,2024-02-20T09:13:45.744576Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,schema_columns_snapshot,INSERT 0 0,success,model,1.3249261379241943,2024-02-20T09:13:53.260351Z,2024-02-20T09:13:54.379280Z,2024-02-20T09:13:53.161353Z,2024-02-20T09:13:53.196352Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.dbt_columns,model.elementary.dbt_columns,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,dbt_columns,INSERT 0 0,success,model,9.121803998947144,2024-02-20T09:13:43.705514Z,2024-02-20T09:13:52.099368Z,2024-02-20T09:13:43.515518Z,2024-02-20T09:13:43.596953Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.dbt_metrics,model.elementary.dbt_metrics,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,dbt_metrics,INSERT 0 0,success,model,7.495617628097534,2024-02-20T09:13:45.794046Z,2024-02-20T09:13:52.827338Z,2024-02-20T09:13:45.612347Z,2024-02-20T09:13:45.740983Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.dbt_exposures,model.elementary.dbt_exposures,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,dbt_exposures,INSERT 0 0,success,model,7.5029778480529785,2024-02-20T09:13:45.767050Z,2024-02-20T09:13:52.833339Z,2024-02-20T09:13:45.492389Z,2024-02-20T09:13:45.737012Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.dbt_seeds,model.elementary.dbt_seeds,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,dbt_seeds,INSERT 0 0,success,model,7.504703760147095,2024-02-20T09:13:45.831081Z,2024-02-20T09:13:52.940363Z,2024-02-20T09:13:45.703985Z,2024-02-20T09:13:45.747213Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,dbt_snapshots,INSERT 0 0,success,model,6.325040340423584,2024-02-20T09:13:48.325617Z,2024-02-20T09:13:53.316265Z,2024-02-20T09:13:47.488174Z,2024-02-20T09:13:47.827021Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.dbt_models,model.elementary.dbt_models,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,dbt_models,INSERT 0 0,success,model,7.988912343978882,2024-02-20T09:13:45.808046Z,2024-02-20T09:13:53.418264Z,2024-02-20T09:13:45.642351Z,2024-02-20T09:13:45.743056Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,dbt_source_freshness_results,INSERT 0 0,success,model,2.01690411567688,2024-02-20T09:13:52.840335Z,2024-02-20T09:13:53.801265Z,2024-02-20T09:13:52.291594Z,2024-02-20T09:13:52.613295Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.elementary_test_results,model.elementary.elementary_test_results,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,elementary_test_results,INSERT 0 0,success,model,1.3849284648895264,2024-02-20T09:13:53.208355Z,2024-02-20T09:13:54.430311Z,2024-02-20T09:13:53.113352Z,2024-02-20T09:13:53.188352Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,stg_data_monitoring_metrics,CREATE VIEW,success,model,1.0670146942138672,2024-02-20T09:13:53.519269Z,2024-02-20T09:13:54.466284Z,2024-02-20T09:13:53.456265Z,2024-02-20T09:13:53.480264Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.dbt_tests,model.elementary.dbt_tests,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,dbt_tests,INSERT 0 0,success,model,1.5659282207489014,2024-02-20T09:13:53.099351Z,2024-02-20T09:13:54.521281Z,2024-02-20T09:13:53.006353Z,2024-02-20T09:13:53.076355Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,stg_dbt_invocations,CREATE VIEW,success,model,1.1132702827453613,2024-02-20T09:13:53.719265Z,2024-02-20T09:13:54.599535Z,2024-02-20T09:13:53.588265Z,2024-02-20T09:13:53.619266Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.dbt_sources,model.elementary.dbt_sources,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,dbt_sources,INSERT 0 0,success,model,2.8631696701049805,2024-02-20T09:13:52.852335Z,2024-02-20T09:13:54.691538Z,2024-02-20T09:13:52.364246Z,2024-02-20T09:13:52.683367Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,stg_dbt_models,CREATE VIEW,success,model,0.6762576103210449,2024-02-20T09:13:54.415284Z,2024-02-20T09:13:54.958537Z,2024-02-20T09:13:54.356316Z,2024-02-20T09:13:54.384281Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,stg_dbt_run_results,CREATE VIEW,success,model,0.6522619724273682,2024-02-20T09:13:54.477280Z,2024-02-20T09:13:55.010539Z,2024-02-20T09:13:54.432310Z,2024-02-20T09:13:54.456284Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,int_accounts_and_groups_joined,CREATE VIEW,success,model,0.564253568649292,2024-02-20T09:13:54.579539Z,2024-02-20T09:13:55.039535Z,2024-02-20T09:13:54.529280Z,2024-02-20T09:13:54.549110Z,-1,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
    ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,int_join_with_run_results,CREATE VIEW,success,model,0.5120339393615723,2024-02-20T09:13:57.775569Z,2024-02-20T09:13:58.161552Z,2024-02-20T09:13:57.714045Z,2024-02-20T09:13:57.739051Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,int_union_of_transactions,CREATE VIEW,success,model,0.5722622871398926,2024-02-20T09:13:54.662536Z,2024-02-20T09:13:55.098536Z,2024-02-20T09:13:54.564536Z,2024-02-20T09:13:54.605544Z,-1,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,metrics_anomaly_score,CREATE VIEW,success,model,0.571014404296875,2024-02-20T09:13:54.722537Z,2024-02-20T09:13:55.139538Z,2024-02-20T09:13:54.615535Z,2024-02-20T09:13:54.677537Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.monitors_runs,model.elementary.monitors_runs,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,monitors_runs,CREATE VIEW,success,model,0.5030043125152588,2024-02-20T09:13:54.779537Z,2024-02-20T09:13:55.166537Z,2024-02-20T09:13:54.711536Z,2024-02-20T09:13:54.746541Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.job_run_results,model.elementary.job_run_results,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,job_run_results,CREATE VIEW,success,model,0.4215376377105713,2024-02-20T09:13:54.895539Z,2024-02-20T09:13:55.192573Z,2024-02-20T09:13:54.814536Z,2024-02-20T09:13:54.870540Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.model_run_results,model.elementary.model_run_results,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,model_run_results,CREATE VIEW,success,model,0.8354554176330566,2024-02-20T09:13:56.294241Z,2024-02-20T09:13:56.946162Z,2024-02-20T09:13:56.163723Z,2024-02-20T09:13:56.241706Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.enriched_columns,model.elementary.enriched_columns,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,enriched_columns,CREATE VIEW,success,model,0.5075206756591797,2024-02-20T09:13:57.848151Z,2024-02-20T09:13:58.256085Z,2024-02-20T09:13:57.815092Z,2024-02-20T09:13:57.839151Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,snapshot_run_results,CREATE VIEW,success,model,0.848973274230957,2024-02-20T09:13:56.275242Z,2024-02-20T09:13:56.952160Z,2024-02-20T09:13:56.147713Z,2024-02-20T09:13:56.185734Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,alerts_anomaly_detection,CREATE VIEW,success,model,0.8674595355987549,2024-02-20T09:13:56.309244Z,2024-02-20T09:13:56.981162Z,2024-02-20T09:13:56.187733Z,2024-02-20T09:13:56.269241Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,alerts_schema_changes,CREATE VIEW,success,model,0.8684561252593994,2024-02-20T09:13:56.332241Z,2024-02-20T09:13:56.987160Z,2024-02-20T09:13:56.214705Z,2024-02-20T09:13:56.274241Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,alerts_dbt_tests,CREATE VIEW,success,model,0.8974597454071045,2024-02-20T09:13:56.321242Z,2024-02-20T09:13:56.990163Z,2024-02-20T09:13:56.202704Z,2024-02-20T09:13:56.271241Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,dbt_artifacts_hashes,CREATE VIEW,success,model,0.8864631652832031,2024-02-20T09:13:56.439288Z,2024-02-20T09:13:56.996161Z,2024-02-20T09:13:56.260244Z,2024-02-20T09:13:56.292242Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,alerts_dbt_source_freshness,CREATE VIEW,success,model,0.8924360275268555,2024-02-20T09:13:56.429282Z,2024-02-20T09:13:56.999163Z,2024-02-20T09:13:56.243707Z,2024-02-20T09:13:56.289242Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.test_result_rows,model.elementary.test_result_rows,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,test_result_rows,INSERT 0 0,success,model,1.1231536865234375,2024-02-20T09:13:56.418282Z,2024-02-20T09:13:57.248249Z,2024-02-20T09:13:56.225741Z,2024-02-20T09:13:56.280245Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,int_keep_models_relevant_package,CREATE VIEW,success,model,0.5223228931427002,2024-02-20T09:13:57.226247Z,2024-02-20T09:13:57.566427Z,2024-02-20T09:13:57.137720Z,2024-02-20T09:13:57.161249Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,anomaly_threshold_sensitivity,CREATE VIEW,success,model,0.48529624938964844,2024-02-20T09:13:57.298859Z,2024-02-20T09:13:57.618481Z,2024-02-20T09:13:57.176246Z,2024-02-20T09:13:57.253864Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,alerts_dbt_models,CREATE VIEW,success,model,0.4952831268310547,2024-02-20T09:13:57.313374Z,2024-02-20T09:13:57.628486Z,2024-02-20T09:13:57.203246Z,2024-02-20T09:13:57.255858Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.elementary.information_schema_columns,model.elementary.information_schema_columns,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,information_schema_columns,CREATE VIEW,success,model,0.6678810119628906,2024-02-20T09:13:57.377374Z,2024-02-20T09:13:57.675530Z,2024-02-20T09:13:57.086162Z,2024-02-20T09:13:57.369377Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.view_selection_tool.fct_model_dependencies,model.view_selection_tool.fct_model_dependencies,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,fct_model_dependencies,SELECT 11,success,model,0.7270786762237549,2024-02-20T09:13:57.762569Z,2024-02-20T09:13:58.324606Z,2024-02-20T09:13:57.695525Z,2024-02-20T09:13:57.735044Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes,
        '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS compiled_code_reference

    FROM including_irrelevant_cols

)

    SELECT * FROM model_dependencies",,,Thread-8 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,fct_destination_nodes,SELECT 1,success,model,0.7345988750457764,2024-02-20T09:13:57.744046Z,2024-02-20T09:13:58.334611Z,2024-02-20T09:13:57.680526Z,2024-02-20T09:13:57.728052Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM destination_models",,,Thread-6 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,int_transactions_and_accounts_and_groups_joined,SELECT 0,success,model,1.3898935317993164,2024-02-20T09:13:57.282855Z,2024-02-20T09:13:58.534604Z,2024-02-20T09:13:57.170247Z,2024-02-20T09:13:57.251246Z,0,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
    ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-2 (worker),table,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,int_only_materialized_models,CREATE VIEW,success,model,0.36252331733703613,2024-02-20T09:13:58.355609Z,2024-02-20T09:13:58.592610Z,2024-02-20T09:13:58.282609Z,2024-02-20T09:13:58.314613Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,fct_all_models_plus_code,SELECT 11,success,model,0.43052029609680176,2024-02-20T09:13:58.336605Z,2024-02-20T09:13:58.648606Z,2024-02-20T09:13:58.266606Z,2024-02-20T09:13:58.303604Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-3 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,int_grouped_on_group_id,CREATE VIEW,success,model,0.19199824333190918,2024-02-20T09:13:58.609614Z,2024-02-20T09:13:58.756615Z,2024-02-20T09:13:58.585603Z,2024-02-20T09:13:58.600607Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        SUM(amount) AS total_amount,
        'fixed_value' AS account_description

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,int_include_monitoring_id,CREATE VIEW,success,model,0.1880052089691162,2024-02-20T09:13:58.672610Z,2024-02-20T09:13:58.810606Z,2024-02-20T09:13:58.650607Z,2024-02-20T09:13:58.667609Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,stg_dbt_invocations,CREATE VIEW,success,model,1.2916357517242432,2024-02-20T09:23:23.057799Z,2024-02-20T09:23:24.193912Z,2024-02-20T09:23:22.978284Z,2024-02-20T09:23:23.008800Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,grouped_transactions_unioned_with_original,SELECT 0,success,model,0.18500351905822754,2024-02-20T09:13:58.812607Z,2024-02-20T09:13:58.967606Z,2024-02-20T09:13:58.793607Z,2024-02-20T09:13:58.804611Z,0,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-6 (worker),table,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,int_maintenance_fractions,CREATE VIEW,success,model,0.14599967002868652,2024-02-20T09:13:58.857606Z,2024-02-20T09:13:58.976604Z,2024-02-20T09:13:58.841606Z,2024-02-20T09:13:58.852607Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
804441c8-2c4f-4993-9925-76dc5cee9698.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,804441c8-2c4f-4993-9925-76dc5cee9698,2024-02-20 09:14:02,2024-02-20 09:14:02.398584,fct_avg_maintenance_fractions,SELECT 3,success,model,0.13989043235778809,2024-02-20T09:14:00.566582Z,2024-02-20T09:14:00.688759Z,2024-02-20T09:14:00.555339Z,2024-02-20T09:14:00.563578Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-8 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,stg_accounts,CREATE VIEW,success,model,1.021364688873291,2024-02-20T09:23:11.197621Z,2024-02-20T09:23:12.002056Z,2024-02-20T09:23:11.032228Z,2024-02-20T09:23:11.178617Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 20

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,stg_transactions_3,CREATE VIEW,success,model,1.0193712711334229,2024-02-20T09:23:11.323054Z,2024-02-20T09:23:12.008057Z,2024-02-20T09:23:11.057243Z,2024-02-20T09:23:11.184619Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,stg_groups,CREATE VIEW,success,model,1.0273621082305908,2024-02-20T09:23:11.277053Z,2024-02-20T09:23:12.011053Z,2024-02-20T09:23:11.038256Z,2024-02-20T09:23:11.180616Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 10

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,stg_transactions_2,CREATE VIEW,success,model,1.0253703594207764,2024-02-20T09:23:11.309054Z,2024-02-20T09:23:12.013052Z,2024-02-20T09:23:11.052212Z,2024-02-20T09:23:11.183627Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,stg_transactions_1,CREATE VIEW,success,model,1.0293643474578857,2024-02-20T09:23:11.292054Z,2024-02-20T09:23:12.017052Z,2024-02-20T09:23:11.046246Z,2024-02-20T09:23:11.182630Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,stg_transactions_4,CREATE VIEW,success,model,1.0293667316436768,2024-02-20T09:23:11.337055Z,2024-02-20T09:23:12.023051Z,2024-02-20T09:23:11.063679Z,2024-02-20T09:23:11.185621Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,data_monitoring_metrics,INSERT 0 0,success,model,2.4716010093688965,2024-02-20T09:23:11.383050Z,2024-02-20T09:23:13.383336Z,2024-02-20T09:23:11.068707Z,2024-02-20T09:23:11.189616Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.dbt_run_results,model.elementary.dbt_run_results,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,dbt_run_results,INSERT 0 0,success,model,6.84442400932312,2024-02-20T09:23:13.479293Z,2024-02-20T09:23:19.430321Z,2024-02-20T09:23:13.140052Z,2024-02-20T09:23:13.374296Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.dbt_invocations,model.elementary.dbt_invocations,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,dbt_invocations,INSERT 0 0,success,model,6.968420505523682,2024-02-20T09:23:13.467291Z,2024-02-20T09:23:19.445326Z,2024-02-20T09:23:13.024058Z,2024-02-20T09:23:13.366293Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.dbt_metrics,model.elementary.dbt_metrics,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,dbt_metrics,INSERT 0 0,success,model,9.352995157241821,2024-02-20T09:23:13.444297Z,2024-02-20T09:23:21.461972Z,2024-02-20T09:23:13.045057Z,2024-02-20T09:23:13.364297Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.dbt_exposures,model.elementary.dbt_exposures,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,dbt_exposures,INSERT 0 0,success,model,9.503051042556763,2024-02-20T09:23:13.431300Z,2024-02-20T09:23:21.562974Z,2024-02-20T09:23:12.912053Z,2024-02-20T09:23:13.362315Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.dbt_seeds,model.elementary.dbt_seeds,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,dbt_seeds,INSERT 0 0,success,model,9.222025394439697,2024-02-20T09:23:13.493651Z,2024-02-20T09:23:21.676928Z,2024-02-20T09:23:13.235086Z,2024-02-20T09:23:13.390297Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.dbt_tests,model.elementary.dbt_tests,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,dbt_tests,INSERT 0 0,success,model,2.2499804496765137,2024-02-20T09:23:22.265135Z,2024-02-20T09:23:24.218912Z,2024-02-20T09:23:22.075942Z,2024-02-20T09:23:22.199208Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.dbt_columns,model.elementary.dbt_columns,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,dbt_columns,INSERT 0 0,success,model,10.92924165725708,2024-02-20T09:23:11.348053Z,2024-02-20T09:23:21.843927Z,2024-02-20T09:23:11.090677Z,2024-02-20T09:23:11.187627Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,dbt_snapshots,INSERT 0 0,success,model,8.61333179473877,2024-02-20T09:23:14.519552Z,2024-02-20T09:23:22.070927Z,2024-02-20T09:23:13.884945Z,2024-02-20T09:23:14.125947Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.dbt_models,model.elementary.dbt_models,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,dbt_models,INSERT 0 0,success,model,10.038813591003418,2024-02-20T09:23:13.457292Z,2024-02-20T09:23:22.586228Z,2024-02-20T09:23:13.101052Z,2024-02-20T09:23:13.365317Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,dbt_source_freshness_results,INSERT 0 0,success,model,2.7539303302764893,2024-02-20T09:23:21.586208Z,2024-02-20T09:23:23.071798Z,2024-02-20T09:23:20.805939Z,2024-02-20T09:23:21.141944Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.metadata,model.elementary.metadata,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,metadata,SELECT 1,success,model,1.643312692642212,2024-02-20T09:23:22.320665Z,2024-02-20T09:23:23.412271Z,2024-02-20T09:23:22.183210Z,2024-02-20T09:23:22.240209Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-6 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,stg_data_monitoring_metrics,CREATE VIEW,success,model,1.4092459678649902,2024-02-20T09:23:22.537711Z,2024-02-20T09:23:23.757769Z,2024-02-20T09:23:22.445191Z,2024-02-20T09:23:22.485709Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.elementary_test_results,model.elementary.elementary_test_results,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,elementary_test_results,INSERT 0 0,success,model,1.8829867839813232,2024-02-20T09:23:22.304675Z,2024-02-20T09:23:23.858915Z,2024-02-20T09:23:22.129926Z,2024-02-20T09:23:22.218732Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,schema_columns_snapshot,INSERT 0 0,success,model,1.8579816818237305,2024-02-20T09:23:22.373662Z,2024-02-20T09:23:23.863919Z,2024-02-20T09:23:22.207213Z,2024-02-20T09:23:22.264137Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.dbt_sources,model.elementary.dbt_sources,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,dbt_sources,INSERT 0 0,success,model,3.825045108795166,2024-02-20T09:23:21.764925Z,2024-02-20T09:23:24.229913Z,2024-02-20T09:23:20.973937Z,2024-02-20T09:23:21.335972Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,stg_dbt_models,CREATE VIEW,success,model,0.8306765556335449,2024-02-20T09:23:23.835919Z,2024-02-20T09:23:24.499908Z,2024-02-20T09:23:23.744770Z,2024-02-20T09:23:23.791849Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,stg_dbt_run_results,CREATE VIEW,success,model,0.9951024055480957,2024-02-20T09:23:23.955912Z,2024-02-20T09:23:24.774818Z,2024-02-20T09:23:23.893915Z,2024-02-20T09:23:23.923913Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,int_accounts_and_groups_joined,CREATE VIEW,success,model,0.9080955982208252,2024-02-20T09:23:24.070926Z,2024-02-20T09:23:24.818008Z,2024-02-20T09:23:24.004915Z,2024-02-20T09:23:24.039912Z,-1,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
    ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,int_union_of_transactions,CREATE VIEW,success,model,0.8931007385253906,2024-02-20T09:23:24.231911Z,2024-02-20T09:23:24.909008Z,2024-02-20T09:23:24.108911Z,2024-02-20T09:23:24.194912Z,-1,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,metrics_anomaly_score,CREATE VIEW,success,model,0.9320950508117676,2024-02-20T09:23:24.241916Z,2024-02-20T09:23:24.968010Z,2024-02-20T09:23:24.121911Z,2024-02-20T09:23:24.197911Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.monitors_runs,model.elementary.monitors_runs,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,monitors_runs,CREATE VIEW,success,model,0.7071044445037842,2024-02-20T09:23:24.441912Z,2024-02-20T09:23:25.029011Z,2024-02-20T09:23:24.341907Z,2024-02-20T09:23:24.379908Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
053698d1-d4b9-4aca-9d36-b6f431202c14.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,053698d1-d4b9-4aca-9d36-b6f431202c14,2024-02-20 09:45:35,2024-02-20 09:45:35.890319,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.35027194023132324,2024-02-20T09:45:32.718824Z,2024-02-20T09:45:33.013123Z,2024-02-20T09:45:32.684815Z,2024-02-20T09:45:32.710817Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.job_run_results,model.elementary.job_run_results,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,job_run_results,CREATE VIEW,success,model,0.6871030330657959,2024-02-20T09:23:24.503906Z,2024-02-20T09:23:25.047008Z,2024-02-20T09:23:24.389919Z,2024-02-20T09:23:24.466905Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,snapshot_run_results,CREATE VIEW,success,model,0.7775084972381592,2024-02-20T09:23:26.087961Z,2024-02-20T09:23:26.688440Z,2024-02-20T09:23:25.967939Z,2024-02-20T09:23:26.009937Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,alerts_schema_changes,CREATE VIEW,success,model,0.755474328994751,2024-02-20T09:23:26.162728Z,2024-02-20T09:23:26.700441Z,2024-02-20T09:23:26.034941Z,2024-02-20T09:23:26.100961Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,alerts_anomaly_detection,CREATE VIEW,success,model,0.7795038223266602,2024-02-20T09:23:26.130190Z,2024-02-20T09:23:26.704440Z,2024-02-20T09:23:26.003943Z,2024-02-20T09:23:26.064936Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.model_run_results,model.elementary.model_run_results,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,model_run_results,CREATE VIEW,success,model,0.790503740310669,2024-02-20T09:23:26.106963Z,2024-02-20T09:23:26.709438Z,2024-02-20T09:23:25.980936Z,2024-02-20T09:23:26.019934Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,alerts_dbt_tests,CREATE VIEW,success,model,0.8200218677520752,2024-02-20T09:23:26.148722Z,2024-02-20T09:23:26.728438Z,2024-02-20T09:23:26.020939Z,2024-02-20T09:23:26.093961Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,dbt_artifacts_hashes,CREATE VIEW,success,model,0.7940237522125244,2024-02-20T09:23:26.202726Z,2024-02-20T09:23:26.736441Z,2024-02-20T09:23:26.077964Z,2024-02-20T09:23:26.123985Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,alerts_dbt_source_freshness,CREATE VIEW,success,model,0.8050413131713867,2024-02-20T09:23:26.191723Z,2024-02-20T09:23:26.748442Z,2024-02-20T09:23:26.065552Z,2024-02-20T09:23:26.105966Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.test_result_rows,model.elementary.test_result_rows,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,test_result_rows,INSERT 0 0,success,model,1.051793098449707,2024-02-20T09:23:26.175725Z,2024-02-20T09:23:26.960187Z,2024-02-20T09:23:26.047934Z,2024-02-20T09:23:26.103960Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,int_keep_models_relevant_package,CREATE VIEW,success,model,0.5950310230255127,2024-02-20T09:23:26.984736Z,2024-02-20T09:23:27.395987Z,2024-02-20T09:23:26.908663Z,2024-02-20T09:23:26.945184Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,alerts_dbt_models,CREATE VIEW,success,model,0.5969500541687012,2024-02-20T09:23:27.049731Z,2024-02-20T09:23:27.480070Z,2024-02-20T09:23:26.962731Z,2024-02-20T09:23:27.004734Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,anomaly_threshold_sensitivity,CREATE VIEW,success,model,0.6736366748809814,2024-02-20T09:23:27.013733Z,2024-02-20T09:23:27.485075Z,2024-02-20T09:23:26.922662Z,2024-02-20T09:23:26.950184Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.information_schema_columns,model.elementary.information_schema_columns,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,information_schema_columns,CREATE VIEW,success,model,0.8162355422973633,2024-02-20T09:23:27.231942Z,2024-02-20T09:23:27.627682Z,2024-02-20T09:23:26.848664Z,2024-02-20T09:23:27.219943Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,int_join_with_run_results,CREATE VIEW,success,model,0.40125465393066406,2024-02-20T09:23:27.610678Z,2024-02-20T09:23:27.869845Z,2024-02-20T09:23:27.542128Z,2024-02-20T09:23:27.572678Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,fct_destination_nodes,SELECT 1,success,model,0.5328216552734375,2024-02-20T09:23:27.581678Z,2024-02-20T09:23:27.997905Z,2024-02-20T09:23:27.512606Z,2024-02-20T09:23:27.562688Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM destination_models",,,Thread-2 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.view_selection_tool.fct_model_dependencies,model.view_selection_tool.fct_model_dependencies,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,fct_model_dependencies,SELECT 11,success,model,0.5323052406311035,2024-02-20T09:23:27.594681Z,2024-02-20T09:23:28.003903Z,2024-02-20T09:23:27.526607Z,2024-02-20T09:23:27.567679Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes,
        '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS compiled_code_reference

    FROM including_irrelevant_cols

)

    SELECT * FROM model_dependencies",,,Thread-4 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.elementary.enriched_columns,model.elementary.enriched_columns,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,enriched_columns,CREATE VIEW,success,model,0.36518311500549316,2024-02-20T09:23:27.711831Z,2024-02-20T09:23:28.009902Z,2024-02-20T09:23:27.670727Z,2024-02-20T09:23:27.698265Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,int_only_materialized_models,CREATE VIEW,success,model,0.2792351245880127,2024-02-20T09:23:28.048902Z,2024-02-20T09:23:28.229080Z,2024-02-20T09:23:27.984908Z,2024-02-20T09:23:28.014905Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,fct_all_models_plus_code,SELECT 11,success,model,0.3813669681549072,2024-02-20T09:23:28.032908Z,2024-02-20T09:23:28.328678Z,2024-02-20T09:23:27.971847Z,2024-02-20T09:23:28.011902Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-3 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,int_include_monitoring_id,CREATE VIEW,success,model,0.19165420532226562,2024-02-20T09:23:28.302125Z,2024-02-20T09:23:28.448266Z,2024-02-20T09:23:28.266604Z,2024-02-20T09:23:28.296126Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,int_maintenance_fractions,CREATE VIEW,success,model,0.14771008491516113,2024-02-20T09:23:28.489829Z,2024-02-20T09:23:28.610485Z,2024-02-20T09:23:28.473829Z,2024-02-20T09:23:28.485828Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,fct_avg_maintenance_fractions,SELECT 3,success,model,0.18716812133789062,2024-02-20T09:23:28.648069Z,2024-02-20T09:23:28.810184Z,2024-02-20T09:23:28.631083Z,2024-02-20T09:23:28.644071Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-1 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,int_transactions_and_accounts_and_groups_joined,SELECT 99,success,model,10.152553081512451,2024-02-20T09:23:26.999726Z,2024-02-20T09:23:36.981518Z,2024-02-20T09:23:26.916664Z,2024-02-20T09:23:26.947192Z,99,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
    ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-6 (worker),table,"{""_message"": ""SELECT 99"", ""code"": ""SELECT"", ""rows_affected"": 99}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,int_grouped_on_group_id,CREATE VIEW,success,model,0.09937572479248047,2024-02-20T09:23:37.007927Z,2024-02-20T09:23:37.091292Z,2024-02-20T09:23:36.997919Z,2024-02-20T09:23:37.004921Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        SUM(amount) AS total_amount,
        'fixed_value' AS account_description

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f505f1b2-6ee0-4720-955d-cd2745866152.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,f505f1b2-6ee0-4720-955d-cd2745866152,2024-02-20 09:23:40,2024-02-20 09:23:40.318075,grouped_transactions_unioned_with_original,SELECT 108,success,model,0.1216890811920166,2024-02-20T09:23:38.507098Z,2024-02-20T09:23:38.612752Z,2024-02-20T09:23:38.497095Z,2024-02-20T09:23:38.505068Z,108,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-8 (worker),table,"{""_message"": ""SELECT 108"", ""code"": ""SELECT"", ""rows_affected"": 108}"
053698d1-d4b9-4aca-9d36-b6f431202c14.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,053698d1-d4b9-4aca-9d36-b6f431202c14,2024-02-20 09:45:35,2024-02-20 09:45:35.890319,stg_dbt_invocations,CREATE VIEW,success,model,0.3502767086029053,2024-02-20T09:45:32.764850Z,2024-02-20T09:45:33.015087Z,2024-02-20T09:45:32.692818Z,2024-02-20T09:45:32.712850Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
053698d1-d4b9-4aca-9d36-b6f431202c14.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,053698d1-d4b9-4aca-9d36-b6f431202c14,2024-02-20 09:45:35,2024-02-20 09:45:35.890319,stg_dbt_models,CREATE VIEW,success,model,0.3662750720977783,2024-02-20T09:45:32.783201Z,2024-02-20T09:45:33.033100Z,2024-02-20T09:45:32.699850Z,2024-02-20T09:45:32.713818Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
053698d1-d4b9-4aca-9d36-b6f431202c14.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,053698d1-d4b9-4aca-9d36-b6f431202c14,2024-02-20 09:45:35,2024-02-20 09:45:35.890319,stg_dbt_run_results,CREATE VIEW,success,model,0.3702731132507324,2024-02-20T09:45:32.790200Z,2024-02-20T09:45:33.040096Z,2024-02-20T09:45:32.704819Z,2024-02-20T09:45:32.715853Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
053698d1-d4b9-4aca-9d36-b6f431202c14.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,053698d1-d4b9-4aca-9d36-b6f431202c14,2024-02-20 09:45:35,2024-02-20 09:45:35.890319,int_keep_models_relevant_package,CREATE VIEW,success,model,0.09300374984741211,2024-02-20T09:45:33.069091Z,2024-02-20T09:45:33.146116Z,2024-02-20T09:45:33.059089Z,2024-02-20T09:45:33.066088Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
053698d1-d4b9-4aca-9d36-b6f431202c14.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,053698d1-d4b9-4aca-9d36-b6f431202c14,2024-02-20 09:45:35,2024-02-20 09:45:35.890319,int_join_with_run_results,CREATE VIEW,success,model,0.22005009651184082,2024-02-20T09:45:33.247141Z,2024-02-20T09:45:33.373142Z,2024-02-20T09:45:33.186121Z,2024-02-20T09:45:33.218140Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
053698d1-d4b9-4aca-9d36-b6f431202c14.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,053698d1-d4b9-4aca-9d36-b6f431202c14,2024-02-20 09:45:35,2024-02-20 09:45:35.890319,fct_destination_nodes,SELECT 1,success,model,0.3159971237182617,2024-02-20T09:45:33.195659Z,2024-02-20T09:45:33.467121Z,2024-02-20T09:45:33.171092Z,2024-02-20T09:45:33.192089Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM destination_models",,,Thread-8 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
053698d1-d4b9-4aca-9d36-b6f431202c14.model.view_selection_tool.fct_model_dependencies,model.view_selection_tool.fct_model_dependencies,053698d1-d4b9-4aca-9d36-b6f431202c14,2024-02-20 09:45:35,2024-02-20 09:45:35.890319,fct_model_dependencies,SELECT 11,success,model,0.32700037956237793,2024-02-20T09:45:33.238141Z,2024-02-20T09:45:33.472120Z,2024-02-20T09:45:33.177088Z,2024-02-20T09:45:33.194620Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes,
        '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS compiled_code_reference

    FROM including_irrelevant_cols

)

    SELECT * FROM model_dependencies",,,Thread-5 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
053698d1-d4b9-4aca-9d36-b6f431202c14.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,053698d1-d4b9-4aca-9d36-b6f431202c14,2024-02-20 09:45:35,2024-02-20 09:45:35.890319,int_only_materialized_models,CREATE VIEW,success,model,0.1699695587158203,2024-02-20T09:45:33.492088Z,2024-02-20T09:45:33.595107Z,2024-02-20T09:45:33.445141Z,2024-02-20T09:45:33.472120Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
053698d1-d4b9-4aca-9d36-b6f431202c14.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,053698d1-d4b9-4aca-9d36-b6f431202c14,2024-02-20 09:45:35,2024-02-20 09:45:35.890319,fct_all_models_plus_code,SELECT 11,success,model,0.2469637393951416,2024-02-20T09:45:33.480093Z,2024-02-20T09:45:33.640105Z,2024-02-20T09:45:33.436145Z,2024-02-20T09:45:33.468087Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-3 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
053698d1-d4b9-4aca-9d36-b6f431202c14.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,053698d1-d4b9-4aca-9d36-b6f431202c14,2024-02-20 09:45:35,2024-02-20 09:45:35.890319,int_include_monitoring_id,CREATE VIEW,success,model,0.10799837112426758,2024-02-20T09:45:33.640105Z,2024-02-20T09:45:33.720104Z,2024-02-20T09:45:33.618106Z,2024-02-20T09:45:33.634106Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
053698d1-d4b9-4aca-9d36-b6f431202c14.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,053698d1-d4b9-4aca-9d36-b6f431202c14,2024-02-20 09:45:35,2024-02-20 09:45:35.890319,int_maintenance_fractions,CREATE VIEW,success,model,0.08199906349182129,2024-02-20T09:45:33.739105Z,2024-02-20T09:45:33.809104Z,2024-02-20T09:45:33.731104Z,2024-02-20T09:45:33.737105Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
053698d1-d4b9-4aca-9d36-b6f431202c14.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,053698d1-d4b9-4aca-9d36-b6f431202c14,2024-02-20 09:45:35,2024-02-20 09:45:35.890319,fct_avg_maintenance_fractions,SELECT 3,success,model,0.18345165252685547,2024-02-20T09:45:33.833107Z,2024-02-20T09:45:33.998604Z,2024-02-20T09:45:33.821105Z,2024-02-20T09:45:33.831106Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-8 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
f1706541-1a11-42d5-81fb-d459665428d7.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,stg_accounts,CREATE VIEW,success,model,0.759075403213501,2024-02-20T11:40:29.724122Z,2024-02-20T11:40:30.303197Z,2024-02-20T11:40:29.611122Z,2024-02-20T11:40:29.699126Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 20

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,stg_transactions_1,CREATE VIEW,success,model,0.8464429378509521,2024-02-20T11:40:29.783731Z,2024-02-20T11:40:30.409201Z,2024-02-20T11:40:29.625122Z,2024-02-20T11:40:29.709120Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,stg_transactions_4,CREATE VIEW,success,model,0.8454368114471436,2024-02-20T11:40:29.804731Z,2024-02-20T11:40:30.412198Z,2024-02-20T11:40:29.644129Z,2024-02-20T11:40:29.713127Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,stg_transactions_2,CREATE VIEW,success,model,0.8514304161071777,2024-02-20T11:40:29.790730Z,2024-02-20T11:40:30.419204Z,2024-02-20T11:40:29.631125Z,2024-02-20T11:40:29.711122Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,stg_transactions_3,CREATE VIEW,success,model,0.8524367809295654,2024-02-20T11:40:29.797733Z,2024-02-20T11:40:30.422199Z,2024-02-20T11:40:29.637127Z,2024-02-20T11:40:29.712127Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,stg_groups,CREATE VIEW,success,model,0.8614299297332764,2024-02-20T11:40:29.776731Z,2024-02-20T11:40:30.425197Z,2024-02-20T11:40:29.619120Z,2024-02-20T11:40:29.708122Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 10

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,data_monitoring_metrics,INSERT 0 0,success,model,2.3881499767303467,2024-02-20T11:40:29.813734Z,2024-02-20T11:40:31.857266Z,2024-02-20T11:40:29.650124Z,2024-02-20T11:40:29.716123Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.dbt_invocations,model.elementary.dbt_invocations,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,dbt_invocations,INSERT 0 0,success,model,7.07366156578064,2024-02-20T11:40:31.905278Z,2024-02-20T11:40:37.848076Z,2024-02-20T11:40:31.323264Z,2024-02-20T11:40:31.752261Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.dbt_run_results,model.elementary.dbt_run_results,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,dbt_run_results,INSERT 0 0,success,model,6.973811149597168,2024-02-20T11:40:31.953265Z,2024-02-20T11:40:37.922102Z,2024-02-20T11:40:31.546272Z,2024-02-20T11:40:31.836262Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.dbt_exposures,model.elementary.dbt_exposures,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,dbt_exposures,INSERT 0 0,success,model,8.929573059082031,2024-02-20T11:40:31.097263Z,2024-02-20T11:40:38.883377Z,2024-02-20T11:40:30.477079Z,2024-02-20T11:40:30.554078Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.dbt_seeds,model.elementary.dbt_seeds,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,dbt_seeds,INSERT 0 0,success,model,9.205049514770508,2024-02-20T11:40:31.968273Z,2024-02-20T11:40:39.981735Z,2024-02-20T11:40:31.602268Z,2024-02-20T11:40:31.838262Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.dbt_metrics,model.elementary.dbt_metrics,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,dbt_metrics,INSERT 0 0,success,model,9.349965333938599,2024-02-20T11:40:31.919292Z,2024-02-20T11:40:40.172313Z,2024-02-20T11:40:31.416270Z,2024-02-20T11:40:31.781265Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.dbt_columns,model.elementary.dbt_columns,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,dbt_columns,INSERT 0 0,success,model,10.707709550857544,2024-02-20T11:40:29.876303Z,2024-02-20T11:40:40.245313Z,2024-02-20T11:40:29.677126Z,2024-02-20T11:40:29.719125Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,dbt_snapshots,INSERT 0 0,success,model,8.572852849960327,2024-02-20T11:40:33.188874Z,2024-02-20T11:40:40.556392Z,2024-02-20T11:40:32.364817Z,2024-02-20T11:40:32.679982Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.dbt_models,model.elementary.dbt_models,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,dbt_models,INSERT 0 0,success,model,9.894897937774658,2024-02-20T11:40:31.933263Z,2024-02-20T11:40:40.815141Z,2024-02-20T11:40:31.488267Z,2024-02-20T11:40:31.835292Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,dbt_source_freshness_results,INSERT 0 0,success,model,3.0578081607818604,2024-02-20T11:40:39.335161Z,2024-02-20T11:40:41.094920Z,2024-02-20T11:40:38.532664Z,2024-02-20T11:40:38.874391Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.metadata,model.elementary.metadata,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,metadata,SELECT 1,success,model,1.3566720485687256,2024-02-20T11:40:40.606141Z,2024-02-20T11:40:41.651551Z,2024-02-20T11:40:40.499887Z,2024-02-20T11:40:40.540429Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-6 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,int_union_of_transactions,CREATE VIEW,success,model,1.106208324432373,2024-02-20T11:40:40.858163Z,2024-02-20T11:40:41.826572Z,2024-02-20T11:40:40.800143Z,2024-02-20T11:40:40.821142Z,-1,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.elementary_test_results,model.elementary.elementary_test_results,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,elementary_test_results,INSERT 0 0,success,model,1.4704513549804688,2024-02-20T11:40:40.635141Z,2024-02-20T11:40:41.874345Z,2024-02-20T11:40:40.471890Z,2024-02-20T11:40:40.542422Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,schema_columns_snapshot,INSERT 0 0,success,model,1.4149446487426758,2024-02-20T11:40:40.680143Z,2024-02-20T11:40:41.910363Z,2024-02-20T11:40:40.569143Z,2024-02-20T11:40:40.659142Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f1706541-1a11-42d5-81fb-d459665428d7.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,int_accounts_and_groups_joined,CREATE VIEW,success,model,1.088984727859497,2024-02-20T11:40:41.096922Z,2024-02-20T11:40:42.008366Z,2024-02-20T11:40:41.056913Z,2024-02-20T11:40:41.078918Z,-1,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
    ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.dbt_tests,model.elementary.dbt_tests,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,dbt_tests,INSERT 0 0,success,model,1.8390512466430664,2024-02-20T11:40:40.437890Z,2024-02-20T11:40:42.029366Z,2024-02-20T11:40:40.264318Z,2024-02-20T11:40:40.417890Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.dbt_sources,model.elementary.dbt_sources,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,dbt_sources,INSERT 0 0,success,model,3.1834897994995117,2024-02-20T11:40:40.182312Z,2024-02-20T11:40:42.139367Z,2024-02-20T11:40:39.480138Z,2024-02-20T11:40:39.768719Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,metrics_anomaly_score,CREATE VIEW,success,model,0.7659575939178467,2024-02-20T11:40:41.830571Z,2024-02-20T11:40:42.283523Z,2024-02-20T11:40:41.666549Z,2024-02-20T11:40:41.801573Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.monitors_runs,model.elementary.monitors_runs,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,monitors_runs,CREATE VIEW,success,model,0.5535345077514648,2024-02-20T11:40:41.972369Z,2024-02-20T11:40:42.427925Z,2024-02-20T11:40:41.925365Z,2024-02-20T11:40:41.945369Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.job_run_results,model.elementary.job_run_results,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,job_run_results,CREATE VIEW,success,model,0.5285606384277344,2024-02-20T11:40:42.060365Z,2024-02-20T11:40:42.461927Z,2024-02-20T11:40:41.989366Z,2024-02-20T11:40:42.024372Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,snapshot_run_results,CREATE VIEW,success,model,0.4935598373413086,2024-02-20T11:40:42.122365Z,2024-02-20T11:40:42.496924Z,2024-02-20T11:40:42.048372Z,2024-02-20T11:40:42.089363Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.model_run_results,model.elementary.model_run_results,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,model_run_results,CREATE VIEW,success,model,0.4735558032989502,2024-02-20T11:40:42.162912Z,2024-02-20T11:40:42.522926Z,2024-02-20T11:40:42.103367Z,2024-02-20T11:40:42.141366Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,alerts_anomaly_detection,CREATE VIEW,success,model,0.3820312023162842,2024-02-20T11:40:42.242425Z,2024-02-20T11:40:42.527927Z,2024-02-20T11:40:42.194426Z,2024-02-20T11:40:42.218424Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,anomaly_threshold_sensitivity,CREATE VIEW,success,model,0.6782751083374023,2024-02-20T11:40:43.971784Z,2024-02-20T11:40:44.444815Z,2024-02-20T11:40:43.876573Z,2024-02-20T11:40:43.916575Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,alerts_schema_changes,CREATE VIEW,success,model,0.7752933502197266,2024-02-20T11:40:43.903573Z,2024-02-20T11:40:44.481785Z,2024-02-20T11:40:43.776483Z,2024-02-20T11:40:43.824511Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,alerts_dbt_tests,CREATE VIEW,success,model,0.7853014469146729,2024-02-20T11:40:43.888572Z,2024-02-20T11:40:44.486785Z,2024-02-20T11:40:43.755488Z,2024-02-20T11:40:43.815505Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,int_transactions_and_accounts_and_groups_joined,CREATE VIEW,success,model,0.7773044109344482,2024-02-20T11:40:43.936782Z,2024-02-20T11:40:44.497786Z,2024-02-20T11:40:43.818542Z,2024-02-20T11:40:43.886604Z,-1,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
    ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,alerts_dbt_source_freshness,CREATE VIEW,success,model,0.7592856884002686,2024-02-20T11:40:43.944811Z,2024-02-20T11:40:44.500784Z,2024-02-20T11:40:43.826534Z,2024-02-20T11:40:43.888572Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,dbt_artifacts_hashes,CREATE VIEW,success,model,0.7623229026794434,2024-02-20T11:40:43.955782Z,2024-02-20T11:40:44.504780Z,2024-02-20T11:40:43.836598Z,2024-02-20T11:40:43.900598Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.information_schema_columns,model.elementary.information_schema_columns,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,information_schema_columns,CREATE VIEW,success,model,0.8471205234527588,2024-02-20T11:40:44.100780Z,2024-02-20T11:40:44.612660Z,2024-02-20T11:40:43.847594Z,2024-02-20T11:40:44.071783Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.test_result_rows,model.elementary.test_result_rows,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,test_result_rows,INSERT 0 0,success,model,0.9301779270172119,2024-02-20T11:40:43.919574Z,2024-02-20T11:40:44.649663Z,2024-02-20T11:40:43.797507Z,2024-02-20T11:40:43.846606Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
f1706541-1a11-42d5-81fb-d459665428d7.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,int_grouped_on_group_id,CREATE VIEW,success,model,0.2266080379486084,2024-02-20T11:40:44.655662Z,2024-02-20T11:40:44.815267Z,2024-02-20T11:40:44.614663Z,2024-02-20T11:40:44.641667Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        SUM(amount) AS total_amount,
        'fixed_value' AS account_description

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,alerts_dbt_models,CREATE VIEW,success,model,0.272629976272583,2024-02-20T11:40:44.623663Z,2024-02-20T11:40:44.831268Z,2024-02-20T11:40:44.582660Z,2024-02-20T11:40:44.604663Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.elementary.enriched_columns,model.elementary.enriched_columns,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,enriched_columns,CREATE VIEW,success,model,0.17462468147277832,2024-02-20T11:40:44.711269Z,2024-02-20T11:40:44.849289Z,2024-02-20T11:40:44.692255Z,2024-02-20T11:40:44.704270Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
f1706541-1a11-42d5-81fb-d459665428d7.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,f1706541-1a11-42d5-81fb-d459665428d7,2024-02-20 11:40:54,2024-02-20 11:40:54.128521,grouped_transactions_unioned_with_original,SELECT 108,success,model,7.988029718399048,2024-02-20T11:40:44.871286Z,2024-02-20T11:40:52.837335Z,2024-02-20T11:40:44.859290Z,2024-02-20T11:40:44.869287Z,108,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-7 (worker),table,"{""_message"": ""SELECT 108"", ""code"": ""SELECT"", ""rows_affected"": 108}"
a4b69d8f-30b6-4a8e-93f8-a19a75bf6923.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,a4b69d8f-30b6-4a8e-93f8-a19a75bf6923,2024-02-20 11:41:14,2024-02-20 11:41:14.471736,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.34015941619873047,2024-02-20T11:41:11.276323Z,2024-02-20T11:41:11.558504Z,2024-02-20T11:41:11.245328Z,2024-02-20T11:41:11.270329Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a4b69d8f-30b6-4a8e-93f8-a19a75bf6923.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,a4b69d8f-30b6-4a8e-93f8-a19a75bf6923,2024-02-20 11:41:14,2024-02-20 11:41:14.471736,stg_dbt_models,CREATE VIEW,success,model,0.34014248847961426,2024-02-20T11:41:11.325376Z,2024-02-20T11:41:11.567472Z,2024-02-20T11:41:11.257323Z,2024-02-20T11:41:11.272324Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a4b69d8f-30b6-4a8e-93f8-a19a75bf6923.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,a4b69d8f-30b6-4a8e-93f8-a19a75bf6923,2024-02-20 11:41:14,2024-02-20 11:41:14.471736,stg_dbt_invocations,CREATE VIEW,success,model,0.36214208602905273,2024-02-20T11:41:11.335361Z,2024-02-20T11:41:11.586472Z,2024-02-20T11:41:11.251327Z,2024-02-20T11:41:11.273323Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a4b69d8f-30b6-4a8e-93f8-a19a75bf6923.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,a4b69d8f-30b6-4a8e-93f8-a19a75bf6923,2024-02-20 11:41:14,2024-02-20 11:41:14.471736,stg_dbt_run_results,CREATE VIEW,success,model,0.3631408214569092,2024-02-20T11:41:11.343363Z,2024-02-20T11:41:11.592466Z,2024-02-20T11:41:11.263323Z,2024-02-20T11:41:11.274327Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a4b69d8f-30b6-4a8e-93f8-a19a75bf6923.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,a4b69d8f-30b6-4a8e-93f8-a19a75bf6923,2024-02-20 11:41:14,2024-02-20 11:41:14.471736,int_keep_models_relevant_package,CREATE VIEW,success,model,0.10256218910217285,2024-02-20T11:41:11.619471Z,2024-02-20T11:41:11.703026Z,2024-02-20T11:41:11.611471Z,2024-02-20T11:41:11.617469Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a4b69d8f-30b6-4a8e-93f8-a19a75bf6923.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,a4b69d8f-30b6-4a8e-93f8-a19a75bf6923,2024-02-20 11:41:14,2024-02-20 11:41:14.471736,int_join_with_run_results,CREATE VIEW,success,model,0.22904276847839355,2024-02-20T11:41:11.801097Z,2024-02-20T11:41:11.935069Z,2024-02-20T11:41:11.738103Z,2024-02-20T11:41:11.748070Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a4b69d8f-30b6-4a8e-93f8-a19a75bf6923.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,a4b69d8f-30b6-4a8e-93f8-a19a75bf6923,2024-02-20 11:41:14,2024-02-20 11:41:14.471736,fct_destination_nodes,SELECT 1,success,model,0.3430461883544922,2024-02-20T11:41:11.749110Z,2024-02-20T11:41:12.049070Z,2024-02-20T11:41:11.725028Z,2024-02-20T11:41:11.745073Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM destination_models",,,Thread-8 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
a4b69d8f-30b6-4a8e-93f8-a19a75bf6923.model.view_selection_tool.fct_model_dependencies,model.view_selection_tool.fct_model_dependencies,a4b69d8f-30b6-4a8e-93f8-a19a75bf6923,2024-02-20 11:41:14,2024-02-20 11:41:14.471736,fct_model_dependencies,SELECT 11,success,model,0.3530423641204834,2024-02-20T11:41:11.792104Z,2024-02-20T11:41:12.054087Z,2024-02-20T11:41:11.730025Z,2024-02-20T11:41:11.747102Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes,
        '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS compiled_code_reference

    FROM including_irrelevant_cols

)

    SELECT * FROM model_dependencies",,,Thread-5 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
a4b69d8f-30b6-4a8e-93f8-a19a75bf6923.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,a4b69d8f-30b6-4a8e-93f8-a19a75bf6923,2024-02-20 11:41:14,2024-02-20 11:41:14.471736,int_only_materialized_models,CREATE VIEW,success,model,0.1790001392364502,2024-02-20T11:41:12.075069Z,2024-02-20T11:41:12.178075Z,2024-02-20T11:41:12.026071Z,2024-02-20T11:41:12.056076Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a4b69d8f-30b6-4a8e-93f8-a19a75bf6923.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,a4b69d8f-30b6-4a8e-93f8-a19a75bf6923,2024-02-20 11:41:14,2024-02-20 11:41:14.471736,fct_all_models_plus_code,SELECT 11,success,model,0.22299671173095703,2024-02-20T11:41:12.063071Z,2024-02-20T11:41:12.218082Z,2024-02-20T11:41:12.018077Z,2024-02-20T11:41:12.050072Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-7 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
a4b69d8f-30b6-4a8e-93f8-a19a75bf6923.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,a4b69d8f-30b6-4a8e-93f8-a19a75bf6923,2024-02-20 11:41:14,2024-02-20 11:41:14.471736,int_include_monitoring_id,CREATE VIEW,success,model,0.1056358814239502,2024-02-20T11:41:12.219074Z,2024-02-20T11:41:12.299709Z,2024-02-20T11:41:12.204078Z,2024-02-20T11:41:12.211072Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,stg_transactions_1,CREATE VIEW,success,model,0.8107471466064453,2024-02-22T07:54:02.736896Z,2024-02-22T07:54:03.344542Z,2024-02-22T07:54:02.596297Z,2024-02-22T07:54:02.658766Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 50000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a4b69d8f-30b6-4a8e-93f8-a19a75bf6923.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,a4b69d8f-30b6-4a8e-93f8-a19a75bf6923,2024-02-20 11:41:14,2024-02-20 11:41:14.471736,int_maintenance_fractions,CREATE VIEW,success,model,0.11102294921875,2024-02-20T11:41:12.321704Z,2024-02-20T11:41:12.416727Z,2024-02-20T11:41:12.311709Z,2024-02-20T11:41:12.319706Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a4b69d8f-30b6-4a8e-93f8-a19a75bf6923.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,a4b69d8f-30b6-4a8e-93f8-a19a75bf6923,2024-02-20 11:41:14,2024-02-20 11:41:14.471736,fct_avg_maintenance_fractions,SELECT 3,success,model,0.12803339958190918,2024-02-20T11:41:12.439746Z,2024-02-20T11:41:12.551762Z,2024-02-20T11:41:12.429730Z,2024-02-20T11:41:12.437727Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-8 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,stg_groups,CREATE VIEW,success,model,1.3882174491882324,2024-02-20T12:31:59.370704Z,2024-02-20T12:32:00.152809Z,2024-02-20T12:31:59.195091Z,2024-02-20T12:31:59.292671Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 10

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,stg_transactions_4,CREATE VIEW,success,model,1.4030661582946777,2024-02-20T12:31:59.408699Z,2024-02-20T12:32:00.155776Z,2024-02-20T12:31:59.228090Z,2024-02-20T12:31:59.299672Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,stg_transactions_2,CREATE VIEW,success,model,1.435063362121582,2024-02-20T12:31:59.389671Z,2024-02-20T12:32:00.158807Z,2024-02-20T12:31:59.208089Z,2024-02-20T12:31:59.296668Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,stg_transactions_1,CREATE VIEW,success,model,1.470062255859375,2024-02-20T12:31:59.381668Z,2024-02-20T12:32:00.162512Z,2024-02-20T12:31:59.202087Z,2024-02-20T12:31:59.294671Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,stg_transactions_3,CREATE VIEW,success,model,1.5070598125457764,2024-02-20T12:31:59.399705Z,2024-02-20T12:32:00.165485Z,2024-02-20T12:31:59.217089Z,2024-02-20T12:31:59.297669Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,stg_accounts,CREATE VIEW,success,model,1.5420567989349365,2024-02-20T12:31:59.310668Z,2024-02-20T12:32:00.167485Z,2024-02-20T12:31:59.187087Z,2024-02-20T12:31:59.291670Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 20

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,schema_columns_snapshot,INSERT 0 0,success,model,1.6542634963989258,2024-02-20T12:32:10.017533Z,2024-02-20T12:32:11.267434Z,2024-02-20T12:32:09.909573Z,2024-02-20T12:32:09.937532Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,data_monitoring_metrics,INSERT 0 0,success,model,2.249382972717285,2024-02-20T12:31:59.418673Z,2024-02-20T12:32:01.360471Z,2024-02-20T12:31:59.234090Z,2024-02-20T12:31:59.300673Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.dbt_invocations,model.elementary.dbt_invocations,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,dbt_invocations,INSERT 0 0,success,model,6.050473928451538,2024-02-20T12:32:01.679675Z,2024-02-20T12:32:07.398898Z,2024-02-20T12:32:01.463469Z,2024-02-20T12:32:01.646470Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.dbt_run_results,model.elementary.dbt_run_results,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,dbt_run_results,INSERT 0 0,success,model,6.0714802742004395,2024-02-20T12:32:01.724705Z,2024-02-20T12:32:07.440933Z,2024-02-20T12:32:01.552473Z,2024-02-20T12:32:01.652471Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.dbt_metrics,model.elementary.dbt_metrics,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,dbt_metrics,INSERT 0 0,success,model,8.224942445755005,2024-02-20T12:32:01.692679Z,2024-02-20T12:32:09.299450Z,2024-02-20T12:32:01.486472Z,2024-02-20T12:32:01.647471Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.dbt_exposures,model.elementary.dbt_exposures,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,dbt_exposures,INSERT 0 0,success,model,8.232945442199707,2024-02-20T12:32:01.662467Z,2024-02-20T12:32:09.361449Z,2024-02-20T12:32:01.434470Z,2024-02-20T12:32:01.644466Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.dbt_columns,model.elementary.dbt_columns,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,dbt_columns,INSERT 0 0,success,model,10.472324132919312,2024-02-20T12:31:59.435672Z,2024-02-20T12:32:09.390452Z,2024-02-20T12:31:59.250092Z,2024-02-20T12:31:59.302669Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,int_accounts_and_groups_joined,CREATE VIEW,success,model,1.1662483215332031,2024-02-20T12:32:10.634377Z,2024-02-20T12:32:11.484403Z,2024-02-20T12:32:10.514381Z,2024-02-20T12:32:10.566377Z,-1,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
    ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.dbt_seeds,model.elementary.dbt_seeds,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,dbt_seeds,INSERT 0 0,success,model,8.234909772872925,2024-02-20T12:32:01.750679Z,2024-02-20T12:32:09.489486Z,2024-02-20T12:32:01.594471Z,2024-02-20T12:32:01.655498Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,dbt_snapshots,INSERT 0 0,success,model,8.034462690353394,2024-02-20T12:32:02.647980Z,2024-02-20T12:32:09.710142Z,2024-02-20T12:32:01.912774Z,2024-02-20T12:32:02.158748Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.dbt_models,model.elementary.dbt_models,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,dbt_models,INSERT 0 0,success,model,8.859657049179077,2024-02-20T12:32:01.708677Z,2024-02-20T12:32:10.229151Z,2024-02-20T12:32:01.529502Z,2024-02-20T12:32:01.650472Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,dbt_source_freshness_results,INSERT 0 0,success,model,2.56935715675354,2024-02-20T12:32:09.261452Z,2024-02-20T12:32:10.605372Z,2024-02-20T12:32:08.530120Z,2024-02-20T12:32:08.789065Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.metadata,model.elementary.metadata,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,metadata,SELECT 1,success,model,1.4367780685424805,2024-02-20T12:32:09.970534Z,2024-02-20T12:32:10.937172Z,2024-02-20T12:32:09.894076Z,2024-02-20T12:32:09.930536Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-8 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,int_union_of_transactions,CREATE VIEW,success,model,1.1243832111358643,2024-02-20T12:32:10.134131Z,2024-02-20T12:32:10.995939Z,2024-02-20T12:32:10.058533Z,2024-02-20T12:32:10.096129Z,-1,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.elementary_test_results,model.elementary.elementary_test_results,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,elementary_test_results,INSERT 0 0,success,model,1.6682567596435547,2024-02-20T12:32:09.958532Z,2024-02-20T12:32:11.261429Z,2024-02-20T12:32:09.866316Z,2024-02-20T12:32:09.929535Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
3e5e955d-c5b1-4e0e-a737-5fa1ae53671f.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,3e5e955d-c5b1-4e0e-a737-5fa1ae53671f,2024-02-22 09:09:34,2024-02-22 09:09:34.592307,stg_dbt_invocations,CREATE VIEW,success,model,0.4382963180541992,2024-02-22T09:09:30.928284Z,2024-02-22T09:09:31.224023Z,2024-02-22T09:09:30.815721Z,2024-02-22T09:09:30.848729Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.dbt_tests,model.elementary.dbt_tests,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,dbt_tests,INSERT 0 0,success,model,1.9112586975097656,2024-02-20T12:32:09.943532Z,2024-02-20T12:32:11.562399Z,2024-02-20T12:32:09.743141Z,2024-02-20T12:32:09.928542Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.dbt_sources,model.elementary.dbt_sources,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,dbt_sources,INSERT 0 0,success,model,3.219247579574585,2024-02-20T12:32:09.626443Z,2024-02-20T12:32:11.569396Z,2024-02-20T12:32:08.851532Z,2024-02-20T12:32:09.244795Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,metrics_anomaly_score,CREATE VIEW,success,model,0.6761367321014404,2024-02-20T12:32:11.230427Z,2024-02-20T12:32:11.800179Z,2024-02-20T12:32:11.168459Z,2024-02-20T12:32:11.210431Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.monitors_runs,model.elementary.monitors_runs,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,monitors_runs,CREATE VIEW,success,model,0.6175944805145264,2024-02-20T12:32:11.416400Z,2024-02-20T12:32:11.848055Z,2024-02-20T12:32:11.285354Z,2024-02-20T12:32:11.391402Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.job_run_results,model.elementary.job_run_results,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,job_run_results,CREATE VIEW,success,model,0.6535940170288086,2024-02-20T12:32:11.440397Z,2024-02-20T12:32:11.878054Z,2024-02-20T12:32:11.294354Z,2024-02-20T12:32:11.396397Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.model_run_results,model.elementary.model_run_results,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,model_run_results,CREATE VIEW,success,model,0.47165656089782715,2024-02-20T12:32:11.584398Z,2024-02-20T12:32:11.934056Z,2024-02-20T12:32:11.514399Z,2024-02-20T12:32:11.546397Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,int_transactions_and_accounts_and_groups_joined,SELECT 99,success,model,3.6968765258789062,2024-02-20T12:32:13.206787Z,2024-02-20T12:32:16.715665Z,2024-02-20T12:32:13.079783Z,2024-02-20T12:32:13.145785Z,99,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
    ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-8 (worker),table,"{""_message"": ""SELECT 99"", ""code"": ""SELECT"", ""rows_affected"": 99}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,snapshot_run_results,CREATE VIEW,success,model,0.4826538562774658,2024-02-20T12:32:11.571396Z,2024-02-20T12:32:11.937053Z,2024-02-20T12:32:11.503397Z,2024-02-20T12:32:11.544398Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,alerts_anomaly_detection,CREATE VIEW,success,model,0.3456594944000244,2024-02-20T12:32:11.729398Z,2024-02-20T12:32:11.978051Z,2024-02-20T12:32:11.673397Z,2024-02-20T12:32:11.698399Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,anomaly_threshold_sensitivity,CREATE VIEW,success,model,0.6685981750488281,2024-02-20T12:32:13.244786Z,2024-02-20T12:32:13.684531Z,2024-02-20T12:32:13.135783Z,2024-02-20T12:32:13.183785Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,alerts_dbt_tests,CREATE VIEW,success,model,0.7506022453308105,2024-02-20T12:32:13.146784Z,2024-02-20T12:32:13.727346Z,2024-02-20T12:32:13.023739Z,2024-02-20T12:32:13.060820Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,alerts_schema_changes,CREATE VIEW,success,model,0.7716009616851807,2024-02-20T12:32:13.167787Z,2024-02-20T12:32:13.744349Z,2024-02-20T12:32:13.046743Z,2024-02-20T12:32:13.096806Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,alerts_dbt_source_freshness,CREATE VIEW,success,model,0.7505745887756348,2024-02-20T12:32:13.215786Z,2024-02-20T12:32:13.749344Z,2024-02-20T12:32:13.085785Z,2024-02-20T12:32:13.152787Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,dbt_artifacts_hashes,CREATE VIEW,success,model,0.7626922130584717,2024-02-20T12:32:13.230801Z,2024-02-20T12:32:13.772342Z,2024-02-20T12:32:13.098790Z,2024-02-20T12:32:13.165786Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.information_schema_columns,model.elementary.information_schema_columns,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,information_schema_columns,CREATE VIEW,success,model,0.8271791934967041,2024-02-20T12:32:13.352784Z,2024-02-20T12:32:13.856924Z,2024-02-20T12:32:13.107784Z,2024-02-20T12:32:13.339787Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.test_result_rows,model.elementary.test_result_rows,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,test_result_rows,INSERT 0 0,success,model,0.9061863422393799,2024-02-20T12:32:13.186796Z,2024-02-20T12:32:13.912925Z,2024-02-20T12:32:13.062787Z,2024-02-20T12:32:13.124783Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,alerts_dbt_models,CREATE VIEW,success,model,0.2587733268737793,2024-02-20T12:32:13.870923Z,2024-02-20T12:32:14.041138Z,2024-02-20T12:32:13.824405Z,2024-02-20T12:32:13.861926Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.elementary.enriched_columns,model.elementary.enriched_columns,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,enriched_columns,CREATE VIEW,success,model,0.18422150611877441,2024-02-20T12:32:13.953531Z,2024-02-20T12:32:14.095138Z,2024-02-20T12:32:13.924925Z,2024-02-20T12:32:13.946465Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,int_grouped_on_group_id,CREATE VIEW,success,model,0.08799576759338379,2024-02-20T12:32:16.739642Z,2024-02-20T12:32:16.813635Z,2024-02-20T12:32:16.731636Z,2024-02-20T12:32:16.737666Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        SUM(amount) AS total_amount,
        'fixed_value' AS account_description

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
dc562945-f612-40da-a2e9-6eedd26cd9fd.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,dc562945-f612-40da-a2e9-6eedd26cd9fd,2024-02-20 12:32:18,2024-02-20 12:32:18.257307,grouped_transactions_unioned_with_original,SELECT 108,success,model,0.11803913116455078,2024-02-20T12:32:16.835668Z,2024-02-20T12:32:16.938672Z,2024-02-20T12:32:16.826636Z,2024-02-20T12:32:16.833638Z,108,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-2 (worker),table,"{""_message"": ""SELECT 108"", ""code"": ""SELECT"", ""rows_affected"": 108}"
62f1bb21-2525-42a1-9015-12ff3e19c1bf.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,62f1bb21-2525-42a1-9015-12ff3e19c1bf,2024-02-20 12:32:42,2024-02-20 12:32:42.357180,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.3845329284667969,2024-02-20T12:32:39.028799Z,2024-02-20T12:32:39.347365Z,2024-02-20T12:32:39.000800Z,2024-02-20T12:32:39.021799Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62f1bb21-2525-42a1-9015-12ff3e19c1bf.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,62f1bb21-2525-42a1-9015-12ff3e19c1bf,2024-02-20 12:32:42,2024-02-20 12:32:42.357180,stg_dbt_invocations,CREATE VIEW,success,model,0.40653347969055176,2024-02-20T12:32:39.089752Z,2024-02-20T12:32:39.388336Z,2024-02-20T12:32:39.005798Z,2024-02-20T12:32:39.022799Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62f1bb21-2525-42a1-9015-12ff3e19c1bf.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,62f1bb21-2525-42a1-9015-12ff3e19c1bf,2024-02-20 12:32:42,2024-02-20 12:32:42.357180,stg_dbt_models,CREATE VIEW,success,model,0.42153358459472656,2024-02-20T12:32:39.101753Z,2024-02-20T12:32:39.395336Z,2024-02-20T12:32:39.010798Z,2024-02-20T12:32:39.025799Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62f1bb21-2525-42a1-9015-12ff3e19c1bf.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,62f1bb21-2525-42a1-9015-12ff3e19c1bf,2024-02-20 12:32:42,2024-02-20 12:32:42.357180,stg_dbt_run_results,CREATE VIEW,success,model,0.4225301742553711,2024-02-20T12:32:39.110753Z,2024-02-20T12:32:39.402336Z,2024-02-20T12:32:39.015800Z,2024-02-20T12:32:39.026799Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62f1bb21-2525-42a1-9015-12ff3e19c1bf.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,62f1bb21-2525-42a1-9015-12ff3e19c1bf,2024-02-20 12:32:42,2024-02-20 12:32:42.357180,int_keep_models_relevant_package,CREATE VIEW,success,model,0.10699653625488281,2024-02-20T12:32:39.454335Z,2024-02-20T12:32:39.539336Z,2024-02-20T12:32:39.439339Z,2024-02-20T12:32:39.451335Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62f1bb21-2525-42a1-9015-12ff3e19c1bf.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,62f1bb21-2525-42a1-9015-12ff3e19c1bf,2024-02-20 12:32:42,2024-02-20 12:32:42.357180,int_join_with_run_results,CREATE VIEW,success,model,0.21860241889953613,2024-02-20T12:32:39.636690Z,2024-02-20T12:32:39.769691Z,2024-02-20T12:32:39.574141Z,2024-02-20T12:32:39.584143Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,stg_groups,CREATE VIEW,success,model,0.7951514720916748,2024-02-22T07:54:02.736896Z,2024-02-22T07:54:03.328909Z,2024-02-22T07:54:02.596297Z,2024-02-22T07:54:02.658766Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 1000000

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62f1bb21-2525-42a1-9015-12ff3e19c1bf.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,62f1bb21-2525-42a1-9015-12ff3e19c1bf,2024-02-20 12:32:42,2024-02-20 12:32:42.357180,fct_destination_nodes,SELECT 1,success,model,0.3938407897949219,2024-02-20T12:32:39.585143Z,2024-02-20T12:32:39.932696Z,2024-02-20T12:32:39.561142Z,2024-02-20T12:32:39.581143Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM destination_models",,,Thread-8 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
62f1bb21-2525-42a1-9015-12ff3e19c1bf.model.view_selection_tool.fct_model_dependencies,model.view_selection_tool.fct_model_dependencies,62f1bb21-2525-42a1-9015-12ff3e19c1bf,2024-02-20 12:32:42,2024-02-20 12:32:42.357180,fct_model_dependencies,SELECT 11,success,model,0.42020440101623535,2024-02-20T12:32:39.626692Z,2024-02-20T12:32:39.958693Z,2024-02-20T12:32:39.566140Z,2024-02-20T12:32:39.584143Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes,
        '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS compiled_code_reference

    FROM including_irrelevant_cols

)

    SELECT * FROM model_dependencies",,,Thread-5 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
62f1bb21-2525-42a1-9015-12ff3e19c1bf.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,62f1bb21-2525-42a1-9015-12ff3e19c1bf,2024-02-20 12:32:42,2024-02-20 12:32:42.357180,int_only_materialized_models,CREATE VIEW,success,model,0.28100085258483887,2024-02-20T12:32:39.891692Z,2024-02-20T12:32:40.077690Z,2024-02-20T12:32:39.826690Z,2024-02-20T12:32:39.857692Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62f1bb21-2525-42a1-9015-12ff3e19c1bf.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,62f1bb21-2525-42a1-9015-12ff3e19c1bf,2024-02-20 12:32:42,2024-02-20 12:32:42.357180,fct_all_models_plus_code,SELECT 11,success,model,0.31999850273132324,2024-02-20T12:32:39.864693Z,2024-02-20T12:32:40.114695Z,2024-02-20T12:32:39.819692Z,2024-02-20T12:32:39.856692Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-3 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
62f1bb21-2525-42a1-9015-12ff3e19c1bf.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,62f1bb21-2525-42a1-9015-12ff3e19c1bf,2024-02-20 12:32:42,2024-02-20 12:32:42.357180,int_include_monitoring_id,CREATE VIEW,success,model,0.18199968338012695,2024-02-20T12:32:40.115691Z,2024-02-20T12:32:40.274695Z,2024-02-20T12:32:40.101692Z,2024-02-20T12:32:40.109691Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62f1bb21-2525-42a1-9015-12ff3e19c1bf.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,62f1bb21-2525-42a1-9015-12ff3e19c1bf,2024-02-20 12:32:42,2024-02-20 12:32:42.357180,int_maintenance_fractions,CREATE VIEW,success,model,0.08500123023986816,2024-02-20T12:32:40.302691Z,2024-02-20T12:32:40.369692Z,2024-02-20T12:32:40.290693Z,2024-02-20T12:32:40.299691Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62f1bb21-2525-42a1-9015-12ff3e19c1bf.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,62f1bb21-2525-42a1-9015-12ff3e19c1bf,2024-02-20 12:32:42,2024-02-20 12:32:42.357180,fct_avg_maintenance_fractions,SELECT 3,success,model,0.13656115531921387,2024-02-20T12:32:40.393693Z,2024-02-20T12:32:40.513254Z,2024-02-20T12:32:40.381695Z,2024-02-20T12:32:40.391691Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-8 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,stg_accounts,CREATE VIEW,success,model,0.8420271873474121,2024-02-22T07:54:02.674392Z,2024-02-22T07:54:03.344542Z,2024-02-22T07:54:02.580641Z,2024-02-22T07:54:02.658766Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 10000000

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,stg_transactions_4,CREATE VIEW,success,model,0.8263731002807617,2024-02-22T07:54:02.752519Z,2024-02-22T07:54:03.344542Z,2024-02-22T07:54:02.611919Z,2024-02-22T07:54:02.674392Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 50000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,stg_transactions_2,CREATE VIEW,success,model,0.8732483386993408,2024-02-22T07:54:02.752519Z,2024-02-22T07:54:03.360198Z,2024-02-22T07:54:02.596297Z,2024-02-22T07:54:02.674392Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 50000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,stg_transactions_3,CREATE VIEW,success,model,0.8888742923736572,2024-02-22T07:54:02.768145Z,2024-02-22T07:54:03.375793Z,2024-02-22T07:54:02.611919Z,2024-02-22T07:54:02.674392Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 50000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,data_monitoring_metrics,INSERT 0 0,success,model,2.423039197921753,2024-02-22T07:54:02.768145Z,2024-02-22T07:54:04.951839Z,2024-02-22T07:54:02.627518Z,2024-02-22T07:54:02.674392Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.dbt_columns,model.elementary.dbt_columns,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,dbt_columns,INSERT 0 0,success,model,7.51473331451416,2024-02-22T07:54:02.840718Z,2024-02-22T07:54:10.064156Z,2024-02-22T07:54:02.643143Z,2024-02-22T07:54:02.674392Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.dbt_invocations,model.elementary.dbt_invocations,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,dbt_invocations,INSERT 0 0,success,model,6.6414899826049805,2024-02-22T07:54:04.842433Z,2024-02-22T07:54:10.095406Z,2024-02-22T07:54:04.032045Z,2024-02-22T07:54:04.701839Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.dbt_run_results,model.elementary.dbt_run_results,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,dbt_run_results,INSERT 0 0,success,model,6.65714693069458,2024-02-22T07:54:04.889352Z,2024-02-22T07:54:10.157907Z,2024-02-22T07:54:04.701839Z,2024-02-22T07:54:04.826848Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.dbt_exposures,model.elementary.dbt_exposures,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,dbt_exposures,INSERT 0 0,success,model,8.613628387451172,2024-02-22T07:54:04.811222Z,2024-02-22T07:54:12.036302Z,2024-02-22T07:54:03.766450Z,2024-02-22T07:54:04.529933Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.dbt_metrics,model.elementary.dbt_metrics,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,dbt_metrics,INSERT 0 0,success,model,8.629254579544067,2024-02-22T07:54:04.858065Z,2024-02-22T07:54:12.098801Z,2024-02-22T07:54:04.545591Z,2024-02-22T07:54:04.748713Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.dbt_seeds,model.elementary.dbt_seeds,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,dbt_seeds,INSERT 0 0,success,model,8.051133155822754,2024-02-22T07:54:04.936184Z,2024-02-22T07:54:12.161301Z,2024-02-22T07:54:04.779974Z,2024-02-22T07:54:04.858065Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.dbt_models,model.elementary.dbt_models,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,dbt_models,INSERT 0 0,success,model,9.00739049911499,2024-02-22T07:54:04.873717Z,2024-02-22T07:54:12.492515Z,2024-02-22T07:54:04.654942Z,2024-02-22T07:54:04.779974Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,dbt_snapshots,INSERT 0 0,success,model,5.202232360839844,2024-02-22T07:54:09.413731Z,2024-02-22T07:54:12.539435Z,2024-02-22T07:54:08.676867Z,2024-02-22T07:54:09.320011Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,dbt_source_freshness_results,INSERT 0 0,success,model,2.7372500896453857,2024-02-22T07:54:12.005052Z,2024-02-22T07:54:12.895187Z,2024-02-22T07:54:11.189553Z,2024-02-22T07:54:11.926955Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.metadata,model.elementary.metadata,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,metadata,SELECT 1,success,model,1.3169403076171875,2024-02-22T07:54:12.445129Z,2024-02-22T07:54:13.509479Z,2024-02-22T07:54:12.288841Z,2024-02-22T07:54:12.320103Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-1 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.elementary_test_results,model.elementary.elementary_test_results,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,elementary_test_results,INSERT 0 0,success,model,1.395054817199707,2024-02-22T07:54:12.320103Z,2024-02-22T07:54:13.571981Z,2024-02-22T07:54:12.223802Z,2024-02-22T07:54:12.288841Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,int_accounts_and_groups_joined,CREATE VIEW,success,model,0.9660196304321289,2024-02-22T07:54:12.716608Z,2024-02-22T07:54:13.571981Z,2024-02-22T07:54:12.662208Z,2024-02-22T07:54:12.685385Z,-1,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
    ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,int_union_of_transactions,CREATE VIEW,success,model,0.9660196304321289,2024-02-22T07:54:12.806939Z,2024-02-22T07:54:13.587606Z,2024-02-22T07:54:12.685385Z,2024-02-22T07:54:12.700999Z,-1,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,schema_columns_snapshot,INSERT 0 0,success,model,1.3300144672393799,2024-02-22T07:54:12.508151Z,2024-02-22T07:54:13.618854Z,2024-02-22T07:54:12.335718Z,2024-02-22T07:54:12.476343Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.dbt_tests,model.elementary.dbt_tests,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,dbt_tests,INSERT 0 0,success,model,1.6711454391479492,2024-02-22T07:54:12.130053Z,2024-02-22T07:54:13.634481Z,2024-02-22T07:54:12.051927Z,2024-02-22T07:54:12.098801Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.dbt_sources,model.elementary.dbt_sources,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,dbt_sources,INSERT 0 0,success,model,2.5022077560424805,2024-02-22T07:54:12.036302Z,2024-02-22T07:54:13.707417Z,2024-02-22T07:54:11.942554Z,2024-02-22T07:54:11.989425Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,metrics_anomaly_score,CREATE VIEW,success,model,0.64341139793396,2024-02-22T07:54:13.509479Z,2024-02-22T07:54:14.019917Z,2024-02-22T07:54:13.446983Z,2024-02-22T07:54:13.478234Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.monitors_runs,model.elementary.monitors_runs,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,monitors_runs,CREATE VIEW,success,model,0.5829260349273682,2024-02-22T07:54:13.691795Z,2024-02-22T07:54:14.186157Z,2024-02-22T07:54:13.634481Z,2024-02-22T07:54:13.676198Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.job_run_results,model.elementary.job_run_results,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,job_run_results,CREATE VIEW,success,model,0.5724637508392334,2024-02-22T07:54:13.801170Z,2024-02-22T07:54:14.233037Z,2024-02-22T07:54:13.723041Z,2024-02-22T07:54:13.769920Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.model_run_results,model.elementary.model_run_results,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,model_run_results,CREATE VIEW,success,model,0.5724878311157227,2024-02-22T07:54:13.801170Z,2024-02-22T07:54:14.248662Z,2024-02-22T07:54:13.738699Z,2024-02-22T07:54:13.769920Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,snapshot_run_results,CREATE VIEW,success,model,0.5724878311157227,2024-02-22T07:54:13.816795Z,2024-02-22T07:54:14.248662Z,2024-02-22T07:54:13.754291Z,2024-02-22T07:54:13.769920Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,alerts_anomaly_detection,CREATE VIEW,success,model,0.5099921226501465,2024-02-22T07:54:13.848042Z,2024-02-22T07:54:14.264283Z,2024-02-22T07:54:13.769920Z,2024-02-22T07:54:13.816795Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.information_schema_columns,model.elementary.information_schema_columns,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,information_schema_columns,CREATE VIEW,success,model,0.6959362030029297,2024-02-22T07:54:15.343037Z,2024-02-22T07:54:15.731876Z,2024-02-22T07:54:15.117077Z,2024-02-22T07:54:15.327412Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,alerts_dbt_tests,CREATE VIEW,success,model,0.6012554168701172,2024-02-22T07:54:15.148349Z,2024-02-22T07:54:15.568635Z,2024-02-22T07:54:15.038940Z,2024-02-22T07:54:15.070194Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,anomaly_threshold_sensitivity,CREATE VIEW,success,model,0.5705080032348633,2024-02-22T07:54:15.226442Z,2024-02-22T07:54:15.586789Z,2024-02-22T07:54:15.132690Z,2024-02-22T07:54:15.179602Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,dbt_artifacts_hashes,CREATE VIEW,success,model,0.6172664165496826,2024-02-22T07:54:15.210850Z,2024-02-22T07:54:15.646263Z,2024-02-22T07:54:15.101437Z,2024-02-22T07:54:15.163979Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,alerts_dbt_source_freshness,CREATE VIEW,success,model,0.6329219341278076,2024-02-22T07:54:15.195189Z,2024-02-22T07:54:15.646263Z,2024-02-22T07:54:15.085814Z,2024-02-22T07:54:15.148349Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,alerts_schema_changes,CREATE VIEW,success,model,0.6642014980316162,2024-02-22T07:54:15.163979Z,2024-02-22T07:54:15.654789Z,2024-02-22T07:54:15.054595Z,2024-02-22T07:54:15.117077Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.test_result_rows,model.elementary.test_result_rows,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,test_result_rows,INSERT 0 0,success,model,0.750877857208252,2024-02-22T07:54:15.179602Z,2024-02-22T07:54:15.774193Z,2024-02-22T07:54:15.070194Z,2024-02-22T07:54:15.148349Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,alerts_dbt_models,CREATE VIEW,success,model,0.33396387100219727,2024-02-22T07:54:15.731876Z,2024-02-22T07:54:15.999141Z,2024-02-22T07:54:15.708205Z,2024-02-22T07:54:15.728866Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.elementary.enriched_columns,model.elementary.enriched_columns,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,enriched_columns,CREATE VIEW,success,model,0.2765374183654785,2024-02-22T07:54:15.813495Z,2024-02-22T07:54:16.059668Z,2024-02-22T07:54:15.796342Z,2024-02-22T07:54:15.813495Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,int_transactions_and_accounts_and_groups_joined,SELECT 199999983,success,model,747.7376036643982,2024-02-22T07:54:15.195189Z,2024-02-22T08:06:42.760916Z,2024-02-22T07:54:15.085814Z,2024-02-22T07:54:15.148349Z,199999983,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
    ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-1 (worker),table,"{""_message"": ""SELECT 199999983"", ""code"": ""SELECT"", ""rows_affected"": 199999983}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,int_grouped_on_group_id,CREATE VIEW,success,model,0.11952018737792969,2024-02-22T08:06:42.815446Z,2024-02-22T08:06:42.903663Z,2024-02-22T08:06:42.799730Z,2024-02-22T08:06:42.815446Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        SUM(amount) AS total_amount,
        'fixed_value' AS account_description

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
001e816d-e75a-40e6-8879-2d179415e4b7.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,001e816d-e75a-40e6-8879-2d179415e4b7,2024-02-22 08:12:48,2024-02-22 08:12:48.629968,grouped_transactions_unioned_with_original,SELECT 200999924,success,model,364.3250935077667,2024-02-22T08:06:42.934874Z,2024-02-22T08:12:47.240828Z,2024-02-22T08:06:42.919249Z,2024-02-22T08:06:42.934874Z,200999924,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-7 (worker),table,"{""_message"": ""SELECT 200999924"", ""code"": ""SELECT"", ""rows_affected"": 200999924}"
a2eb56e1-cae2-4660-ae3f-43767be7a11e.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,a2eb56e1-cae2-4660-ae3f-43767be7a11e,2024-02-22 08:15:05,2024-02-22 08:15:05.297675,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.35584425926208496,2024-02-22T08:15:01.889317Z,2024-02-22T08:15:02.167031Z,2024-02-22T08:15:01.858063Z,2024-02-22T08:15:01.873698Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a2eb56e1-cae2-4660-ae3f-43767be7a11e.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,a2eb56e1-cae2-4660-ae3f-43767be7a11e,2024-02-22 08:15:05,2024-02-22 08:15:05.297675,stg_dbt_invocations,CREATE VIEW,success,model,0.37147951126098633,2024-02-22T08:15:01.936203Z,2024-02-22T08:15:02.198278Z,2024-02-22T08:15:01.858063Z,2024-02-22T08:15:01.873698Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a2eb56e1-cae2-4660-ae3f-43767be7a11e.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,a2eb56e1-cae2-4660-ae3f-43767be7a11e,2024-02-22 08:15:05,2024-02-22 08:15:05.297675,stg_dbt_models,CREATE VIEW,success,model,0.37147951126098633,2024-02-22T08:15:01.936203Z,2024-02-22T08:15:02.213914Z,2024-02-22T08:15:01.858063Z,2024-02-22T08:15:01.873698Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a2eb56e1-cae2-4660-ae3f-43767be7a11e.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,a2eb56e1-cae2-4660-ae3f-43767be7a11e,2024-02-22 08:15:05,2024-02-22 08:15:05.297675,stg_dbt_run_results,CREATE VIEW,success,model,0.38709330558776855,2024-02-22T08:15:01.951810Z,2024-02-22T08:15:02.229528Z,2024-02-22T08:15:01.873698Z,2024-02-22T08:15:01.873698Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a2eb56e1-cae2-4660-ae3f-43767be7a11e.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,a2eb56e1-cae2-4660-ae3f-43767be7a11e,2024-02-22 08:15:05,2024-02-22 08:15:05.297675,int_keep_models_relevant_package,CREATE VIEW,success,model,0.07812213897705078,2024-02-22T08:15:02.260776Z,2024-02-22T08:15:02.323278Z,2024-02-22T08:15:02.245156Z,2024-02-22T08:15:02.260776Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a2eb56e1-cae2-4660-ae3f-43767be7a11e.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,a2eb56e1-cae2-4660-ae3f-43767be7a11e,2024-02-22 08:15:05,2024-02-22 08:15:05.297675,int_join_with_run_results,CREATE VIEW,success,model,0.20825624465942383,2024-02-22T08:15:02.432657Z,2024-02-22T08:15:02.547160Z,2024-02-22T08:15:02.370154Z,2024-02-22T08:15:02.370154Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a2eb56e1-cae2-4660-ae3f-43767be7a11e.model.view_selection_tool.fct_model_dependencies,model.view_selection_tool.fct_model_dependencies,a2eb56e1-cae2-4660-ae3f-43767be7a11e,2024-02-22 08:15:05,2024-02-22 08:15:05.297675,fct_model_dependencies,SELECT 11,success,model,0.3814883232116699,2024-02-22T08:15:02.417027Z,2024-02-22T08:15:02.704771Z,2024-02-22T08:15:02.354527Z,2024-02-22T08:15:02.370154Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes,
        '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS compiled_code_reference

    FROM including_irrelevant_cols

)

    SELECT * FROM model_dependencies",,,Thread-5 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
a2eb56e1-cae2-4660-ae3f-43767be7a11e.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,a2eb56e1-cae2-4660-ae3f-43767be7a11e,2024-02-22 08:15:05,2024-02-22 08:15:05.297675,fct_destination_nodes,SELECT 1,success,model,0.3814883232116699,2024-02-22T08:15:02.370154Z,2024-02-22T08:15:02.704771Z,2024-02-22T08:15:02.354527Z,2024-02-22T08:15:02.370154Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM destination_models",,,Thread-8 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
a2eb56e1-cae2-4660-ae3f-43767be7a11e.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,a2eb56e1-cae2-4660-ae3f-43767be7a11e,2024-02-22 08:15:05,2024-02-22 08:15:05.297675,int_only_materialized_models,CREATE VIEW,success,model,0.23579168319702148,2024-02-22T08:15:02.640915Z,2024-02-22T08:15:02.798523Z,2024-02-22T08:15:02.609662Z,2024-02-22T08:15:02.625293Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a2eb56e1-cae2-4660-ae3f-43767be7a11e.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,a2eb56e1-cae2-4660-ae3f-43767be7a11e,2024-02-22 08:15:05,2024-02-22 08:15:05.297675,fct_all_models_plus_code,SELECT 11,success,model,0.2770655155181885,2024-02-22T08:15:02.625293Z,2024-02-22T08:15:02.839854Z,2024-02-22T08:15:02.594036Z,2024-02-22T08:15:02.625293Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-3 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
a2eb56e1-cae2-4660-ae3f-43767be7a11e.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,a2eb56e1-cae2-4660-ae3f-43767be7a11e,2024-02-22 08:15:05,2024-02-22 08:15:05.297675,int_include_monitoring_id,CREATE VIEW,success,model,0.15626263618469238,2024-02-22T08:15:02.839854Z,2024-02-22T08:15:02.980480Z,2024-02-22T08:15:02.824217Z,2024-02-22T08:15:02.824217Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a2eb56e1-cae2-4660-ae3f-43767be7a11e.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,a2eb56e1-cae2-4660-ae3f-43767be7a11e,2024-02-22 08:15:05,2024-02-22 08:15:05.297675,int_maintenance_fractions,CREATE VIEW,success,model,0.0781245231628418,2024-02-22T08:15:03.011728Z,2024-02-22T08:15:03.074231Z,2024-02-22T08:15:02.996107Z,2024-02-22T08:15:02.996107Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a2eb56e1-cae2-4660-ae3f-43767be7a11e.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,a2eb56e1-cae2-4660-ae3f-43767be7a11e,2024-02-22 08:15:05,2024-02-22 08:15:05.297675,fct_avg_maintenance_fractions,SELECT 3,success,model,0.1203315258026123,2024-02-22T08:15:03.105479Z,2024-02-22T08:15:03.210185Z,2024-02-22T08:15:03.089854Z,2024-02-22T08:15:03.105479Z,3,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-5 (worker),table,"{""_message"": ""SELECT 3"", ""code"": ""SELECT"", ""rows_affected"": 3}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,stg_accounts,CREATE VIEW,success,model,0.8010025024414062,2024-02-22T08:37:01.719870Z,2024-02-22T08:37:02.338871Z,2024-02-22T08:37:01.618876Z,2024-02-22T08:37:01.700869Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 10000000

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,stg_transactions_1,CREATE VIEW,success,model,0.8049895763397217,2024-02-22T08:37:01.774870Z,2024-02-22T08:37:02.375871Z,2024-02-22T08:37:01.630870Z,2024-02-22T08:37:01.703869Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 50000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,stg_groups,CREATE VIEW,success,model,0.8100025653839111,2024-02-22T08:37:01.766895Z,2024-02-22T08:37:02.377867Z,2024-02-22T08:37:01.624871Z,2024-02-22T08:37:01.702869Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 1000000

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,stg_transactions_2,CREATE VIEW,success,model,0.8130009174346924,2024-02-22T08:37:01.782866Z,2024-02-22T08:37:02.384868Z,2024-02-22T08:37:01.636870Z,2024-02-22T08:37:01.705867Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 50000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,stg_transactions_3,CREATE VIEW,success,model,0.8139958381652832,2024-02-22T08:37:01.789897Z,2024-02-22T08:37:02.387867Z,2024-02-22T08:37:01.641896Z,2024-02-22T08:37:01.706870Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 50000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,stg_transactions_4,CREATE VIEW,success,model,0.8159964084625244,2024-02-22T08:37:01.796867Z,2024-02-22T08:37:02.390897Z,2024-02-22T08:37:01.650868Z,2024-02-22T08:37:01.707870Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 50000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,data_monitoring_metrics,INSERT 0 0,success,model,2.168246269226074,2024-02-22T08:37:01.804896Z,2024-02-22T08:37:03.668118Z,2024-02-22T08:37:01.655871Z,2024-02-22T08:37:01.709881Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.dbt_columns,model.elementary.dbt_columns,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,dbt_columns,INSERT 0 0,success,model,7.3755810260772705,2024-02-22T08:37:01.867868Z,2024-02-22T08:37:08.952495Z,2024-02-22T08:37:01.679866Z,2024-02-22T08:37:01.711869Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.dbt_run_results,model.elementary.dbt_run_results,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,dbt_run_results,INSERT 0 0,success,model,5.654203176498413,2024-02-22T08:37:03.746147Z,2024-02-22T08:37:09.037466Z,2024-02-22T08:37:03.590248Z,2024-02-22T08:37:03.651121Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.dbt_invocations,model.elementary.dbt_invocations,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,dbt_invocations,INSERT 0 0,success,model,6.014180660247803,2024-02-22T08:37:03.685119Z,2024-02-22T08:37:09.057465Z,2024-02-22T08:37:03.495251Z,2024-02-22T08:37:03.643118Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.dbt_metrics,model.elementary.dbt_metrics,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,dbt_metrics,INSERT 0 0,success,model,8.01438593864441,2024-02-22T08:37:03.719146Z,2024-02-22T08:37:11.117668Z,2024-02-22T08:37:03.535286Z,2024-02-22T08:37:03.645127Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.dbt_exposures,model.elementary.dbt_exposures,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,dbt_exposures,INSERT 0 0,success,model,8.49850344657898,2024-02-22T08:37:03.669119Z,2024-02-22T08:37:11.180668Z,2024-02-22T08:37:03.416250Z,2024-02-22T08:37:03.562249Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.dbt_tests,model.elementary.dbt_tests,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,dbt_tests,INSERT 0 0,success,model,2.063093900680542,2024-02-22T08:37:11.155669Z,2024-02-22T08:37:13.035756Z,2024-02-22T08:37:11.059684Z,2024-02-22T08:37:11.111672Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.dbt_seeds,model.elementary.dbt_seeds,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,dbt_seeds,INSERT 0 0,success,model,7.804419994354248,2024-02-22T08:37:03.761153Z,2024-02-22T08:37:11.191667Z,2024-02-22T08:37:03.621463Z,2024-02-22T08:37:03.655130Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,dbt_snapshots,INSERT 0 0,success,model,7.196547508239746,2024-02-22T08:37:07.455558Z,2024-02-22T08:37:11.386667Z,2024-02-22T08:37:05.568820Z,2024-02-22T08:37:06.279046Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.dbt_models,model.elementary.dbt_models,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,dbt_models,INSERT 0 0,success,model,8.228422164916992,2024-02-22T08:37:03.733147Z,2024-02-22T08:37:11.486673Z,2024-02-22T08:37:03.563247Z,2024-02-22T08:37:03.649118Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,dbt_source_freshness_results,INSERT 0 0,success,model,2.5437519550323486,2024-02-22T08:37:11.038668Z,2024-02-22T08:37:11.956464Z,2024-02-22T08:37:10.697999Z,2024-02-22T08:37:10.986670Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.metadata,model.elementary.metadata,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,metadata,SELECT 1,success,model,1.5575578212738037,2024-02-22T08:37:11.406668Z,2024-02-22T08:37:12.817227Z,2024-02-22T08:37:11.331668Z,2024-02-22T08:37:11.374669Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-1 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,int_accounts_and_groups_joined,CREATE VIEW,success,model,1.2265572547912598,2024-02-22T08:37:11.730668Z,2024-02-22T08:37:12.849225Z,2024-02-22T08:37:11.680669Z,2024-02-22T08:37:11.710669Z,-1,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
    ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.elementary_test_results,model.elementary.elementary_test_results,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,elementary_test_results,INSERT 0 0,success,model,1.7480757236480713,2024-02-22T08:37:11.358672Z,2024-02-22T08:37:12.951231Z,2024-02-22T08:37:11.259669Z,2024-02-22T08:37:11.322669Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,schema_columns_snapshot,INSERT 0 0,success,model,1.6960866451263428,2024-02-22T08:37:11.447678Z,2024-02-22T08:37:12.966224Z,2024-02-22T08:37:11.337667Z,2024-02-22T08:37:11.387678Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.dbt_sources,model.elementary.dbt_sources,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,dbt_sources,INSERT 0 0,success,model,2.201157331466675,2024-02-22T08:37:11.123667Z,2024-02-22T08:37:13.143753Z,2024-02-22T08:37:11.003675Z,2024-02-22T08:37:11.094667Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,metrics_anomaly_score,CREATE VIEW,success,model,1.5208795070648193,2024-02-22T08:37:12.832231Z,2024-02-22T08:37:13.609330Z,2024-02-22T08:37:12.507924Z,2024-02-22T08:37:12.798225Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.monitors_runs,model.elementary.monitors_runs,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,monitors_runs,CREATE VIEW,success,model,0.7201063632965088,2024-02-22T08:37:13.057754Z,2024-02-22T08:37:13.648327Z,2024-02-22T08:37:12.987756Z,2024-02-22T08:37:13.041756Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.job_run_results,model.elementary.job_run_results,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,job_run_results,CREATE VIEW,success,model,0.7171056270599365,2024-02-22T08:37:13.070754Z,2024-02-22T08:37:13.667335Z,2024-02-22T08:37:13.005755Z,2024-02-22T08:37:13.043754Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,snapshot_run_results,CREATE VIEW,success,model,0.6421093940734863,2024-02-22T08:37:13.152755Z,2024-02-22T08:37:13.717866Z,2024-02-22T08:37:13.107756Z,2024-02-22T08:37:13.136756Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.model_run_results,model.elementary.model_run_results,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,model_run_results,CREATE VIEW,success,model,0.6436293125152588,2024-02-22T08:37:13.207754Z,2024-02-22T08:37:13.739382Z,2024-02-22T08:37:13.126755Z,2024-02-22T08:37:13.149755Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,alerts_anomaly_detection,CREATE VIEW,success,model,0.6096358299255371,2024-02-22T08:37:13.244757Z,2024-02-22T08:37:13.749381Z,2024-02-22T08:37:13.184758Z,2024-02-22T08:37:13.230752Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,alerts_schema_changes,CREATE VIEW,success,model,0.9087200164794922,2024-02-22T08:37:14.978767Z,2024-02-22T08:37:15.640409Z,2024-02-22T08:37:14.810210Z,2024-02-22T08:37:14.899736Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,anomaly_threshold_sensitivity,CREATE VIEW,success,model,0.869706392288208,2024-02-22T08:37:15.059768Z,2024-02-22T08:37:15.645399Z,2024-02-22T08:37:14.929771Z,2024-02-22T08:37:14.976768Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,alerts_dbt_tests,CREATE VIEW,success,model,0.9277052879333496,2024-02-22T08:37:14.960768Z,2024-02-22T08:37:15.651392Z,2024-02-22T08:37:14.781685Z,2024-02-22T08:37:14.834731Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,alerts_dbt_source_freshness,CREATE VIEW,success,model,0.9080932140350342,2024-02-22T08:37:15.019768Z,2024-02-22T08:37:15.655393Z,2024-02-22T08:37:14.863730Z,2024-02-22T08:37:14.956770Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,dbt_artifacts_hashes,CREATE VIEW,success,model,0.9162976741790771,2024-02-22T08:37:15.037768Z,2024-02-22T08:37:15.660393Z,2024-02-22T08:37:14.877733Z,2024-02-22T08:37:14.957773Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.information_schema_columns,model.elementary.information_schema_columns,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:00,2024-02-22 08:54:01.047604,information_schema_columns,CREATE VIEW,success,model,0.8963067531585693,2024-02-22T08:37:15.171980Z,2024-02-22T08:37:15.664395Z,2024-02-22T08:37:14.889734Z,2024-02-22T08:37:15.157978Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.test_result_rows,model.elementary.test_result_rows,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:01,2024-02-22 08:54:01.047604,test_result_rows,INSERT 0 0,success,model,1.0862784385681152,2024-02-22T08:37:14.999770Z,2024-02-22T08:37:15.850230Z,2024-02-22T08:37:14.836733Z,2024-02-22T08:37:14.953769Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.enriched_columns,model.elementary.enriched_columns,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:01,2024-02-22 08:54:01.047604,enriched_columns,CREATE VIEW,success,model,0.24729180335998535,2024-02-22T08:37:15.814704Z,2024-02-22T08:37:15.976267Z,2024-02-22T08:37:15.772981Z,2024-02-22T08:37:15.790985Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:01,2024-02-22 08:54:01.047604,alerts_dbt_models,CREATE VIEW,success,model,0.2602882385253906,2024-02-22T08:37:15.792980Z,2024-02-22T08:37:15.983266Z,2024-02-22T08:37:15.739980Z,2024-02-22T08:37:15.786980Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:01,2024-02-22 08:54:01.047604,int_union_of_transactions,SELECT 200000000,success,model,261.0626292228699,2024-02-22T08:37:11.814667Z,2024-02-22T08:41:32.776303Z,2024-02-22T08:37:11.753668Z,2024-02-22T08:37:11.782667Z,200000000,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-4 (worker),table,"{""_message"": ""SELECT 200000000"", ""code"": ""SELECT"", ""rows_affected"": 200000000}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:01,2024-02-22 08:54:01.047604,int_transactions_and_accounts_and_groups_joined,CREATE VIEW,success,model,0.596257209777832,2024-02-22T08:41:32.800303Z,2024-02-22T08:41:33.381550Z,2024-02-22T08:41:32.791300Z,2024-02-22T08:41:32.798304Z,-1,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
    ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:01,2024-02-22 08:54:01.047604,int_grouped_on_group_id,CREATE VIEW,success,model,0.09800100326538086,2024-02-22T08:41:33.406553Z,2024-02-22T08:41:33.488557Z,2024-02-22T08:41:33.395555Z,2024-02-22T08:41:33.404552Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        SUM(amount) AS total_amount,
        'fixed_value' AS account_description

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
62cfc86a-d970-4eb8-83d2-3cc14e9515f3.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,62cfc86a-d970-4eb8-83d2-3cc14e9515f3,2024-02-22 08:54:01,2024-02-22 08:54:01.047604,grouped_transactions_unioned_with_original,SELECT 200999924,success,model,744.9230599403381,2024-02-22T08:41:33.511553Z,2024-02-22T08:53:58.408610Z,2024-02-22T08:41:33.502555Z,2024-02-22T08:41:33.508553Z,200999924,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-1 (worker),table,"{""_message"": ""SELECT 200999924"", ""code"": ""SELECT"", ""rows_affected"": 200999924}"
a917281b-321c-4d5e-9fd5-14023080cc8e.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,a917281b-321c-4d5e-9fd5-14023080cc8e,2024-02-22 08:54:38,2024-02-22 08:54:38.427126,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.4060096740722656,2024-02-22T08:54:34.831390Z,2024-02-22T08:54:35.156418Z,2024-02-22T08:54:34.781391Z,2024-02-22T08:54:34.824387Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a917281b-321c-4d5e-9fd5-14023080cc8e.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,a917281b-321c-4d5e-9fd5-14023080cc8e,2024-02-22 08:54:38,2024-02-22 08:54:38.427126,stg_dbt_invocations,CREATE VIEW,success,model,0.4209933280944824,2024-02-22T08:54:34.894387Z,2024-02-22T08:54:35.181421Z,2024-02-22T08:54:34.787385Z,2024-02-22T08:54:34.828387Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a917281b-321c-4d5e-9fd5-14023080cc8e.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,a917281b-321c-4d5e-9fd5-14023080cc8e,2024-02-22 08:54:38,2024-02-22 08:54:38.427126,stg_dbt_models,CREATE VIEW,success,model,0.4300053119659424,2024-02-22T08:54:34.913386Z,2024-02-22T08:54:35.192421Z,2024-02-22T08:54:34.796388Z,2024-02-22T08:54:34.865385Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a917281b-321c-4d5e-9fd5-14023080cc8e.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,a917281b-321c-4d5e-9fd5-14023080cc8e,2024-02-22 08:54:38,2024-02-22 08:54:38.427126,stg_dbt_run_results,CREATE VIEW,success,model,0.4350001811981201,2024-02-22T08:54:34.905386Z,2024-02-22T08:54:35.198393Z,2024-02-22T08:54:34.804389Z,2024-02-22T08:54:34.829388Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a917281b-321c-4d5e-9fd5-14023080cc8e.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,a917281b-321c-4d5e-9fd5-14023080cc8e,2024-02-22 08:54:38,2024-02-22 08:54:38.427126,int_keep_models_relevant_package,CREATE VIEW,success,model,0.09699583053588867,2024-02-22T08:54:35.235388Z,2024-02-22T08:54:35.313392Z,2024-02-22T08:54:35.224418Z,2024-02-22T08:54:35.233388Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.dbt_models,model.elementary.dbt_models,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,dbt_models,INSERT 0 0,success,model,9.104260921478271,2024-02-22T08:59:46.402656Z,2024-02-22T08:59:53.649611Z,2024-02-22T08:59:44.716351Z,2024-02-22T08:59:45.223352Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
a917281b-321c-4d5e-9fd5-14023080cc8e.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,a917281b-321c-4d5e-9fd5-14023080cc8e,2024-02-22 08:54:38,2024-02-22 08:54:38.427126,int_join_with_run_results,CREATE VIEW,success,model,0.30460047721862793,2024-02-22T08:54:35.445387Z,2024-02-22T08:54:35.623987Z,2024-02-22T08:54:35.356389Z,2024-02-22T08:54:35.366388Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a917281b-321c-4d5e-9fd5-14023080cc8e.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,a917281b-321c-4d5e-9fd5-14023080cc8e,2024-02-22 08:54:38,2024-02-22 08:54:38.427126,fct_destination_nodes,SELECT 1,success,model,0.42560625076293945,2024-02-22T08:54:35.370421Z,2024-02-22T08:54:35.742987Z,2024-02-22T08:54:35.339396Z,2024-02-22T08:54:35.363388Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM destination_models",,,Thread-8 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
a917281b-321c-4d5e-9fd5-14023080cc8e.model.view_selection_tool.fct_model_dependencies,model.view_selection_tool.fct_model_dependencies,a917281b-321c-4d5e-9fd5-14023080cc8e,2024-02-22 08:54:38,2024-02-22 08:54:38.427126,fct_model_dependencies,SELECT 11,success,model,0.4476048946380615,2024-02-22T08:54:35.410394Z,2024-02-22T08:54:35.751989Z,2024-02-22T08:54:35.346390Z,2024-02-22T08:54:35.365391Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes,
        '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS compiled_code_reference

    FROM including_irrelevant_cols

)

    SELECT * FROM model_dependencies",,,Thread-5 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
a917281b-321c-4d5e-9fd5-14023080cc8e.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,a917281b-321c-4d5e-9fd5-14023080cc8e,2024-02-22 08:54:38,2024-02-22 08:54:38.427126,int_only_materialized_models,CREATE VIEW,success,model,0.19400382041931152,2024-02-22T08:54:35.769988Z,2024-02-22T08:54:35.883989Z,2024-02-22T08:54:35.716989Z,2024-02-22T08:54:35.746990Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a917281b-321c-4d5e-9fd5-14023080cc8e.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,a917281b-321c-4d5e-9fd5-14023080cc8e,2024-02-22 08:54:38,2024-02-22 08:54:38.427126,fct_all_models_plus_code,SELECT 11,success,model,0.2989962100982666,2024-02-22T08:54:35.759988Z,2024-02-22T08:54:35.961992Z,2024-02-22T08:54:35.707989Z,2024-02-22T08:54:35.744988Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-3 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
a917281b-321c-4d5e-9fd5-14023080cc8e.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,a917281b-321c-4d5e-9fd5-14023080cc8e,2024-02-22 08:54:38,2024-02-22 08:54:38.427126,int_include_monitoring_id,CREATE VIEW,success,model,0.13600420951843262,2024-02-22T08:54:35.928991Z,2024-02-22T08:54:36.034990Z,2024-02-22T08:54:35.914989Z,2024-02-22T08:54:35.924991Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a917281b-321c-4d5e-9fd5-14023080cc8e.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,a917281b-321c-4d5e-9fd5-14023080cc8e,2024-02-22 08:54:38,2024-02-22 08:54:38.427126,int_maintenance_fractions,CREATE VIEW,success,model,0.12299394607543945,2024-02-22T08:54:36.071994Z,2024-02-22T08:54:36.168992Z,2024-02-22T08:54:36.052990Z,2024-02-22T08:54:36.066993Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a917281b-321c-4d5e-9fd5-14023080cc8e.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,a917281b-321c-4d5e-9fd5-14023080cc8e,2024-02-22 08:54:38,2024-02-22 08:54:38.427126,fct_avg_maintenance_fractions,SELECT 4,success,model,0.17599987983703613,2024-02-22T08:54:36.200989Z,2024-02-22T08:54:36.354991Z,2024-02-22T08:54:36.185990Z,2024-02-22T08:54:36.196988Z,4,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-8 (worker),table,"{""_message"": ""SELECT 4"", ""code"": ""SELECT"", ""rows_affected"": 4}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,stg_accounts,CREATE VIEW,success,model,1.312370777130127,2024-02-22T08:59:41.917467Z,2024-02-22T08:59:43.007843Z,2024-02-22T08:59:41.783466Z,2024-02-22T08:59:41.893463Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 1000000

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,stg_groups,CREATE VIEW,success,model,2.6570801734924316,2024-02-22T08:59:41.998474Z,2024-02-22T08:59:43.257842Z,2024-02-22T08:59:41.791466Z,2024-02-22T08:59:41.895465Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 100000

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,stg_transactions_4,CREATE VIEW,success,model,2.6520907878875732,2024-02-22T08:59:42.037464Z,2024-02-22T08:59:43.477842Z,2024-02-22T08:59:41.824465Z,2024-02-22T08:59:41.903464Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 50000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,stg_transactions_3,CREATE VIEW,success,model,2.6560895442962646,2024-02-22T08:59:42.029465Z,2024-02-22T08:59:43.572842Z,2024-02-22T08:59:41.812466Z,2024-02-22T08:59:41.900472Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 50000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,stg_transactions_1,CREATE VIEW,success,model,2.6640875339508057,2024-02-22T08:59:42.010466Z,2024-02-22T08:59:43.664548Z,2024-02-22T08:59:41.798464Z,2024-02-22T08:59:41.898463Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 50000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,stg_transactions_2,CREATE VIEW,success,model,2.663083791732788,2024-02-22T08:59:42.020465Z,2024-02-22T08:59:43.758550Z,2024-02-22T08:59:41.806466Z,2024-02-22T08:59:41.899469Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 50000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,data_monitoring_metrics,INSERT 0 0,success,model,2.9478886127471924,2024-02-22T08:59:42.113466Z,2024-02-22T08:59:44.615351Z,2024-02-22T08:59:41.831461Z,2024-02-22T08:59:41.908467Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,stg_transactions_4,CREATE VIEW,success,model,0.7679986953735352,2024-02-22T09:17:06.403163Z,2024-02-22T09:17:06.955165Z,2024-02-22T09:17:06.261164Z,2024-02-22T09:17:06.317165Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 50000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.dbt_columns,model.elementary.dbt_columns,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,dbt_columns,INSERT 0 0,success,model,8.578608274459839,2024-02-22T08:59:42.057468Z,2024-02-22T08:59:50.314091Z,2024-02-22T08:59:41.862466Z,2024-02-22T08:59:41.906463Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.dbt_invocations,model.elementary.dbt_invocations,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,dbt_invocations,INSERT 0 0,success,model,6.909649610519409,2024-02-22T08:59:46.306618Z,2024-02-22T08:59:50.839442Z,2024-02-22T08:59:44.648352Z,2024-02-22T08:59:45.129384Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.dbt_run_results,model.elementary.dbt_run_results,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,dbt_run_results,INSERT 0 0,success,model,7.2826454639434814,2024-02-22T08:59:46.498658Z,2024-02-22T08:59:50.863446Z,2024-02-22T08:59:44.743349Z,2024-02-22T08:59:45.269351Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.dbt_exposures,model.elementary.dbt_exposures,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,dbt_exposures,INSERT 0 0,success,model,8.532262563705444,2024-02-22T08:59:44.621352Z,2024-02-22T08:59:52.968615Z,2024-02-22T08:59:44.513350Z,2024-02-22T08:59:44.585384Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.dbt_seeds,model.elementary.dbt_seeds,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,dbt_seeds,INSERT 0 0,success,model,8.566254138946533,2024-02-22T08:59:46.594657Z,2024-02-22T08:59:53.141609Z,2024-02-22T08:59:44.772383Z,2024-02-22T08:59:45.349350Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.dbt_metrics,model.elementary.dbt_metrics,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,dbt_metrics,INSERT 0 0,success,model,8.603269100189209,2024-02-22T08:59:46.210656Z,2024-02-22T08:59:53.175650Z,2024-02-22T08:59:44.687351Z,2024-02-22T08:59:45.113384Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,dbt_snapshots,INSERT 0 0,success,model,5.963998556137085,2024-02-22T08:59:49.717411Z,2024-02-22T08:59:53.337610Z,2024-02-22T08:59:48.597896Z,2024-02-22T08:59:49.230233Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,dbt_source_freshness_results,INSERT 0 0,success,model,3.438170909881592,2024-02-22T08:59:51.664996Z,2024-02-22T08:59:54.065611Z,2024-02-22T08:59:50.778443Z,2024-02-22T08:59:50.855443Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,int_accounts_and_groups_joined,CREATE VIEW,success,model,1.3274104595184326,2024-02-22T08:59:53.829610Z,2024-02-22T08:59:54.979021Z,2024-02-22T08:59:53.742619Z,2024-02-22T08:59:53.779634Z,-1,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
    ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.metadata,model.elementary.metadata,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,metadata,SELECT 1,success,model,1.6874175071716309,2024-02-22T08:59:53.607611Z,2024-02-22T08:59:54.987045Z,2024-02-22T08:59:53.377613Z,2024-02-22T08:59:53.558611Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-4 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.elementary_test_results,model.elementary.elementary_test_results,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,elementary_test_results,INSERT 0 0,success,model,1.8753747940063477,2024-02-22T08:59:53.311612Z,2024-02-22T08:59:55.014017Z,2024-02-22T08:59:53.202620Z,2024-02-22T08:59:53.273612Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,schema_columns_snapshot,INSERT 0 0,success,model,1.8689064979553223,2024-02-22T08:59:53.670612Z,2024-02-22T08:59:55.159528Z,2024-02-22T08:59:53.403611Z,2024-02-22T08:59:53.585618Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.dbt_tests,model.elementary.dbt_tests,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,dbt_tests,INSERT 0 0,success,model,2.2469189167022705,2024-02-22T08:59:53.148613Z,2024-02-22T08:59:55.171519Z,2024-02-22T08:59:53.054614Z,2024-02-22T08:59:53.107614Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.dbt_sources,model.elementary.dbt_sources,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,dbt_sources,INSERT 0 0,success,model,2.577784538269043,2024-02-22T08:59:53.120612Z,2024-02-22T08:59:55.490388Z,2024-02-22T08:59:53.004617Z,2024-02-22T08:59:53.096610Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,int_union_of_transactions,CREATE VIEW,success,model,1.8667778968811035,2024-02-22T08:59:53.987622Z,2024-02-22T08:59:55.683387Z,2024-02-22T08:59:53.907611Z,2024-02-22T08:59:53.956612Z,-1,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,metrics_anomaly_score,CREATE VIEW,success,model,1.4197781085968018,2024-02-22T08:59:54.938018Z,2024-02-22T08:59:55.687388Z,2024-02-22T08:59:54.365613Z,2024-02-22T08:59:54.892016Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.job_run_results,model.elementary.job_run_results,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,job_run_results,CREATE VIEW,success,model,0.7838866710662842,2024-02-22T08:59:55.307538Z,2024-02-22T08:59:55.890391Z,2024-02-22T08:59:55.202523Z,2024-02-22T08:59:55.250517Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.monitors_runs,model.elementary.monitors_runs,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,monitors_runs,CREATE VIEW,success,model,0.7917060852050781,2024-02-22T08:59:55.268517Z,2024-02-22T08:59:55.894390Z,2024-02-22T08:59:55.177520Z,2024-02-22T08:59:55.228524Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,snapshot_run_results,CREATE VIEW,success,model,0.7648701667785645,2024-02-22T08:59:55.435518Z,2024-02-22T08:59:55.920391Z,2024-02-22T08:59:55.237518Z,2024-02-22T08:59:55.265519Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.model_run_results,model.elementary.model_run_results,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,model_run_results,CREATE VIEW,success,model,0.482527494430542,2024-02-22T08:59:55.589390Z,2024-02-22T08:59:55.952389Z,2024-02-22T08:59:55.509405Z,2024-02-22T08:59:55.557389Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,grouped_transactions_unioned_with_original,SELECT 2057467,success,model,3.706596851348877,2024-02-22T09:02:33.086706Z,2024-02-22T09:02:36.775289Z,2024-02-22T09:02:33.076680Z,2024-02-22T09:02:33.084675Z,2057467,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-1 (worker),table,"{""_message"": ""SELECT 2057467"", ""code"": ""SELECT"", ""rows_affected"": 2057467}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,alerts_anomaly_detection,CREATE VIEW,success,model,0.494997501373291,2024-02-22T08:59:55.609389Z,2024-02-22T08:59:55.970387Z,2024-02-22T08:59:55.532388Z,2024-02-22T08:59:55.561390Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,anomaly_threshold_sensitivity,CREATE VIEW,success,model,0.8189499378204346,2024-02-22T08:59:57.171308Z,2024-02-22T08:59:57.757337Z,2024-02-22T08:59:57.071310Z,2024-02-22T08:59:57.099308Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,alerts_dbt_source_freshness,CREATE VIEW,success,model,0.8769509792327881,2024-02-22T08:59:57.131310Z,2024-02-22T08:59:57.795334Z,2024-02-22T08:59:57.017394Z,2024-02-22T08:59:57.082312Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,dbt_artifacts_hashes,CREATE VIEW,success,model,0.8839480876922607,2024-02-22T08:59:57.142312Z,2024-02-22T08:59:57.809336Z,2024-02-22T08:59:57.027394Z,2024-02-22T08:59:57.084314Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,alerts_schema_changes,CREATE VIEW,success,model,0.9219527244567871,2024-02-22T08:59:57.101311Z,2024-02-22T08:59:57.818340Z,2024-02-22T08:59:56.984397Z,2024-02-22T08:59:57.050720Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,alerts_dbt_tests,CREATE VIEW,success,model,0.9539449214935303,2024-02-22T08:59:57.087310Z,2024-02-22T08:59:57.828335Z,2024-02-22T08:59:56.962389Z,2024-02-22T08:59:57.001388Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.information_schema_columns,model.elementary.information_schema_columns,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,information_schema_columns,CREATE VIEW,success,model,1.135474443435669,2024-02-22T08:59:57.336694Z,2024-02-22T08:59:58.098868Z,2024-02-22T08:59:57.035393Z,2024-02-22T08:59:57.307693Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.test_result_rows,model.elementary.test_result_rows,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,test_result_rows,INSERT 0 0,success,model,1.194472312927246,2024-02-22T08:59:57.118307Z,2024-02-22T08:59:58.136863Z,2024-02-22T08:59:57.002412Z,2024-02-22T08:59:57.080315Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,alerts_dbt_models,CREATE VIEW,success,model,0.4026520252227783,2024-02-22T08:59:58.114861Z,2024-02-22T08:59:58.309001Z,2024-02-22T08:59:57.937346Z,2024-02-22T08:59:58.102865Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.elementary.enriched_columns,model.elementary.enriched_columns,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,enriched_columns,CREATE VIEW,success,model,0.1926572322845459,2024-02-22T08:59:58.194863Z,2024-02-22T08:59:58.353516Z,2024-02-22T08:59:58.170864Z,2024-02-22T08:59:58.189865Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,int_transactions_and_accounts_and_groups_joined,SELECT 1994385,success,model,155.98929977416992,2024-02-22T08:59:57.154307Z,2024-02-22T09:02:32.964675Z,2024-02-22T08:59:57.063306Z,2024-02-22T08:59:57.096315Z,1994385,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
    ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-6 (worker),table,"{""_message"": ""SELECT 1994385"", ""code"": ""SELECT"", ""rows_affected"": 1994385}"
26d6659f-118c-4b04-97f2-b06387a6bc47.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,26d6659f-118c-4b04-97f2-b06387a6bc47,2024-02-22 09:02:38,2024-02-22 09:02:38.170009,int_grouped_on_group_id,CREATE VIEW,success,model,0.08800578117370605,2024-02-22T09:02:32.987677Z,2024-02-22T09:02:33.061680Z,2024-02-22T09:02:32.978678Z,2024-02-22T09:02:32.985678Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        SUM(amount) AS total_amount,
        'fixed_value' AS account_description

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e5e955d-c5b1-4e0e-a737-5fa1ae53671f.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,3e5e955d-c5b1-4e0e-a737-5fa1ae53671f,2024-02-22 09:09:34,2024-02-22 09:09:34.592307,stg_dbt_run_results,CREATE VIEW,success,model,0.449298620223999,2024-02-22T09:09:30.955285Z,2024-02-22T09:09:31.233017Z,2024-02-22T09:09:30.835720Z,2024-02-22T09:09:30.869721Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e5e955d-c5b1-4e0e-a737-5fa1ae53671f.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,3e5e955d-c5b1-4e0e-a737-5fa1ae53671f,2024-02-22 09:09:34,2024-02-22 09:09:34.592307,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.46729278564453125,2024-02-22T09:09:30.856721Z,2024-02-22T09:09:31.241032Z,2024-02-22T09:09:30.806723Z,2024-02-22T09:09:30.846721Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e5e955d-c5b1-4e0e-a737-5fa1ae53671f.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,3e5e955d-c5b1-4e0e-a737-5fa1ae53671f,2024-02-22 09:09:34,2024-02-22 09:09:34.592307,stg_dbt_models,CREATE VIEW,success,model,0.4633045196533203,2024-02-22T09:09:30.944287Z,2024-02-22T09:09:31.243045Z,2024-02-22T09:09:30.825724Z,2024-02-22T09:09:30.854721Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e5e955d-c5b1-4e0e-a737-5fa1ae53671f.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,3e5e955d-c5b1-4e0e-a737-5fa1ae53671f,2024-02-22 09:09:34,2024-02-22 09:09:34.592307,int_keep_models_relevant_package,CREATE VIEW,success,model,0.10699939727783203,2024-02-22T09:09:31.289019Z,2024-02-22T09:09:31.379016Z,2024-02-22T09:09:31.278023Z,2024-02-22T09:09:31.287019Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e5e955d-c5b1-4e0e-a737-5fa1ae53671f.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,3e5e955d-c5b1-4e0e-a737-5fa1ae53671f,2024-02-22 09:09:34,2024-02-22 09:09:34.592307,int_join_with_run_results,CREATE VIEW,success,model,0.2700004577636719,2024-02-22T09:09:31.491593Z,2024-02-22T09:09:31.648594Z,2024-02-22T09:09:31.419596Z,2024-02-22T09:09:31.430595Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e5e955d-c5b1-4e0e-a737-5fa1ae53671f.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,3e5e955d-c5b1-4e0e-a737-5fa1ae53671f,2024-02-22 09:09:34,2024-02-22 09:09:34.592307,fct_destination_nodes,SELECT 1,success,model,0.37700557708740234,2024-02-22T09:09:31.433594Z,2024-02-22T09:09:31.758593Z,2024-02-22T09:09:31.404598Z,2024-02-22T09:09:31.427593Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM destination_models",,,Thread-8 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
3e5e955d-c5b1-4e0e-a737-5fa1ae53671f.model.view_selection_tool.fct_model_dependencies,model.view_selection_tool.fct_model_dependencies,3e5e955d-c5b1-4e0e-a737-5fa1ae53671f,2024-02-22 09:09:34,2024-02-22 09:09:34.592307,fct_model_dependencies,SELECT 11,success,model,0.38699984550476074,2024-02-22T09:09:31.482595Z,2024-02-22T09:09:31.763597Z,2024-02-22T09:09:31.410594Z,2024-02-22T09:09:31.429593Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes,
        '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS compiled_code_reference

    FROM including_irrelevant_cols

)

    SELECT * FROM model_dependencies",,,Thread-5 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
3e5e955d-c5b1-4e0e-a737-5fa1ae53671f.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,3e5e955d-c5b1-4e0e-a737-5fa1ae53671f,2024-02-22 09:09:34,2024-02-22 09:09:34.592307,int_only_materialized_models,CREATE VIEW,success,model,0.2420036792755127,2024-02-22T09:09:31.784595Z,2024-02-22T09:09:31.945603Z,2024-02-22T09:09:31.732594Z,2024-02-22T09:09:31.764601Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e5e955d-c5b1-4e0e-a737-5fa1ae53671f.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,3e5e955d-c5b1-4e0e-a737-5fa1ae53671f,2024-02-22 09:09:34,2024-02-22 09:09:34.592307,fct_all_models_plus_code,SELECT 11,success,model,0.28400278091430664,2024-02-22T09:09:31.772601Z,2024-02-22T09:09:31.989597Z,2024-02-22T09:09:31.721595Z,2024-02-22T09:09:31.758593Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-1 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
3e5e955d-c5b1-4e0e-a737-5fa1ae53671f.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,3e5e955d-c5b1-4e0e-a737-5fa1ae53671f,2024-02-22 09:09:34,2024-02-22 09:09:34.592307,int_include_monitoring_id,CREATE VIEW,success,model,0.10100007057189941,2024-02-22T09:09:31.997595Z,2024-02-22T09:09:32.070598Z,2024-02-22T09:09:31.977595Z,2024-02-22T09:09:31.991595Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e5e955d-c5b1-4e0e-a737-5fa1ae53671f.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,3e5e955d-c5b1-4e0e-a737-5fa1ae53671f,2024-02-22 09:09:34,2024-02-22 09:09:34.592307,int_maintenance_fractions,CREATE VIEW,success,model,0.08900165557861328,2024-02-22T09:09:32.092594Z,2024-02-22T09:09:32.165597Z,2024-02-22T09:09:32.084596Z,2024-02-22T09:09:32.090595Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e5e955d-c5b1-4e0e-a737-5fa1ae53671f.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,3e5e955d-c5b1-4e0e-a737-5fa1ae53671f,2024-02-22 09:09:34,2024-02-22 09:09:34.592307,fct_avg_maintenance_fractions,SELECT 4,success,model,0.13499927520751953,2024-02-22T09:09:32.198600Z,2024-02-22T09:09:32.312593Z,2024-02-22T09:09:32.183594Z,2024-02-22T09:09:32.195604Z,4,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-8 (worker),table,"{""_message"": ""SELECT 4"", ""code"": ""SELECT"", ""rows_affected"": 4}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,stg_accounts,CREATE VIEW,success,model,0.7509970664978027,2024-02-22T09:17:06.326164Z,2024-02-22T09:17:06.931169Z,2024-02-22T09:17:06.230165Z,2024-02-22T09:17:06.310165Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 1000000

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,stg_groups,CREATE VIEW,success,model,0.7639999389648438,2024-02-22T09:17:06.376164Z,2024-02-22T09:17:06.944166Z,2024-02-22T09:17:06.236167Z,2024-02-22T09:17:06.312166Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 100000

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,stg_transactions_1,CREATE VIEW,success,model,0.765995979309082,2024-02-22T09:17:06.383163Z,2024-02-22T09:17:06.947167Z,2024-02-22T09:17:06.241164Z,2024-02-22T09:17:06.313164Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 50000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,stg_transactions_3,CREATE VIEW,success,model,0.7649967670440674,2024-02-22T09:17:06.397182Z,2024-02-22T09:17:06.953167Z,2024-02-22T09:17:06.254166Z,2024-02-22T09:17:06.315165Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 50000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,stg_transactions_2,CREATE VIEW,success,model,0.7740049362182617,2024-02-22T09:17:06.390164Z,2024-02-22T09:17:06.958166Z,2024-02-22T09:17:06.248165Z,2024-02-22T09:17:06.314164Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 50000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,data_monitoring_metrics,INSERT 0 0,success,model,2.031982183456421,2024-02-22T09:17:06.411162Z,2024-02-22T09:17:08.093143Z,2024-02-22T09:17:06.266164Z,2024-02-22T09:17:06.318164Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.dbt_columns,model.elementary.dbt_columns,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,dbt_columns,INSERT 0 0,success,model,7.536734342575073,2024-02-22T09:17:06.473163Z,2024-02-22T09:17:13.724901Z,2024-02-22T09:17:06.289183Z,2024-02-22T09:17:06.319165Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.dbt_run_results,model.elementary.dbt_run_results,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,dbt_run_results,INSERT 0 0,success,model,5.872008562088013,2024-02-22T09:17:08.337182Z,2024-02-22T09:17:13.838900Z,2024-02-22T09:17:08.190149Z,2024-02-22T09:17:08.249139Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.dbt_invocations,model.elementary.dbt_invocations,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,dbt_invocations,INSERT 0 0,success,model,6.14198112487793,2024-02-22T09:17:08.299163Z,2024-02-22T09:17:13.852897Z,2024-02-22T09:17:08.095143Z,2024-02-22T09:17:08.242140Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.dbt_metrics,model.elementary.dbt_metrics,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,dbt_metrics,INSERT 0 0,success,model,7.978505849838257,2024-02-22T09:17:08.311187Z,2024-02-22T09:17:15.925396Z,2024-02-22T09:17:08.136141Z,2024-02-22T09:17:08.244143Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.dbt_exposures,model.elementary.dbt_exposures,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,dbt_exposures,INSERT 0 0,success,model,8.708208799362183,2024-02-22T09:17:08.253138Z,2024-02-22T09:17:15.933398Z,2024-02-22T09:17:08.018894Z,2024-02-22T09:17:08.134144Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.dbt_seeds,model.elementary.dbt_seeds,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,dbt_seeds,INSERT 0 0,success,model,7.989502668380737,2024-02-22T09:17:08.353152Z,2024-02-22T09:17:15.963430Z,2024-02-22T09:17:08.218168Z,2024-02-22T09:17:08.252595Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,dbt_snapshots,INSERT 0 0,success,model,7.972246170043945,2024-02-22T09:17:11.210734Z,2024-02-22T09:17:16.289396Z,2024-02-22T09:17:09.279186Z,2024-02-22T09:17:10.038360Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.dbt_models,model.elementary.dbt_models,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,dbt_models,INSERT 0 0,success,model,8.36750602722168,2024-02-22T09:17:08.323154Z,2024-02-22T09:17:16.346397Z,2024-02-22T09:17:08.161168Z,2024-02-22T09:17:08.247141Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,dbt_source_freshness_results,INSERT 0 0,success,model,2.823505163192749,2024-02-22T09:17:15.763399Z,2024-02-22T09:17:16.654396Z,2024-02-22T09:17:14.294711Z,2024-02-22T09:17:15.056863Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.metadata,model.elementary.metadata,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,metadata,SELECT 1,success,model,1.2700226306915283,2024-02-22T09:17:16.294399Z,2024-02-22T09:17:16.918398Z,2024-02-22T09:17:16.132416Z,2024-02-22T09:17:16.263398Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-1 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,int_accounts_and_groups_joined,CREATE VIEW,success,model,1.0538151264190674,2024-02-22T09:17:16.530397Z,2024-02-22T09:17:17.486485Z,2024-02-22T09:17:16.471397Z,2024-02-22T09:17:16.503396Z,-1,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
    ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,schema_columns_snapshot,INSERT 0 0,success,model,1.569340705871582,2024-02-22T09:17:16.332422Z,2024-02-22T09:17:17.595742Z,2024-02-22T09:17:16.149395Z,2024-02-22T09:17:16.271396Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.dbt_tests,model.elementary.dbt_tests,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,dbt_tests,INSERT 0 0,success,model,1.867342472076416,2024-02-22T09:17:15.965430Z,2024-02-22T09:17:17.609740Z,2024-02-22T09:17:15.868400Z,2024-02-22T09:17:15.914401Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.elementary_test_results,model.elementary.elementary_test_results,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,elementary_test_results,INSERT 0 0,success,model,1.6163430213928223,2024-02-22T09:17:16.273397Z,2024-02-22T09:17:17.617741Z,2024-02-22T09:17:16.089397Z,2024-02-22T09:17:16.147398Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.dbt_sources,model.elementary.dbt_sources,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,dbt_sources,INSERT 0 0,success,model,2.094345808029175,2024-02-22T09:17:15.945398Z,2024-02-22T09:17:17.821741Z,2024-02-22T09:17:15.827397Z,2024-02-22T09:17:15.908433Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,metrics_anomaly_score,CREATE VIEW,success,model,1.361346960067749,2024-02-22T09:17:17.438961Z,2024-02-22T09:17:18.180742Z,2024-02-22T09:17:16.867405Z,2024-02-22T09:17:16.924396Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.monitors_runs,model.elementary.monitors_runs,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,monitors_runs,CREATE VIEW,success,model,0.8203113079071045,2024-02-22T09:17:17.638742Z,2024-02-22T09:17:18.307523Z,2024-02-22T09:17:17.551210Z,2024-02-22T09:17:17.585744Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.job_run_results,model.elementary.job_run_results,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,job_run_results,CREATE VIEW,success,model,0.7944691181182861,2024-02-22T09:17:17.736741Z,2024-02-22T09:17:18.415209Z,2024-02-22T09:17:17.675741Z,2024-02-22T09:17:17.716743Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,snapshot_run_results,CREATE VIEW,success,model,0.7304689884185791,2024-02-22T09:17:17.903745Z,2024-02-22T09:17:18.490208Z,2024-02-22T09:17:17.794742Z,2024-02-22T09:17:17.850746Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,alerts_anomaly_detection,CREATE VIEW,success,model,0.7289795875549316,2024-02-22T09:17:18.085743Z,2024-02-22T09:17:18.501209Z,2024-02-22T09:17:17.842740Z,2024-02-22T09:17:17.887740Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.model_run_results,model.elementary.model_run_results,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,model_run_results,CREATE VIEW,success,model,0.7379822731018066,2024-02-22T09:17:17.938743Z,2024-02-22T09:17:18.509211Z,2024-02-22T09:17:17.823742Z,2024-02-22T09:17:17.880742Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,anomaly_threshold_sensitivity,CREATE VIEW,success,model,2.5426251888275146,2024-02-22T09:17:19.967320Z,2024-02-22T09:17:22.224851Z,2024-02-22T09:17:19.822225Z,2024-02-22T09:17:19.886224Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,alerts_dbt_source_freshness,CREATE VIEW,success,model,2.7106263637542725,2024-02-22T09:17:19.912229Z,2024-02-22T09:17:22.321856Z,2024-02-22T09:17:19.737231Z,2024-02-22T09:17:19.847223Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.information_schema_columns,model.elementary.information_schema_columns,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,information_schema_columns,CREATE VIEW,success,model,2.6906261444091797,2024-02-22T09:17:20.093039Z,2024-02-22T09:17:22.333848Z,2024-02-22T09:17:19.781227Z,2024-02-22T09:17:20.077247Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,stg_accounts,CREATE VIEW,success,model,0.8132359981536865,2024-02-22T09:41:08.509917Z,2024-02-22T09:41:09.133151Z,2024-02-22T09:41:08.399921Z,2024-02-22T09:41:08.492917Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 100000

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,dbt_artifacts_hashes,CREATE VIEW,success,model,2.7276084423065186,2024-02-22T09:17:19.935842Z,2024-02-22T09:17:22.337850Z,2024-02-22T09:17:19.762228Z,2024-02-22T09:17:19.849225Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,alerts_schema_changes,CREATE VIEW,success,model,2.7516276836395264,2024-02-22T09:17:19.868224Z,2024-02-22T09:17:22.340849Z,2024-02-22T09:17:19.680232Z,2024-02-22T09:17:19.748223Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,alerts_dbt_tests,CREATE VIEW,success,model,2.765627145767212,2024-02-22T09:17:19.851222Z,2024-02-22T09:17:22.349851Z,2024-02-22T09:17:19.648231Z,2024-02-22T09:17:19.732226Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.test_result_rows,model.elementary.test_result_rows,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,test_result_rows,INSERT 0 0,success,model,2.7826218605041504,2024-02-22T09:17:19.892225Z,2024-02-22T09:17:22.401870Z,2024-02-22T09:17:19.701224Z,2024-02-22T09:17:19.821222Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,alerts_dbt_models,CREATE VIEW,success,model,0.36460423469543457,2024-02-22T09:17:22.302849Z,2024-02-22T09:17:22.625446Z,2024-02-22T09:17:22.274851Z,2024-02-22T09:17:22.300853Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.elementary.enriched_columns,model.elementary.enriched_columns,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,enriched_columns,CREATE VIEW,success,model,0.21059727668762207,2024-02-22T09:17:22.466850Z,2024-02-22T09:17:22.628447Z,2024-02-22T09:17:22.432860Z,2024-02-22T09:17:22.453849Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,int_union_of_transactions,SELECT 200000000,success,model,246.63255167007446,2024-02-22T09:17:16.582396Z,2024-02-22T09:21:23.097946Z,2024-02-22T09:17:16.511397Z,2024-02-22T09:17:16.540397Z,200000000,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-5 (worker),table,"{""_message"": ""SELECT 200000000"", ""code"": ""SELECT"", ""rows_affected"": 200000000}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,int_transactions_and_accounts_and_groups_joined,CREATE VIEW,success,model,0.2620060443878174,2024-02-22T09:21:23.250952Z,2024-02-22T09:21:23.371945Z,2024-02-22T09:21:23.115947Z,2024-02-22T09:21:23.247953Z,-1,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
    ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,int_grouped_on_group_id,CREATE VIEW,success,model,0.10299158096313477,2024-02-22T09:21:23.397953Z,2024-02-22T09:21:23.483955Z,2024-02-22T09:21:23.385950Z,2024-02-22T09:21:23.395946Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        SUM(amount) AS total_amount,
        'fixed_value' AS account_description

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
74b84f06-a90c-411d-a6d5-48df283adef4.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,74b84f06-a90c-411d-a6d5-48df283adef4,2024-02-22 09:24:40,2024-02-22 09:24:40.700208,grouped_transactions_unioned_with_original,SELECT 2055105,success,model,195.81074333190918,2024-02-22T09:21:23.506990Z,2024-02-22T09:24:39.303685Z,2024-02-22T09:21:23.497954Z,2024-02-22T09:21:23.504946Z,2055105,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-1 (worker),table,"{""_message"": ""SELECT 2055105"", ""code"": ""SELECT"", ""rows_affected"": 2055105}"
5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4,2024-02-22 09:25:14,2024-02-22 09:25:14.354000,stg_dbt_models,CREATE VIEW,success,model,0.4198763370513916,2024-02-22T09:25:10.753944Z,2024-02-22T09:25:11.036953Z,2024-02-22T09:25:10.642946Z,2024-02-22T09:25:10.662296Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4,2024-02-22 09:25:14,2024-02-22 09:25:14.354000,stg_dbt_run_results,CREATE VIEW,success,model,0.43587398529052734,2024-02-22T09:25:10.762945Z,2024-02-22T09:25:11.044948Z,2024-02-22T09:25:10.649746Z,2024-02-22T09:25:10.664295Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4,2024-02-22 09:25:14,2024-02-22 09:25:14.354000,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.4538846015930176,2024-02-22T09:25:10.665298Z,2024-02-22T09:25:11.050949Z,2024-02-22T09:25:10.629077Z,2024-02-22T09:25:10.657295Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4,2024-02-22 09:25:14,2024-02-22 09:25:14.354000,stg_dbt_invocations,CREATE VIEW,success,model,0.45487523078918457,2024-02-22T09:25:10.735944Z,2024-02-22T09:25:11.053950Z,2024-02-22T09:25:10.636077Z,2024-02-22T09:25:10.659294Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4,2024-02-22 09:25:14,2024-02-22 09:25:14.354000,int_keep_models_relevant_package,CREATE VIEW,success,model,0.11600375175476074,2024-02-22T09:25:11.096952Z,2024-02-22T09:25:11.189951Z,2024-02-22T09:25:11.085952Z,2024-02-22T09:25:11.094949Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4,2024-02-22 09:25:14,2024-02-22 09:25:14.354000,int_join_with_run_results,CREATE VIEW,success,model,0.3681931495666504,2024-02-22T09:25:11.296670Z,2024-02-22T09:25:11.574143Z,2024-02-22T09:25:11.231944Z,2024-02-22T09:25:11.256944Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4,2024-02-22 09:25:14,2024-02-22 09:25:14.354000,fct_destination_nodes,SELECT 1,success,model,0.45919322967529297,2024-02-22T09:25:11.242949Z,2024-02-22T09:25:11.650143Z,2024-02-22T09:25:11.214946Z,2024-02-22T09:25:11.238943Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM destination_models",,,Thread-8 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4.model.view_selection_tool.fct_model_dependencies,model.view_selection_tool.fct_model_dependencies,5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4,2024-02-22 09:25:14,2024-02-22 09:25:14.354000,fct_model_dependencies,SELECT 11,success,model,0.46118783950805664,2024-02-22T09:25:11.288669Z,2024-02-22T09:25:11.655141Z,2024-02-22T09:25:11.222946Z,2024-02-22T09:25:11.241946Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes,
        '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS compiled_code_reference

    FROM including_irrelevant_cols

)

    SELECT * FROM model_dependencies",,,Thread-5 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4,2024-02-22 09:25:14,2024-02-22 09:25:14.354000,int_only_materialized_models,CREATE VIEW,success,model,0.13956403732299805,2024-02-22T09:25:11.711706Z,2024-02-22T09:25:11.793706Z,2024-02-22T09:25:11.681139Z,2024-02-22T09:25:11.696706Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4,2024-02-22 09:25:14,2024-02-22 09:25:14.354000,fct_all_models_plus_code,SELECT 11,success,model,0.27358055114746094,2024-02-22T09:25:11.703703Z,2024-02-22T09:25:11.923466Z,2024-02-22T09:25:11.671143Z,2024-02-22T09:25:11.694705Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-4 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4,2024-02-22 09:25:14,2024-02-22 09:25:14.354000,int_include_monitoring_id,CREATE VIEW,success,model,0.1460113525390625,2024-02-22T09:25:11.825704Z,2024-02-22T09:25:11.948722Z,2024-02-22T09:25:11.809709Z,2024-02-22T09:25:11.822707Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,stg_transactions_2,CREATE VIEW,success,model,0.8152508735656738,2024-02-22T09:41:08.571917Z,2024-02-22T09:41:09.166161Z,2024-02-22T09:41:08.420921Z,2024-02-22T09:41:08.497918Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 25000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4,2024-02-22 09:25:14,2024-02-22 09:25:14.354000,int_maintenance_fractions,CREATE VIEW,success,model,0.10310077667236328,2024-02-22T09:25:11.975717Z,2024-02-22T09:25:12.060818Z,2024-02-22T09:25:11.964717Z,2024-02-22T09:25:11.972719Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,5b5b4bee-5f3e-44a2-8e57-ee21cb5251d4,2024-02-22 09:25:14,2024-02-22 09:25:14.354000,fct_avg_maintenance_fractions,SELECT 4,success,model,0.15459132194519043,2024-02-22T09:25:12.093817Z,2024-02-22T09:25:12.225402Z,2024-02-22T09:25:12.077819Z,2024-02-22T09:25:12.090816Z,4,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-8 (worker),table,"{""_message"": ""SELECT 4"", ""code"": ""SELECT"", ""rows_affected"": 4}"
5353c3fd-9dd3-476a-8335-66a968194785.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,stg_accounts,CREATE VIEW,success,model,0.8568251132965088,2024-02-22T09:32:36.816194Z,2024-02-22T09:32:37.528602Z,2024-02-22T09:32:36.717809Z,2024-02-22T09:32:36.796194Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 100000

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,stg_groups,CREATE VIEW,success,model,0.876835823059082,2024-02-22T09:32:36.872193Z,2024-02-22T09:32:37.540603Z,2024-02-22T09:32:36.725231Z,2024-02-22T09:32:36.798198Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 10000

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,stg_transactions_2,CREATE VIEW,success,model,0.8898348808288574,2024-02-22T09:32:36.887193Z,2024-02-22T09:32:37.558603Z,2024-02-22T09:32:36.737193Z,2024-02-22T09:32:36.801196Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 25000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,stg_transactions_4,CREATE VIEW,success,model,0.8948471546173096,2024-02-22T09:32:36.902225Z,2024-02-22T09:32:37.566603Z,2024-02-22T09:32:36.748230Z,2024-02-22T09:32:36.805199Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 25000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,stg_transactions_1,CREATE VIEW,success,model,0.902836799621582,2024-02-22T09:32:36.879204Z,2024-02-22T09:32:37.569607Z,2024-02-22T09:32:36.730193Z,2024-02-22T09:32:36.799197Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 25000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,stg_transactions_3,CREATE VIEW,success,model,0.9028043746948242,2024-02-22T09:32:36.895193Z,2024-02-22T09:32:37.571601Z,2024-02-22T09:32:36.742192Z,2024-02-22T09:32:36.803196Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 25000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,schema_columns_snapshot,INSERT 0 0,success,model,2.1305880546569824,2024-02-22T09:32:47.766957Z,2024-02-22T09:32:49.590545Z,2024-02-22T09:32:47.579956Z,2024-02-22T09:32:47.610958Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,data_monitoring_metrics,INSERT 0 0,success,model,2.315371513366699,2024-02-22T09:32:36.911196Z,2024-02-22T09:32:38.853166Z,2024-02-22T09:32:36.755228Z,2024-02-22T09:32:36.806194Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.dbt_columns,model.elementary.dbt_columns,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,dbt_columns,INSERT 0 0,success,model,8.223830938339233,2024-02-22T09:32:36.973192Z,2024-02-22T09:32:44.901078Z,2024-02-22T09:32:36.776197Z,2024-02-22T09:32:36.809196Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.dbt_run_results,model.elementary.dbt_run_results,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,dbt_run_results,INSERT 0 0,success,model,6.441970586776733,2024-02-22T09:32:39.109136Z,2024-02-22T09:32:45.008598Z,2024-02-22T09:32:38.929132Z,2024-02-22T09:32:39.020135Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.dbt_invocations,model.elementary.dbt_invocations,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,dbt_invocations,INSERT 0 0,success,model,7.220492601394653,2024-02-22T09:32:39.057141Z,2024-02-22T09:32:45.022597Z,2024-02-22T09:32:38.781165Z,2024-02-22T09:32:38.925133Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.dbt_metrics,model.elementary.dbt_metrics,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,dbt_metrics,INSERT 0 0,success,model,8.631824731826782,2024-02-22T09:32:39.082173Z,2024-02-22T09:32:47.294956Z,2024-02-22T09:32:38.859132Z,2024-02-22T09:32:39.016138Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.dbt_exposures,model.elementary.dbt_exposures,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,dbt_exposures,INSERT 0 0,success,model,9.714352130889893,2024-02-22T09:32:38.994131Z,2024-02-22T09:32:47.315958Z,2024-02-22T09:32:38.657132Z,2024-02-22T09:32:38.816137Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
0d8f3ebf-421d-4acc-baaa-dcb0ead66354.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,0d8f3ebf-421d-4acc-baaa-dcb0ead66354,2024-02-22 09:35:02,2024-02-22 09:35:02.843345,int_keep_models_relevant_package,CREATE VIEW,success,model,0.09900450706481934,2024-02-22T09:34:59.715484Z,2024-02-22T09:34:59.798490Z,2024-02-22T09:34:59.705486Z,2024-02-22T09:34:59.712483Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.dbt_seeds,model.elementary.dbt_seeds,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,dbt_seeds,INSERT 0 0,success,model,8.665829181671143,2024-02-22T09:32:39.125132Z,2024-02-22T09:32:47.326956Z,2024-02-22T09:32:38.968131Z,2024-02-22T09:32:39.054138Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,dbt_snapshots,INSERT 0 0,success,model,8.041457891464233,2024-02-22T09:32:42.757367Z,2024-02-22T09:32:47.561954Z,2024-02-22T09:32:40.851621Z,2024-02-22T09:32:41.596058Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.dbt_models,model.elementary.dbt_models,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,dbt_models,INSERT 0 0,success,model,9.07882046699524,2024-02-22T09:32:39.095132Z,2024-02-22T09:32:47.796958Z,2024-02-22T09:32:38.893133Z,2024-02-22T09:32:39.018133Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,dbt_source_freshness_results,INSERT 0 0,success,model,3.2174344062805176,2024-02-22T09:32:47.041958Z,2024-02-22T09:32:48.226529Z,2024-02-22T09:32:46.006494Z,2024-02-22T09:32:46.602531Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.metadata,model.elementary.metadata,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,metadata,SELECT 1,success,model,1.514577865600586,2024-02-22T09:32:47.733987Z,2024-02-22T09:32:48.425560Z,2024-02-22T09:32:47.569954Z,2024-02-22T09:32:47.604959Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-1 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,int_accounts_and_groups_joined,CREATE VIEW,success,model,1.2580041885375977,2024-02-22T09:32:47.951528Z,2024-02-22T09:32:49.048561Z,2024-02-22T09:32:47.883527Z,2024-02-22T09:32:47.908529Z,-1,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
    ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.elementary_test_results,model.elementary.elementary_test_results,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,elementary_test_results,INSERT 0 0,success,model,1.677579641342163,2024-02-22T09:32:47.619958Z,2024-02-22T09:32:49.136534Z,2024-02-22T09:32:47.503958Z,2024-02-22T09:32:47.577953Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.dbt_tests,model.elementary.dbt_tests,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,dbt_tests,INSERT 0 0,success,model,2.1375696659088135,2024-02-22T09:32:47.416959Z,2024-02-22T09:32:49.181527Z,2024-02-22T09:32:47.185956Z,2024-02-22T09:32:47.368958Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,metrics_anomaly_score,CREATE VIEW,success,model,1.2530202865600586,2024-02-22T09:32:49.050561Z,2024-02-22T09:32:49.623546Z,2024-02-22T09:32:48.914538Z,2024-02-22T09:32:49.024534Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.monitors_runs,model.elementary.monitors_runs,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,monitors_runs,CREATE VIEW,success,model,0.6530129909515381,2024-02-22T09:32:49.154529Z,2024-02-22T09:32:49.725543Z,2024-02-22T09:32:49.115534Z,2024-02-22T09:32:49.140530Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.dbt_sources,model.elementary.dbt_sources,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,dbt_sources,INSERT 0 0,success,model,2.714594602584839,2024-02-22T09:32:47.329958Z,2024-02-22T09:32:49.747543Z,2024-02-22T09:32:47.123959Z,2024-02-22T09:32:47.281956Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.job_run_results,model.elementary.job_run_results,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,job_run_results,CREATE VIEW,success,model,0.6690165996551514,2024-02-22T09:32:49.224529Z,2024-02-22T09:32:49.788545Z,2024-02-22T09:32:49.183527Z,2024-02-22T09:32:49.211528Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,snapshot_run_results,CREATE VIEW,success,model,0.6200234889984131,2024-02-22T09:32:49.299529Z,2024-02-22T09:32:49.854549Z,2024-02-22T09:32:49.261530Z,2024-02-22T09:32:49.277528Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.model_run_results,model.elementary.model_run_results,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,model_run_results,CREATE VIEW,success,model,0.5940144062042236,2024-02-22T09:32:49.362528Z,2024-02-22T09:32:49.871546Z,2024-02-22T09:32:49.317526Z,2024-02-22T09:32:49.348526Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,alerts_anomaly_detection,CREATE VIEW,success,model,0.2238919734954834,2024-02-22T09:32:49.818886Z,2024-02-22T09:32:49.954542Z,2024-02-22T09:32:49.760544Z,2024-02-22T09:32:49.794544Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,int_union_of_transactions,CREATE VIEW,success,model,2.9821252822875977,2024-02-22T09:32:48.036533Z,2024-02-22T09:32:50.911934Z,2024-02-22T09:32:47.973532Z,2024-02-22T09:32:47.986535Z,-1,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,alerts_dbt_tests,CREATE VIEW,success,model,0.8413124084472656,2024-02-22T09:32:51.379753Z,2024-02-22T09:32:51.954060Z,2024-02-22T09:32:51.163758Z,2024-02-22T09:32:51.229754Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,anomaly_threshold_sensitivity,CREATE VIEW,success,model,0.8363072872161865,2024-02-22T09:32:51.440757Z,2024-02-22T09:32:51.968060Z,2024-02-22T09:32:51.264766Z,2024-02-22T09:32:51.393757Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,alerts_dbt_models,CREATE VIEW,success,model,0.7833061218261719,2024-02-22T09:32:51.481755Z,2024-02-22T09:32:51.973060Z,2024-02-22T09:32:51.358752Z,2024-02-22T09:32:51.415753Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,stg_transactions_4,CREATE VIEW,success,model,0.8162374496459961,2024-02-22T09:41:08.590917Z,2024-02-22T09:41:09.171153Z,2024-02-22T09:41:08.439916Z,2024-02-22T09:41:08.500918Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 25000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,alerts_schema_changes,CREATE VIEW,success,model,0.8753054141998291,2024-02-22T09:32:51.398754Z,2024-02-22T09:32:51.979061Z,2024-02-22T09:32:51.194769Z,2024-02-22T09:32:51.259756Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,alerts_dbt_source_freshness,CREATE VIEW,success,model,0.834303617477417,2024-02-22T09:32:51.456753Z,2024-02-22T09:32:51.988060Z,2024-02-22T09:32:51.288760Z,2024-02-22T09:32:51.395754Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,dbt_artifacts_hashes,CREATE VIEW,success,model,0.8442816734313965,2024-02-22T09:32:51.468756Z,2024-02-22T09:32:52.003067Z,2024-02-22T09:32:51.308756Z,2024-02-22T09:32:51.411752Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.test_result_rows,model.elementary.test_result_rows,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,test_result_rows,INSERT 0 0,success,model,0.9561755657196045,2024-02-22T09:32:51.420753Z,2024-02-22T09:32:52.091926Z,2024-02-22T09:32:51.232754Z,2024-02-22T09:32:51.326753Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.information_schema_columns,model.elementary.information_schema_columns,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,information_schema_columns,CREATE VIEW,success,model,0.8921735286712646,2024-02-22T09:32:51.659274Z,2024-02-22T09:32:52.102923Z,2024-02-22T09:32:51.330753Z,2024-02-22T09:32:51.625274Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
0d8f3ebf-421d-4acc-baaa-dcb0ead66354.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,0d8f3ebf-421d-4acc-baaa-dcb0ead66354,2024-02-22 09:35:02,2024-02-22 09:35:02.843345,int_join_with_run_results,CREATE VIEW,success,model,0.31200122833251953,2024-02-22T09:34:59.897512Z,2024-02-22T09:35:00.116518Z,2024-02-22T09:34:59.836536Z,2024-02-22T09:34:59.845514Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.elementary.enriched_columns,model.elementary.enriched_columns,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,enriched_columns,CREATE VIEW,success,model,0.23323988914489746,2024-02-22T09:32:52.150924Z,2024-02-22T09:32:52.358164Z,2024-02-22T09:32:52.132926Z,2024-02-22T09:32:52.145925Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,int_transactions_and_accounts_and_groups_joined,SELECT 9824,success,model,53.21854281425476,2024-02-22T09:32:52.092926Z,2024-02-22T09:33:45.271628Z,2024-02-22T09:32:52.074044Z,2024-02-22T09:32:52.083913Z,9824,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
    ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-8 (worker),table,"{""_message"": ""SELECT 9824"", ""code"": ""SELECT"", ""rows_affected"": 9824}"
5353c3fd-9dd3-476a-8335-66a968194785.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,int_grouped_on_group_id,CREATE VIEW,success,model,0.0930013656616211,2024-02-22T09:33:45.295603Z,2024-02-22T09:33:45.373659Z,2024-02-22T09:33:45.285601Z,2024-02-22T09:33:45.293600Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        SUM(amount) AS total_amount,
        'fixed_value' AS account_description

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
5353c3fd-9dd3-476a-8335-66a968194785.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,5353c3fd-9dd3-476a-8335-66a968194785,2024-02-22 09:33:46,2024-02-22 09:33:46.842680,grouped_transactions_unioned_with_original,SELECT 10765,success,model,0.17900371551513672,2024-02-22T09:33:45.397603Z,2024-02-22T09:33:45.560599Z,2024-02-22T09:33:45.387600Z,2024-02-22T09:33:45.394619Z,10765,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-2 (worker),table,"{""_message"": ""SELECT 10765"", ""code"": ""SELECT"", ""rows_affected"": 10765}"
0d8f3ebf-421d-4acc-baaa-dcb0ead66354.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,0d8f3ebf-421d-4acc-baaa-dcb0ead66354,2024-02-22 09:35:02,2024-02-22 09:35:02.843345,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.3601982593536377,2024-02-22T09:34:59.349284Z,2024-02-22T09:34:59.655484Z,2024-02-22T09:34:59.318282Z,2024-02-22T09:34:59.341280Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
0d8f3ebf-421d-4acc-baaa-dcb0ead66354.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,0d8f3ebf-421d-4acc-baaa-dcb0ead66354,2024-02-22 09:35:02,2024-02-22 09:35:02.843345,stg_dbt_invocations,CREATE VIEW,success,model,0.3712024688720703,2024-02-22T09:34:59.398280Z,2024-02-22T09:34:59.662485Z,2024-02-22T09:34:59.324279Z,2024-02-22T09:34:59.343284Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
0d8f3ebf-421d-4acc-baaa-dcb0ead66354.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,0d8f3ebf-421d-4acc-baaa-dcb0ead66354,2024-02-22 09:35:02,2024-02-22 09:35:02.843345,stg_dbt_run_results,CREATE VIEW,success,model,0.3722069263458252,2024-02-22T09:34:59.417281Z,2024-02-22T09:34:59.669484Z,2024-02-22T09:34:59.335282Z,2024-02-22T09:34:59.346281Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
0d8f3ebf-421d-4acc-baaa-dcb0ead66354.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,0d8f3ebf-421d-4acc-baaa-dcb0ead66354,2024-02-22 09:35:02,2024-02-22 09:35:02.843345,stg_dbt_models,CREATE VIEW,success,model,0.37821054458618164,2024-02-22T09:34:59.408279Z,2024-02-22T09:34:59.673486Z,2024-02-22T09:34:59.329279Z,2024-02-22T09:34:59.344280Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
0d8f3ebf-421d-4acc-baaa-dcb0ead66354.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,0d8f3ebf-421d-4acc-baaa-dcb0ead66354,2024-02-22 09:35:02,2024-02-22 09:35:02.843345,fct_destination_nodes,SELECT 1,success,model,0.505000114440918,2024-02-22T09:34:59.847483Z,2024-02-22T09:35:00.307482Z,2024-02-22T09:34:59.823485Z,2024-02-22T09:34:59.842512Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM destination_models",,,Thread-8 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
0d8f3ebf-421d-4acc-baaa-dcb0ead66354.model.view_selection_tool.fct_model_dependencies,model.view_selection_tool.fct_model_dependencies,0d8f3ebf-421d-4acc-baaa-dcb0ead66354,2024-02-22 09:35:02,2024-02-22 09:35:02.843345,fct_model_dependencies,SELECT 11,success,model,0.5199687480926514,2024-02-22T09:34:59.890512Z,2024-02-22T09:35:00.327486Z,2024-02-22T09:34:59.828517Z,2024-02-22T09:34:59.844485Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes,
        '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS compiled_code_reference

    FROM including_irrelevant_cols

)

    SELECT * FROM model_dependencies",,,Thread-5 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
0d8f3ebf-421d-4acc-baaa-dcb0ead66354.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,0d8f3ebf-421d-4acc-baaa-dcb0ead66354,2024-02-22 09:35:02,2024-02-22 09:35:02.843345,int_only_materialized_models,CREATE VIEW,success,model,0.23900365829467773,2024-02-22T09:35:00.237485Z,2024-02-22T09:35:00.411485Z,2024-02-22T09:35:00.194483Z,2024-02-22T09:35:00.214484Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
0d8f3ebf-421d-4acc-baaa-dcb0ead66354.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,0d8f3ebf-421d-4acc-baaa-dcb0ead66354,2024-02-22 09:35:02,2024-02-22 09:35:02.843345,fct_all_models_plus_code,SELECT 11,success,model,0.2820007801055908,2024-02-22T09:35:00.228482Z,2024-02-22T09:35:00.451483Z,2024-02-22T09:35:00.187484Z,2024-02-22T09:35:00.209483Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-4 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
0d8f3ebf-421d-4acc-baaa-dcb0ead66354.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,0d8f3ebf-421d-4acc-baaa-dcb0ead66354,2024-02-22 09:35:02,2024-02-22 09:35:02.843345,int_include_monitoring_id,CREATE VIEW,success,model,0.11966085433959961,2024-02-22T09:35:00.461483Z,2024-02-22T09:35:00.550145Z,2024-02-22T09:35:00.438486Z,2024-02-22T09:35:00.454484Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
0d8f3ebf-421d-4acc-baaa-dcb0ead66354.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,0d8f3ebf-421d-4acc-baaa-dcb0ead66354,2024-02-22 09:35:02,2024-02-22 09:35:02.843345,int_maintenance_fractions,CREATE VIEW,success,model,0.11197710037231445,2024-02-22T09:35:00.572148Z,2024-02-22T09:35:00.668928Z,2024-02-22T09:35:00.563147Z,2024-02-22T09:35:00.570145Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
0d8f3ebf-421d-4acc-baaa-dcb0ead66354.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,0d8f3ebf-421d-4acc-baaa-dcb0ead66354,2024-02-22 09:35:02,2024-02-22 09:35:02.843345,fct_avg_maintenance_fractions,SELECT 4,success,model,0.13530254364013672,2024-02-22T09:35:00.697366Z,2024-02-22T09:35:00.814930Z,2024-02-22T09:35:00.685580Z,2024-02-22T09:35:00.694690Z,4,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-8 (worker),table,"{""_message"": ""SELECT 4"", ""code"": ""SELECT"", ""rows_affected"": 4}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,stg_transactions_3,CREATE VIEW,success,model,0.8232331275939941,2024-02-22T09:41:08.583916Z,2024-02-22T09:41:09.178154Z,2024-02-22T09:41:08.429920Z,2024-02-22T09:41:08.498918Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 25000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,stg_transactions_1,CREATE VIEW,success,model,0.8332340717315674,2024-02-22T09:41:08.564919Z,2024-02-22T09:41:09.183154Z,2024-02-22T09:41:08.411918Z,2024-02-22T09:41:08.496933Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 25000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,data_monitoring_metrics,INSERT 0 0,success,model,2.397329568862915,2024-02-22T09:41:08.599936Z,2024-02-22T09:41:10.714287Z,2024-02-22T09:41:08.445917Z,2024-02-22T09:41:08.502918Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.dbt_columns,model.elementary.dbt_columns,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,dbt_columns,INSERT 0 0,success,model,8.262685775756836,2024-02-22T09:41:08.662947Z,2024-02-22T09:41:16.616599Z,2024-02-22T09:41:08.470917Z,2024-02-22T09:41:08.504918Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.dbt_run_results,model.elementary.dbt_run_results,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,dbt_run_results,INSERT 0 0,success,model,6.270094156265259,2024-02-22T09:41:10.750253Z,2024-02-22T09:41:16.666599Z,2024-02-22T09:41:10.593262Z,2024-02-22T09:41:10.685290Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.dbt_invocations,model.elementary.dbt_invocations,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,dbt_invocations,INSERT 0 0,success,model,6.8266966342926025,2024-02-22T09:41:10.688254Z,2024-02-22T09:41:16.674597Z,2024-02-22T09:41:10.450477Z,2024-02-22T09:41:10.565287Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.dbt_exposures,model.elementary.dbt_exposures,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,dbt_exposures,INSERT 0 0,success,model,9.183775663375854,2024-02-22T09:41:10.646255Z,2024-02-22T09:41:18.697202Z,2024-02-22T09:41:10.378481Z,2024-02-22T09:41:10.520254Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.dbt_metrics,model.elementary.dbt_metrics,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,dbt_metrics,INSERT 0 0,success,model,8.405726909637451,2024-02-22T09:41:10.719254Z,2024-02-22T09:41:18.720205Z,2024-02-22T09:41:10.523254Z,2024-02-22T09:41:10.642253Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.dbt_seeds,model.elementary.dbt_seeds,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,dbt_seeds,INSERT 0 0,success,model,8.332725286483765,2024-02-22T09:41:10.767265Z,2024-02-22T09:41:18.738202Z,2024-02-22T09:41:10.622253Z,2024-02-22T09:41:10.688254Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,dbt_snapshots,INSERT 0 0,success,model,6.268004655838013,2024-02-22T09:41:15.851656Z,2024-02-22T09:41:19.080010Z,2024-02-22T09:41:14.275752Z,2024-02-22T09:41:15.138569Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.dbt_models,model.elementary.dbt_models,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,dbt_models,INSERT 0 0,success,model,8.753501176834106,2024-02-22T09:41:10.737254Z,2024-02-22T09:41:19.108011Z,2024-02-22T09:41:10.560256Z,2024-02-22T09:41:10.659253Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,dbt_source_freshness_results,INSERT 0 0,success,model,1.5231590270996094,2024-02-22T09:41:18.652201Z,2024-02-22T09:41:19.507390Z,2024-02-22T09:41:18.523160Z,2024-02-22T09:41:18.572159Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.metadata,model.elementary.metadata,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,metadata,SELECT 1,success,model,1.4102916717529297,2024-02-22T09:41:18.962010Z,2024-02-22T09:41:20.192496Z,2024-02-22T09:41:18.887202Z,2024-02-22T09:41:18.924202Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-4 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,int_accounts_and_groups_joined,CREATE VIEW,success,model,1.093475341796875,2024-02-22T09:41:19.302013Z,2024-02-22T09:41:20.279492Z,2024-02-22T09:41:19.237011Z,2024-02-22T09:41:19.258016Z,-1,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
    ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.elementary_test_results,model.elementary.elementary_test_results,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,elementary_test_results,INSERT 0 0,success,model,1.635272741317749,2024-02-22T09:41:18.937225Z,2024-02-22T09:41:20.426510Z,2024-02-22T09:41:18.843203Z,2024-02-22T09:41:18.900201Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,schema_columns_snapshot,INSERT 0 0,success,model,1.7009265422821045,2024-02-22T09:41:19.082057Z,2024-02-22T09:41:20.449493Z,2024-02-22T09:41:18.907208Z,2024-02-22T09:41:18.934202Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.dbt_tests,model.elementary.dbt_tests,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,dbt_tests,INSERT 0 0,success,model,2.0359597206115723,2024-02-22T09:41:18.721207Z,2024-02-22T09:41:20.549128Z,2024-02-22T09:41:18.615203Z,2024-02-22T09:41:18.681203Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.dbt_sources,model.elementary.dbt_sources,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,dbt_sources,INSERT 0 0,success,model,2.1189746856689453,2024-02-22T09:41:18.699203Z,2024-02-22T09:41:20.651126Z,2024-02-22T09:41:18.587184Z,2024-02-22T09:41:18.678212Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,metrics_anomaly_score,CREATE VIEW,success,model,1.3657517433166504,2024-02-22T09:41:20.251491Z,2024-02-22T09:41:20.969703Z,2024-02-22T09:41:20.194493Z,2024-02-22T09:41:20.235493Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.monitors_runs,model.elementary.monitors_runs,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,monitors_runs,CREATE VIEW,success,model,0.7416563034057617,2024-02-22T09:41:20.338492Z,2024-02-22T09:41:21.039143Z,2024-02-22T09:41:20.316491Z,2024-02-22T09:41:20.330492Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.job_run_results,model.elementary.job_run_results,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,job_run_results,CREATE VIEW,success,model,0.8093712329864502,2024-02-22T09:41:20.576128Z,2024-02-22T09:41:21.244864Z,2024-02-22T09:41:20.495132Z,2024-02-22T09:41:20.535128Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
093ad48a-2fe2-481a-8464-235144d4e736.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,093ad48a-2fe2-481a-8464-235144d4e736,2024-02-22 09:44:39,2024-02-22 09:44:39.245079,stg_dbt_models,CREATE VIEW,success,model,0.46300387382507324,2024-02-22T09:44:35.809863Z,2024-02-22T09:44:36.134865Z,2024-02-22T09:44:35.704862Z,2024-02-22T09:44:35.724864Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.model_run_results,model.elementary.model_run_results,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,model_run_results,CREATE VIEW,success,model,0.7049901485443115,2024-02-22T09:41:20.774132Z,2024-02-22T09:41:21.365119Z,2024-02-22T09:41:20.689668Z,2024-02-22T09:41:20.742127Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,alerts_anomaly_detection,CREATE VIEW,success,model,1.1366639137268066,2024-02-22T09:41:20.933652Z,2024-02-22T09:41:21.852796Z,2024-02-22T09:41:20.752130Z,2024-02-22T09:41:20.907652Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,snapshot_run_results,CREATE VIEW,success,model,1.265763521194458,2024-02-22T09:41:20.710131Z,2024-02-22T09:41:21.858796Z,2024-02-22T09:41:20.631127Z,2024-02-22T09:41:20.671133Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,alerts_schema_changes,CREATE VIEW,success,model,0.8993487358093262,2024-02-22T09:41:22.460520Z,2024-02-22T09:41:23.134528Z,2024-02-22T09:41:22.309171Z,2024-02-22T09:41:22.367761Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,anomaly_threshold_sensitivity,CREATE VIEW,success,model,0.852349042892456,2024-02-22T09:41:22.533082Z,2024-02-22T09:41:23.144756Z,2024-02-22T09:41:22.427520Z,2024-02-22T09:41:22.475519Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,alerts_dbt_tests,CREATE VIEW,success,model,1.0593531131744385,2024-02-22T09:41:22.443520Z,2024-02-22T09:41:23.289520Z,2024-02-22T09:41:22.288174Z,2024-02-22T09:41:22.330175Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,alerts_dbt_source_freshness,CREATE VIEW,success,model,1.056349277496338,2024-02-22T09:41:22.498084Z,2024-02-22T09:41:23.301526Z,2024-02-22T09:41:22.358759Z,2024-02-22T09:41:22.442522Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,dbt_artifacts_hashes,CREATE VIEW,success,model,1.0413498878479004,2024-02-22T09:41:22.511082Z,2024-02-22T09:41:23.316520Z,2024-02-22T09:41:22.374758Z,2024-02-22T09:41:22.456520Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.information_schema_columns,model.elementary.information_schema_columns,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,information_schema_columns,CREATE VIEW,success,model,1.0463535785675049,2024-02-22T09:41:22.670390Z,2024-02-22T09:41:23.322520Z,2024-02-22T09:41:22.393504Z,2024-02-22T09:41:22.646858Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.test_result_rows,model.elementary.test_result_rows,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,test_result_rows,INSERT 0 0,success,model,1.1074059009552002,2024-02-22T09:41:22.482520Z,2024-02-22T09:41:23.368586Z,2024-02-22T09:41:22.331174Z,2024-02-22T09:41:22.426518Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,alerts_dbt_models,CREATE VIEW,success,model,0.2770514488220215,2024-02-22T09:41:23.253520Z,2024-02-22T09:41:23.499579Z,2024-02-22T09:41:23.233520Z,2024-02-22T09:41:23.251520Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.elementary.enriched_columns,model.elementary.enriched_columns,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,enriched_columns,CREATE VIEW,success,model,0.19550704956054688,2024-02-22T09:41:23.451059Z,2024-02-22T09:41:23.603096Z,2024-02-22T09:41:23.425579Z,2024-02-22T09:41:23.446055Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,int_union_of_transactions,SELECT 100000000,success,model,117.90480279922485,2024-02-22T09:41:19.344012Z,2024-02-22T09:43:17.134807Z,2024-02-22T09:41:19.262012Z,2024-02-22T09:41:19.301012Z,100000000,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-6 (worker),table,"{""_message"": ""SELECT 100000000"", ""code"": ""SELECT"", ""rows_affected"": 100000000}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,int_transactions_and_accounts_and_groups_joined,CREATE VIEW,success,model,0.21400022506713867,2024-02-22T09:43:17.164808Z,2024-02-22T09:43:17.359808Z,2024-02-22T09:43:17.151808Z,2024-02-22T09:43:17.161809Z,-1,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
    ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,int_grouped_on_group_id,CREATE VIEW,success,model,0.09000444412231445,2024-02-22T09:43:17.383808Z,2024-02-22T09:43:17.458810Z,2024-02-22T09:43:17.373811Z,2024-02-22T09:43:17.380807Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        SUM(amount) AS total_amount,
        'fixed_value' AS account_description

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
64e613e6-cb37-4113-b046-7b0e5536917b.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,64e613e6-cb37-4113-b046-7b0e5536917b,2024-02-22 09:44:02,2024-02-22 09:44:02.576415,grouped_transactions_unioned_with_original,SELECT 11488,success,model,43.08336400985718,2024-02-22T09:43:17.482814Z,2024-02-22T09:44:00.547165Z,2024-02-22T09:43:17.471810Z,2024-02-22T09:43:17.479837Z,11488,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-4 (worker),table,"{""_message"": ""SELECT 11488"", ""code"": ""SELECT"", ""rows_affected"": 11488}"
093ad48a-2fe2-481a-8464-235144d4e736.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,093ad48a-2fe2-481a-8464-235144d4e736,2024-02-22 09:44:39,2024-02-22 09:44:39.245079,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.43000221252441406,2024-02-22T09:44:35.730863Z,2024-02-22T09:44:36.079864Z,2024-02-22T09:44:35.690867Z,2024-02-22T09:44:35.720863Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
093ad48a-2fe2-481a-8464-235144d4e736.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,093ad48a-2fe2-481a-8464-235144d4e736,2024-02-22 09:44:39,2024-02-22 09:44:39.245079,stg_dbt_invocations,CREATE VIEW,success,model,0.4419980049133301,2024-02-22T09:44:35.798862Z,2024-02-22T09:44:36.100864Z,2024-02-22T09:44:35.698863Z,2024-02-22T09:44:35.722871Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
093ad48a-2fe2-481a-8464-235144d4e736.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,093ad48a-2fe2-481a-8464-235144d4e736,2024-02-22 09:44:39,2024-02-22 09:44:39.245079,stg_dbt_run_results,CREATE VIEW,success,model,0.4690072536468506,2024-02-22T09:44:35.819866Z,2024-02-22T09:44:36.140864Z,2024-02-22T09:44:35.711867Z,2024-02-22T09:44:35.727866Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
093ad48a-2fe2-481a-8464-235144d4e736.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,093ad48a-2fe2-481a-8464-235144d4e736,2024-02-22 09:44:39,2024-02-22 09:44:39.245079,int_keep_models_relevant_package,CREATE VIEW,success,model,0.12099981307983398,2024-02-22T09:44:36.185863Z,2024-02-22T09:44:36.281864Z,2024-02-22T09:44:36.168865Z,2024-02-22T09:44:36.181865Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
093ad48a-2fe2-481a-8464-235144d4e736.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,093ad48a-2fe2-481a-8464-235144d4e736,2024-02-22 09:44:39,2024-02-22 09:44:39.245079,int_join_with_run_results,CREATE VIEW,success,model,0.35199809074401855,2024-02-22T09:44:36.405863Z,2024-02-22T09:44:36.609865Z,2024-02-22T09:44:36.329863Z,2024-02-22T09:44:36.341865Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
093ad48a-2fe2-481a-8464-235144d4e736.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,093ad48a-2fe2-481a-8464-235144d4e736,2024-02-22 09:44:39,2024-02-22 09:44:39.245079,fct_destination_nodes,SELECT 1,success,model,0.40900421142578125,2024-02-22T09:44:36.344862Z,2024-02-22T09:44:36.699866Z,2024-02-22T09:44:36.311866Z,2024-02-22T09:44:36.337864Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM destination_models",,,Thread-8 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
093ad48a-2fe2-481a-8464-235144d4e736.model.view_selection_tool.fct_model_dependencies,model.view_selection_tool.fct_model_dependencies,093ad48a-2fe2-481a-8464-235144d4e736,2024-02-22 09:44:39,2024-02-22 09:44:39.245079,fct_model_dependencies,SELECT 11,success,model,0.44699907302856445,2024-02-22T09:44:36.396894Z,2024-02-22T09:44:36.720868Z,2024-02-22T09:44:36.318863Z,2024-02-22T09:44:36.338863Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes,
        '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS compiled_code_reference

    FROM including_irrelevant_cols

)

    SELECT * FROM model_dependencies",,,Thread-5 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
093ad48a-2fe2-481a-8464-235144d4e736.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,093ad48a-2fe2-481a-8464-235144d4e736,2024-02-22 09:44:39,2024-02-22 09:44:39.245079,int_only_materialized_models,CREATE VIEW,success,model,0.15500354766845703,2024-02-22T09:44:36.769865Z,2024-02-22T09:44:36.859863Z,2024-02-22T09:44:36.732866Z,2024-02-22T09:44:36.747865Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
093ad48a-2fe2-481a-8464-235144d4e736.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,093ad48a-2fe2-481a-8464-235144d4e736,2024-02-22 09:44:39,2024-02-22 09:44:39.245079,fct_all_models_plus_code,SELECT 11,success,model,0.25600671768188477,2024-02-22T09:44:36.757865Z,2024-02-22T09:44:36.956867Z,2024-02-22T09:44:36.722865Z,2024-02-22T09:44:36.746869Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-3 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
093ad48a-2fe2-481a-8464-235144d4e736.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,093ad48a-2fe2-481a-8464-235144d4e736,2024-02-22 09:44:39,2024-02-22 09:44:39.245079,int_include_monitoring_id,CREATE VIEW,success,model,0.13000130653381348,2024-02-22T09:44:36.913862Z,2024-02-22T09:44:37.012863Z,2024-02-22T09:44:36.893864Z,2024-02-22T09:44:36.910866Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
093ad48a-2fe2-481a-8464-235144d4e736.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,093ad48a-2fe2-481a-8464-235144d4e736,2024-02-22 09:44:39,2024-02-22 09:44:39.245079,int_maintenance_fractions,CREATE VIEW,success,model,0.11200070381164551,2024-02-22T09:44:37.049863Z,2024-02-22T09:44:37.144868Z,2024-02-22T09:44:37.038862Z,2024-02-22T09:44:37.046861Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
093ad48a-2fe2-481a-8464-235144d4e736.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,093ad48a-2fe2-481a-8464-235144d4e736,2024-02-22 09:44:39,2024-02-22 09:44:39.245079,fct_avg_maintenance_fractions,SELECT 4,success,model,0.13999700546264648,2024-02-22T09:44:37.171865Z,2024-02-22T09:44:37.293869Z,2024-02-22T09:44:37.159867Z,2024-02-22T09:44:37.169866Z,4,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-8 (worker),table,"{""_message"": ""SELECT 4"", ""code"": ""SELECT"", ""rows_affected"": 4}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,stg_transactions_1,CREATE VIEW,success,model,1.1038949489593506,2024-02-22T09:51:11.668730Z,2024-02-22T09:51:12.258201Z,2024-02-22T09:51:11.522685Z,2024-02-22T09:51:11.592691Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 25000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,stg_transactions_4,CREATE VIEW,success,model,1.2585055828094482,2024-02-22T09:51:11.697203Z,2024-02-22T09:51:12.263202Z,2024-02-22T09:51:11.542687Z,2024-02-22T09:51:11.597687Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 25000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,stg_transactions_3,CREATE VIEW,success,model,1.323594570159912,2024-02-22T09:51:11.690200Z,2024-02-22T09:51:12.268202Z,2024-02-22T09:51:11.533685Z,2024-02-22T09:51:11.596690Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 25000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,stg_accounts,CREATE VIEW,success,model,1.394261360168457,2024-02-22T09:51:11.609688Z,2024-02-22T09:51:12.271203Z,2024-02-22T09:51:11.509685Z,2024-02-22T09:51:11.590701Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 10000

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,stg_groups,CREATE VIEW,success,model,1.5825598239898682,2024-02-22T09:51:11.676531Z,2024-02-22T09:51:12.316204Z,2024-02-22T09:51:11.517687Z,2024-02-22T09:51:11.594692Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 1000

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,stg_transactions_2,CREATE VIEW,success,model,1.7351641654968262,2024-02-22T09:51:11.683203Z,2024-02-22T09:51:12.321201Z,2024-02-22T09:51:11.528684Z,2024-02-22T09:51:11.595687Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 25000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.dbt_metrics,model.elementary.dbt_metrics,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,dbt_metrics,INSERT 0 0,success,model,7.86277174949646,2024-02-22T09:51:14.242373Z,2024-02-22T09:51:21.225628Z,2024-02-22T09:51:13.523892Z,2024-02-22T09:51:13.630855Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,data_monitoring_metrics,INSERT 0 0,success,model,3.1372311115264893,2024-02-22T09:51:11.706200Z,2024-02-22T09:51:13.649856Z,2024-02-22T09:51:11.547685Z,2024-02-22T09:51:11.599686Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.dbt_columns,model.elementary.dbt_columns,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,dbt_columns,INSERT 0 0,success,model,7.193936109542847,2024-02-22T09:51:11.764206Z,2024-02-22T09:51:18.673613Z,2024-02-22T09:51:11.568689Z,2024-02-22T09:51:11.602686Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.dbt_invocations,model.elementary.dbt_invocations,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,dbt_invocations,INSERT 0 0,success,model,5.808366775512695,2024-02-22T09:51:14.068375Z,2024-02-22T09:51:19.151222Z,2024-02-22T09:51:13.487856Z,2024-02-22T09:51:13.628860Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.dbt_run_results,model.elementary.dbt_run_results,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,dbt_run_results,INSERT 0 0,success,model,5.788367986679077,2024-02-22T09:51:14.539653Z,2024-02-22T09:51:19.159222Z,2024-02-22T09:51:13.574859Z,2024-02-22T09:51:13.637859Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.dbt_exposures,model.elementary.dbt_exposures,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,dbt_exposures,INSERT 0 0,success,model,7.863768577575684,2024-02-22T09:51:13.812884Z,2024-02-22T09:51:21.214654Z,2024-02-22T09:51:13.446861Z,2024-02-22T09:51:13.604856Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.dbt_seeds,model.elementary.dbt_seeds,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,dbt_seeds,INSERT 0 0,success,model,7.816763401031494,2024-02-22T09:51:14.822917Z,2024-02-22T09:51:21.219624Z,2024-02-22T09:51:13.605859Z,2024-02-22T09:51:13.651856Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,dbt_snapshots,INSERT 0 0,success,model,3.6331088542938232,2024-02-22T09:51:18.266282Z,2024-02-22T09:51:21.436177Z,2024-02-22T09:51:18.218277Z,2024-02-22T09:51:18.257277Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.dbt_models,model.elementary.dbt_models,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,dbt_models,INSERT 0 0,success,model,8.270065069198608,2024-02-22T09:51:14.352403Z,2024-02-22T09:51:21.627333Z,2024-02-22T09:51:13.550859Z,2024-02-22T09:51:13.634869Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,dbt_source_freshness_results,INSERT 0 0,success,model,2.8048877716064453,2024-02-22T09:51:19.163235Z,2024-02-22T09:51:21.803110Z,2024-02-22T09:51:19.079223Z,2024-02-22T09:51:19.134226Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.metadata,model.elementary.metadata,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,metadata,SELECT 1,success,model,1.3136851787567139,2024-02-22T09:51:21.592339Z,2024-02-22T09:51:22.631472Z,2024-02-22T09:51:21.409068Z,2024-02-22T09:51:21.443705Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-4 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,int_accounts_and_groups_joined,CREATE VIEW,success,model,0.9863629341125488,2024-02-22T09:51:21.825109Z,2024-02-22T09:51:22.674475Z,2024-02-22T09:51:21.744127Z,2024-02-22T09:51:21.781110Z,-1,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
    ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.elementary_test_results,model.elementary.elementary_test_results,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,elementary_test_results,INSERT 0 0,success,model,1.5318820476531982,2024-02-22T09:51:21.573334Z,2024-02-22T09:51:22.837061Z,2024-02-22T09:51:21.363750Z,2024-02-22T09:51:21.438883Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,schema_columns_snapshot,INSERT 0 0,success,model,1.526869773864746,2024-02-22T09:51:21.645334Z,2024-02-22T09:51:22.850051Z,2024-02-22T09:51:21.444243Z,2024-02-22T09:51:21.568336Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.dbt_tests,model.elementary.dbt_tests,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,dbt_tests,INSERT 0 0,success,model,1.861464500427246,2024-02-22T09:51:21.199630Z,2024-02-22T09:51:22.874060Z,2024-02-22T09:51:21.097587Z,2024-02-22T09:51:21.159588Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.dbt_sources,model.elementary.dbt_sources,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,dbt_sources,INSERT 0 0,success,model,2.028286933898926,2024-02-22T09:51:21.183139Z,2024-02-22T09:51:23.028356Z,2024-02-22T09:51:21.065590Z,2024-02-22T09:51:21.149587Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,metrics_anomaly_score,CREATE VIEW,success,model,1.1897666454315186,2024-02-22T09:51:22.148114Z,2024-02-22T09:51:23.108875Z,2024-02-22T09:51:22.057114Z,2024-02-22T09:51:22.108109Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.monitors_runs,model.elementary.monitors_runs,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,monitors_runs,CREATE VIEW,success,model,0.5960054397583008,2024-02-22T09:51:22.926054Z,2024-02-22T09:51:23.401528Z,2024-02-22T09:51:22.863087Z,2024-02-22T09:51:22.888052Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.job_run_results,model.elementary.job_run_results,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,job_run_results,CREATE VIEW,success,model,0.5960009098052979,2024-02-22T09:51:22.967686Z,2024-02-22T09:51:23.446052Z,2024-02-22T09:51:22.909065Z,2024-02-22T09:51:22.949680Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.model_run_results,model.elementary.model_run_results,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,model_run_results,CREATE VIEW,success,model,0.5713768005371094,2024-02-22T09:51:23.090878Z,2024-02-22T09:51:23.522057Z,2024-02-22T09:51:23.006751Z,2024-02-22T09:51:23.039876Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,snapshot_run_results,CREATE VIEW,success,model,0.5803840160369873,2024-02-22T09:51:23.072877Z,2024-02-22T09:51:23.527052Z,2024-02-22T09:51:22.996679Z,2024-02-22T09:51:23.037890Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.enriched_columns,model.elementary.enriched_columns,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,enriched_columns,CREATE VIEW,success,model,0.1309974193572998,2024-02-22T09:51:25.645324Z,2024-02-22T09:51:25.748324Z,2024-02-22T09:51:25.625323Z,2024-02-22T09:51:25.640331Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,alerts_anomaly_detection,CREATE VIEW,success,model,0.5593786239624023,2024-02-22T09:51:23.131877Z,2024-02-22T09:51:23.550059Z,2024-02-22T09:51:23.043875Z,2024-02-22T09:51:23.088873Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,int_union_of_transactions,CREATE VIEW,success,model,2.20893931388855,2024-02-22T09:51:21.888114Z,2024-02-22T09:51:23.972053Z,2024-02-22T09:51:21.805113Z,2024-02-22T09:51:21.846113Z,-1,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,anomaly_threshold_sensitivity,CREATE VIEW,success,model,0.6769998073577881,2024-02-22T09:51:24.928722Z,2024-02-22T09:51:25.369729Z,2024-02-22T09:51:24.837719Z,2024-02-22T09:51:24.865720Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,alerts_dbt_models,CREATE VIEW,success,model,0.6730005741119385,2024-02-22T09:51:24.942719Z,2024-02-22T09:51:25.374719Z,2024-02-22T09:51:24.847752Z,2024-02-22T09:51:24.878719Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,alerts_dbt_tests,CREATE VIEW,success,model,0.7548620700836182,2024-02-22T09:51:24.866720Z,2024-02-22T09:51:25.430721Z,2024-02-22T09:51:24.734725Z,2024-02-22T09:51:24.790718Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,int_transactions_and_accounts_and_groups_joined,SELECT 82,success,model,47.91142225265503,2024-02-22T09:51:25.573325Z,2024-02-22T09:52:13.413784Z,2024-02-22T09:51:25.537336Z,2024-02-22T09:51:25.558325Z,82,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
    ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-2 (worker),table,"{""_message"": ""SELECT 82"", ""code"": ""SELECT"", ""rows_affected"": 82}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,dbt_artifacts_hashes,CREATE VIEW,success,model,0.7976067066192627,2024-02-22T09:51:24.914719Z,2024-02-22T09:51:25.485324Z,2024-02-22T09:51:24.792730Z,2024-02-22T09:51:24.862720Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,alerts_schema_changes,CREATE VIEW,success,model,0.8186101913452148,2024-02-22T09:51:24.879721Z,2024-02-22T09:51:25.504325Z,2024-02-22T09:51:24.748719Z,2024-02-22T09:51:24.808719Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,alerts_dbt_source_freshness,CREATE VIEW,success,model,0.8226096630096436,2024-02-22T09:51:24.903718Z,2024-02-22T09:51:25.512327Z,2024-02-22T09:51:24.780720Z,2024-02-22T09:51:24.860720Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.information_schema_columns,model.elementary.information_schema_columns,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,information_schema_columns,CREATE VIEW,success,model,0.8586044311523438,2024-02-22T09:51:25.080720Z,2024-02-22T09:51:25.584324Z,2024-02-22T09:51:24.810721Z,2024-02-22T09:51:25.054726Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.elementary.test_result_rows,model.elementary.test_result_rows,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,test_result_rows,INSERT 0 0,success,model,0.8896124362945557,2024-02-22T09:51:24.890724Z,2024-02-22T09:51:25.598325Z,2024-02-22T09:51:24.761724Z,2024-02-22T09:51:24.837719Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,int_grouped_on_group_id,CREATE VIEW,success,model,0.08899760246276855,2024-02-22T09:52:13.438785Z,2024-02-22T09:52:13.509748Z,2024-02-22T09:52:13.427749Z,2024-02-22T09:52:13.435786Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        SUM(amount) AS total_amount,
        'fixed_value' AS account_description

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c051feb8-e502-4f6e-bcf2-f5d3b860ba96.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,c051feb8-e502-4f6e-bcf2-f5d3b860ba96,2024-02-22 09:52:14,2024-02-22 09:52:14.942345,grouped_transactions_unioned_with_original,SELECT 90,success,model,0.12835073471069336,2024-02-22T09:52:13.535754Z,2024-02-22T09:52:13.648754Z,2024-02-22T09:52:13.524752Z,2024-02-22T09:52:13.531782Z,90,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-7 (worker),table,"{""_message"": ""SELECT 90"", ""code"": ""SELECT"", ""rows_affected"": 90}"
a88d1657-3268-47c7-8842-aab3cb2990a5.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,a88d1657-3268-47c7-8842-aab3cb2990a5,2024-02-22 09:52:36,2024-02-22 09:52:36.117777,stg_dbt_invocations,CREATE VIEW,success,model,0.3748438358306885,2024-02-22T09:52:33.007748Z,2024-02-22T09:52:33.290597Z,2024-02-22T09:52:32.937779Z,2024-02-22T09:52:32.955765Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a88d1657-3268-47c7-8842-aab3cb2990a5.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,a88d1657-3268-47c7-8842-aab3cb2990a5,2024-02-22 09:52:36,2024-02-22 09:52:36.117777,stg_dbt_run_results,CREATE VIEW,success,model,0.3858344554901123,2024-02-22T09:52:33.027494Z,2024-02-22T09:52:33.299591Z,2024-02-22T09:52:32.947753Z,2024-02-22T09:52:32.958750Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a88d1657-3268-47c7-8842-aab3cb2990a5.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,a88d1657-3268-47c7-8842-aab3cb2990a5,2024-02-22 09:52:36,2024-02-22 09:52:36.117777,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.3968393802642822,2024-02-22T09:52:32.961749Z,2024-02-22T09:52:33.303588Z,2024-02-22T09:52:32.932750Z,2024-02-22T09:52:32.954751Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a88d1657-3268-47c7-8842-aab3cb2990a5.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,a88d1657-3268-47c7-8842-aab3cb2990a5,2024-02-22 09:52:36,2024-02-22 09:52:36.117777,stg_dbt_models,CREATE VIEW,success,model,0.3948352336883545,2024-02-22T09:52:33.017770Z,2024-02-22T09:52:33.307589Z,2024-02-22T09:52:32.942769Z,2024-02-22T09:52:32.956749Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a88d1657-3268-47c7-8842-aab3cb2990a5.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,a88d1657-3268-47c7-8842-aab3cb2990a5,2024-02-22 09:52:36,2024-02-22 09:52:36.117777,int_keep_models_relevant_package,CREATE VIEW,success,model,0.08398175239562988,2024-02-22T09:52:33.341591Z,2024-02-22T09:52:33.412593Z,2024-02-22T09:52:33.333590Z,2024-02-22T09:52:33.339590Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a88d1657-3268-47c7-8842-aab3cb2990a5.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,a88d1657-3268-47c7-8842-aab3cb2990a5,2024-02-22 09:52:36,2024-02-22 09:52:36.117777,int_join_with_run_results,CREATE VIEW,success,model,0.24100446701049805,2024-02-22T09:52:33.518587Z,2024-02-22T09:52:33.656592Z,2024-02-22T09:52:33.445591Z,2024-02-22T09:52:33.454590Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a88d1657-3268-47c7-8842-aab3cb2990a5.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,a88d1657-3268-47c7-8842-aab3cb2990a5,2024-02-22 09:52:36,2024-02-22 09:52:36.117777,fct_destination_nodes,SELECT 1,success,model,0.3199939727783203,2024-02-22T09:52:33.456589Z,2024-02-22T09:52:33.727623Z,2024-02-22T09:52:33.432588Z,2024-02-22T09:52:33.451587Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM destination_models",,,Thread-8 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
a88d1657-3268-47c7-8842-aab3cb2990a5.model.view_selection_tool.fct_model_dependencies,model.view_selection_tool.fct_model_dependencies,a88d1657-3268-47c7-8842-aab3cb2990a5,2024-02-22 09:52:36,2024-02-22 09:52:36.117777,fct_model_dependencies,SELECT 11,success,model,0.35199666023254395,2024-02-22T09:52:33.507587Z,2024-02-22T09:52:33.762590Z,2024-02-22T09:52:33.437588Z,2024-02-22T09:52:33.452592Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes,
        '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS compiled_code_reference

    FROM including_irrelevant_cols

)

    SELECT * FROM model_dependencies",,,Thread-5 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
a88d1657-3268-47c7-8842-aab3cb2990a5.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,a88d1657-3268-47c7-8842-aab3cb2990a5,2024-02-22 09:52:36,2024-02-22 09:52:36.117777,int_only_materialized_models,CREATE VIEW,success,model,0.1889662742614746,2024-02-22T09:52:33.780589Z,2024-02-22T09:52:33.901591Z,2024-02-22T09:52:33.747589Z,2024-02-22T09:52:33.763589Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a88d1657-3268-47c7-8842-aab3cb2990a5.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,a88d1657-3268-47c7-8842-aab3cb2990a5,2024-02-22 09:52:36,2024-02-22 09:52:36.117777,fct_all_models_plus_code,SELECT 11,success,model,0.25199198722839355,2024-02-22T09:52:33.765587Z,2024-02-22T09:52:33.954591Z,2024-02-22T09:52:33.736588Z,2024-02-22T09:52:33.753588Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-1 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
a88d1657-3268-47c7-8842-aab3cb2990a5.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,a88d1657-3268-47c7-8842-aab3cb2990a5,2024-02-22 09:52:36,2024-02-22 09:52:36.117777,int_include_monitoring_id,CREATE VIEW,success,model,0.125016450881958,2024-02-22T09:52:33.963592Z,2024-02-22T09:52:34.052595Z,2024-02-22T09:52:33.937590Z,2024-02-22T09:52:33.955587Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a88d1657-3268-47c7-8842-aab3cb2990a5.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,a88d1657-3268-47c7-8842-aab3cb2990a5,2024-02-22 09:52:36,2024-02-22 09:52:36.117777,int_maintenance_fractions,CREATE VIEW,success,model,0.11198830604553223,2024-02-22T09:52:34.095592Z,2024-02-22T09:52:34.182591Z,2024-02-22T09:52:34.078603Z,2024-02-22T09:52:34.092592Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
a88d1657-3268-47c7-8842-aab3cb2990a5.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,a88d1657-3268-47c7-8842-aab3cb2990a5,2024-02-22 09:52:36,2024-02-22 09:52:36.117777,fct_avg_maintenance_fractions,SELECT 4,success,model,0.11699795722961426,2024-02-22T09:52:34.204588Z,2024-02-22T09:52:34.307626Z,2024-02-22T09:52:34.195589Z,2024-02-22T09:52:34.202622Z,4,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-8 (worker),table,"{""_message"": ""SELECT 4"", ""code"": ""SELECT"", ""rows_affected"": 4}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,stg_accounts,CREATE VIEW,success,model,0.7812244892120361,2024-02-22T10:00:22.071488Z,2024-02-22T10:00:22.706223Z,2024-02-22T10:00:21.976985Z,2024-02-22T10:00:22.055494Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 10000

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,stg_groups,CREATE VIEW,success,model,0.8272383213043213,2024-02-22T10:00:22.126654Z,2024-02-22T10:00:22.720211Z,2024-02-22T10:00:21.984721Z,2024-02-22T10:00:22.056496Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 1000

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,stg_transactions_1,CREATE VIEW,success,model,0.8272078037261963,2024-02-22T10:00:22.133655Z,2024-02-22T10:00:22.723216Z,2024-02-22T10:00:21.990489Z,2024-02-22T10:00:22.057490Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 25000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,stg_transactions_3,CREATE VIEW,success,model,0.9037957191467285,2024-02-22T10:00:22.148654Z,2024-02-22T10:00:22.730215Z,2024-02-22T10:00:21.999488Z,2024-02-22T10:00:22.060494Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 25000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,stg_transactions_2,CREATE VIEW,success,model,1.159529447555542,2024-02-22T10:00:22.140655Z,2024-02-22T10:00:22.732214Z,2024-02-22T10:00:21.995489Z,2024-02-22T10:00:22.059494Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 25000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,stg_transactions_4,CREATE VIEW,success,model,1.252180814743042,2024-02-22T10:00:22.154655Z,2024-02-22T10:00:22.735215Z,2024-02-22T10:00:22.006492Z,2024-02-22T10:00:22.062500Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 25000000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,data_monitoring_metrics,INSERT 0 0,success,model,3.3062567710876465,2024-02-22T10:00:22.163667Z,2024-02-22T10:00:24.106214Z,2024-02-22T10:00:22.012492Z,2024-02-22T10:00:22.063490Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.dbt_columns,model.elementary.dbt_columns,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,dbt_columns,INSERT 0 0,success,model,7.352956056594849,2024-02-22T10:00:22.222658Z,2024-02-22T10:00:29.045922Z,2024-02-22T10:00:22.034494Z,2024-02-22T10:00:22.065496Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.dbt_invocations,model.elementary.dbt_invocations,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,dbt_invocations,INSERT 0 0,success,model,5.610523462295532,2024-02-22T10:00:24.107215Z,2024-02-22T10:00:29.388944Z,2024-02-22T10:00:23.915185Z,2024-02-22T10:00:24.033185Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.dbt_run_results,model.elementary.dbt_run_results,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,dbt_run_results,INSERT 0 0,success,model,5.6800549030303955,2024-02-22T10:00:24.307714Z,2024-02-22T10:00:29.463018Z,2024-02-22T10:00:24.002189Z,2024-02-22T10:00:24.063186Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.dbt_exposures,model.elementary.dbt_exposures,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,dbt_exposures,INSERT 0 0,success,model,7.70383358001709,2024-02-22T10:00:24.064185Z,2024-02-22T10:00:31.465114Z,2024-02-22T10:00:23.835737Z,2024-02-22T10:00:23.913206Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.dbt_seeds,model.elementary.dbt_seeds,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,dbt_seeds,INSERT 0 0,success,model,7.660515546798706,2024-02-22T10:00:25.079749Z,2024-02-22T10:00:31.513250Z,2024-02-22T10:00:24.039202Z,2024-02-22T10:00:24.085205Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.dbt_metrics,model.elementary.dbt_metrics,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,dbt_metrics,INSERT 0 0,success,model,7.7468249797821045,2024-02-22T10:00:24.120185Z,2024-02-22T10:00:31.525249Z,2024-02-22T10:00:23.952189Z,2024-02-22T10:00:24.035192Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,dbt_snapshots,INSERT 0 0,success,model,3.4698545932769775,2024-02-22T10:00:28.628925Z,2024-02-22T10:00:31.931776Z,2024-02-22T10:00:28.553924Z,2024-02-22T10:00:28.597934Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.dbt_models,model.elementary.dbt_models,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,dbt_models,INSERT 0 0,success,model,8.181020736694336,2024-02-22T10:00:24.213714Z,2024-02-22T10:00:31.966779Z,2024-02-22T10:00:23.978190Z,2024-02-22T10:00:24.038188Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,dbt_source_freshness_results,INSERT 0 0,success,model,2.927968740463257,2024-02-22T10:00:30.786675Z,2024-02-22T10:00:32.335912Z,2024-02-22T10:00:29.477824Z,2024-02-22T10:00:29.515791Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.metadata,model.elementary.metadata,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,metadata,SELECT 1,success,model,1.4141864776611328,2024-02-22T10:00:31.886777Z,2024-02-22T10:00:33.004437Z,2024-02-22T10:00:31.700251Z,2024-02-22T10:00:31.856776Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-6 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.elementary_test_results,model.elementary.elementary_test_results,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,elementary_test_results,INSERT 0 0,success,model,1.5201849937438965,2024-02-22T10:00:31.741249Z,2024-02-22T10:00:33.092431Z,2024-02-22T10:00:31.644250Z,2024-02-22T10:00:31.693254Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,int_accounts_and_groups_joined,CREATE VIEW,success,model,1.0706555843353271,2024-02-22T10:00:32.155921Z,2024-02-22T10:00:33.098430Z,2024-02-22T10:00:32.093779Z,2024-02-22T10:00:32.126346Z,-1,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
    ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,schema_columns_snapshot,INSERT 0 0,success,model,1.5384654998779297,2024-02-22T10:00:31.934780Z,2024-02-22T10:00:33.169180Z,2024-02-22T10:00:31.714252Z,2024-02-22T10:00:31.871777Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.dbt_tests,model.elementary.dbt_tests,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,dbt_tests,INSERT 0 0,success,model,1.854581356048584,2024-02-22T10:00:31.536253Z,2024-02-22T10:00:33.206713Z,2024-02-22T10:00:31.431149Z,2024-02-22T10:00:31.501253Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.dbt_sources,model.elementary.dbt_sources,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,dbt_sources,INSERT 0 0,success,model,2.589864492416382,2024-02-22T10:00:31.467115Z,2024-02-22T10:00:33.404863Z,2024-02-22T10:00:31.358114Z,2024-02-22T10:00:31.408118Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,metrics_anomaly_score,CREATE VIEW,success,model,1.1651241779327393,2024-02-22T10:00:33.026429Z,2024-02-22T10:00:33.614996Z,2024-02-22T10:00:32.945436Z,2024-02-22T10:00:32.990431Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.monitors_runs,model.elementary.monitors_runs,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,monitors_runs,CREATE VIEW,success,model,1.550349235534668,2024-02-22T10:00:33.253712Z,2024-02-22T10:00:34.654798Z,2024-02-22T10:00:33.174190Z,2024-02-22T10:00:33.224711Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
549537c8-f3fb-42de-93cf-ae385d23931c.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,549537c8-f3fb-42de-93cf-ae385d23931c,2024-02-22 10:03:44,2024-02-22 10:03:44.911869,stg_dbt_run_results,CREATE VIEW,success,model,0.6587164402008057,2024-02-22T10:03:38.501572Z,2024-02-22T10:03:38.892923Z,2024-02-22T10:03:38.315571Z,2024-02-22T10:03:38.339573Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.job_run_results,model.elementary.job_run_results,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,job_run_results,CREATE VIEW,success,model,1.4580752849578857,2024-02-22T10:00:33.378713Z,2024-02-22T10:00:34.687789Z,2024-02-22T10:00:33.302717Z,2024-02-22T10:00:33.352713Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,alerts_anomaly_detection,CREATE VIEW,success,model,1.3519821166992188,2024-02-22T10:00:33.545477Z,2024-02-22T10:00:34.716697Z,2024-02-22T10:00:33.450321Z,2024-02-22T10:00:33.482899Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,snapshot_run_results,CREATE VIEW,success,model,1.4579825401306152,2024-02-22T10:00:33.430867Z,2024-02-22T10:00:34.723703Z,2024-02-22T10:00:33.335711Z,2024-02-22T10:00:33.361711Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.model_run_results,model.elementary.model_run_results,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,model_run_results,CREATE VIEW,success,model,1.3849890232086182,2024-02-22T10:00:33.489900Z,2024-02-22T10:00:34.730693Z,2024-02-22T10:00:33.406867Z,2024-02-22T10:00:33.448503Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,anomaly_threshold_sensitivity,CREATE VIEW,success,model,0.5752015113830566,2024-02-22T10:00:35.052694Z,2024-02-22T10:00:35.409148Z,2024-02-22T10:00:34.959692Z,2024-02-22T10:00:34.992699Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,alerts_schema_changes,CREATE VIEW,success,model,0.6802294254302979,2024-02-22T10:00:34.993694Z,2024-02-22T10:00:35.477921Z,2024-02-22T10:00:34.863694Z,2024-02-22T10:00:34.930692Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,alerts_dbt_tests,CREATE VIEW,success,model,0.6932260990142822,2024-02-22T10:00:34.979703Z,2024-02-22T10:00:35.488923Z,2024-02-22T10:00:34.841696Z,2024-02-22T10:00:34.884698Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,alerts_dbt_source_freshness,CREATE VIEW,success,model,0.7902262210845947,2024-02-22T10:00:35.029693Z,2024-02-22T10:00:35.608930Z,2024-02-22T10:00:34.909695Z,2024-02-22T10:00:34.975697Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.information_schema_columns,model.elementary.information_schema_columns,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,information_schema_columns,CREATE VIEW,success,model,0.7912359237670898,2024-02-22T10:00:35.163211Z,2024-02-22T10:00:35.613923Z,2024-02-22T10:00:34.932694Z,2024-02-22T10:00:35.150207Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,dbt_artifacts_hashes,CREATE VIEW,success,model,0.8352324962615967,2024-02-22T10:00:35.039693Z,2024-02-22T10:00:35.657922Z,2024-02-22T10:00:34.922692Z,2024-02-22T10:00:34.976704Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
549537c8-f3fb-42de-93cf-ae385d23931c.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,549537c8-f3fb-42de-93cf-ae385d23931c,2024-02-22 10:03:44,2024-02-22 10:03:44.911869,stg_dbt_invocations,CREATE VIEW,success,model,0.7257397174835205,2024-02-22T10:03:38.452574Z,2024-02-22T10:03:38.942924Z,2024-02-22T10:03:38.287206Z,2024-02-22T10:03:38.333574Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.test_result_rows,model.elementary.test_result_rows,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,test_result_rows,INSERT 0 0,success,model,0.8652241230010986,2024-02-22T10:00:35.007693Z,2024-02-22T10:00:35.682922Z,2024-02-22T10:00:34.886696Z,2024-02-22T10:00:34.972694Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.enriched_columns,model.elementary.enriched_columns,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,enriched_columns,CREATE VIEW,success,model,0.4310274124145508,2024-02-22T10:00:35.727923Z,2024-02-22T10:00:36.128984Z,2024-02-22T10:00:35.710920Z,2024-02-22T10:00:35.722922Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,alerts_dbt_models,CREATE VIEW,success,model,0.6000199317932129,2024-02-22T10:00:35.630927Z,2024-02-22T10:00:36.131945Z,2024-02-22T10:00:35.570923Z,2024-02-22T10:00:35.609928Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,int_union_of_transactions,SELECT 100000000,success,model,121.79763865470886,2024-02-22T10:00:32.201910Z,2024-02-22T10:02:33.885412Z,2024-02-22T10:00:32.139913Z,2024-02-22T10:00:32.153912Z,100000000,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-5 (worker),table,"{""_message"": ""SELECT 100000000"", ""code"": ""SELECT"", ""rows_affected"": 100000000}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,int_transactions_and_accounts_and_groups_joined,CREATE VIEW,success,model,0.1080021858215332,2024-02-22T10:02:33.916412Z,2024-02-22T10:02:34.003413Z,2024-02-22T10:02:33.901410Z,2024-02-22T10:02:33.912410Z,-1,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
    ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,int_grouped_on_group_id,CREATE VIEW,success,model,0.08899402618408203,2024-02-22T10:02:34.032412Z,2024-02-22T10:02:34.101411Z,2024-02-22T10:02:34.018411Z,2024-02-22T10:02:34.029409Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        SUM(amount) AS total_amount,
        'fixed_value' AS account_description

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
b5ba2ac7-8685-4144-8a06-0f65eaaf1925.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,b5ba2ac7-8685-4144-8a06-0f65eaaf1925,2024-02-22 10:03:13,2024-02-22 10:03:13.218024,grouped_transactions_unioned_with_original,SELECT 92,success,model,37.657915353775024,2024-02-22T10:02:34.127417Z,2024-02-22T10:03:11.767351Z,2024-02-22T10:02:34.115409Z,2024-02-22T10:02:34.124408Z,92,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-6 (worker),table,"{""_message"": ""SELECT 92"", ""code"": ""SELECT"", ""rows_affected"": 92}"
549537c8-f3fb-42de-93cf-ae385d23931c.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,549537c8-f3fb-42de-93cf-ae385d23931c,2024-02-22 10:03:44,2024-02-22 10:03:44.911869,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.7517163753509521,2024-02-22T10:03:38.345573Z,2024-02-22T10:03:38.964929Z,2024-02-22T10:03:38.264213Z,2024-02-22T10:03:38.331575Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
549537c8-f3fb-42de-93cf-ae385d23931c.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,549537c8-f3fb-42de-93cf-ae385d23931c,2024-02-22 10:03:44,2024-02-22 10:03:44.911869,stg_dbt_models,CREATE VIEW,success,model,0.7437186241149902,2024-02-22T10:03:38.485573Z,2024-02-22T10:03:38.972924Z,2024-02-22T10:03:38.307573Z,2024-02-22T10:03:38.336571Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
549537c8-f3fb-42de-93cf-ae385d23931c.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,549537c8-f3fb-42de-93cf-ae385d23931c,2024-02-22 10:03:44,2024-02-22 10:03:44.911869,int_keep_models_relevant_package,CREATE VIEW,success,model,0.41100287437438965,2024-02-22T10:03:39.016927Z,2024-02-22T10:03:39.404930Z,2024-02-22T10:03:39.001926Z,2024-02-22T10:03:39.012925Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
549537c8-f3fb-42de-93cf-ae385d23931c.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,549537c8-f3fb-42de-93cf-ae385d23931c,2024-02-22 10:03:44,2024-02-22 10:03:44.911869,int_join_with_run_results,CREATE VIEW,success,model,0.3731231689453125,2024-02-22T10:03:39.645778Z,2024-02-22T10:03:39.842877Z,2024-02-22T10:03:39.546780Z,2024-02-22T10:03:39.616778Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
549537c8-f3fb-42de-93cf-ae385d23931c.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,549537c8-f3fb-42de-93cf-ae385d23931c,2024-02-22 10:03:44,2024-02-22 10:03:44.911869,fct_destination_nodes,SELECT 1,success,model,1.295093059539795,2024-02-22T10:03:39.628777Z,2024-02-22T10:03:40.722028Z,2024-02-22T10:03:39.529776Z,2024-02-22T10:03:39.554780Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM destination_models",,,Thread-8 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
549537c8-f3fb-42de-93cf-ae385d23931c.model.view_selection_tool.fct_model_dependencies,model.view_selection_tool.fct_model_dependencies,549537c8-f3fb-42de-93cf-ae385d23931c,2024-02-22 10:03:44,2024-02-22 10:03:44.911869,fct_model_dependencies,SELECT 11,success,model,1.324110746383667,2024-02-22T10:03:39.561777Z,2024-02-22T10:03:40.742031Z,2024-02-22T10:03:39.508777Z,2024-02-22T10:03:39.545777Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes,
        '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS compiled_code_reference

    FROM including_irrelevant_cols

)

    SELECT * FROM model_dependencies",,,Thread-5 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
549537c8-f3fb-42de-93cf-ae385d23931c.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,549537c8-f3fb-42de-93cf-ae385d23931c,2024-02-22 10:03:44,2024-02-22 10:03:44.911869,int_only_materialized_models,CREATE VIEW,success,model,1.5241422653198242,2024-02-22T10:03:39.952877Z,2024-02-22T10:03:41.427025Z,2024-02-22T10:03:39.924881Z,2024-02-22T10:03:39.936883Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
549537c8-f3fb-42de-93cf-ae385d23931c.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,549537c8-f3fb-42de-93cf-ae385d23931c,2024-02-22 10:03:44,2024-02-22 10:03:44.911869,fct_all_models_plus_code,SELECT 11,success,model,1.5471491813659668,2024-02-22T10:03:39.940876Z,2024-02-22T10:03:41.450027Z,2024-02-22T10:03:39.918877Z,2024-02-22T10:03:39.934878Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-1 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
549537c8-f3fb-42de-93cf-ae385d23931c.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,549537c8-f3fb-42de-93cf-ae385d23931c,2024-02-22 10:03:44,2024-02-22 10:03:44.911869,int_include_monitoring_id,CREATE VIEW,success,model,0.18599557876586914,2024-02-22T10:03:41.477024Z,2024-02-22T10:03:41.636025Z,2024-02-22T10:03:41.462023Z,2024-02-22T10:03:41.474027Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
549537c8-f3fb-42de-93cf-ae385d23931c.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,549537c8-f3fb-42de-93cf-ae385d23931c,2024-02-22 10:03:44,2024-02-22 10:03:44.911869,int_maintenance_fractions,CREATE VIEW,success,model,0.11197209358215332,2024-02-22T10:03:41.673997Z,2024-02-22T10:03:41.756994Z,2024-02-22T10:03:41.653030Z,2024-02-22T10:03:41.668997Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
549537c8-f3fb-42de-93cf-ae385d23931c.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,549537c8-f3fb-42de-93cf-ae385d23931c,2024-02-22 10:03:44,2024-02-22 10:03:44.911869,fct_avg_maintenance_fractions,SELECT 4,success,model,0.16298294067382812,2024-02-22T10:03:41.786995Z,2024-02-22T10:03:41.931281Z,2024-02-22T10:03:41.776994Z,2024-02-22T10:03:41.783998Z,4,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-8 (worker),table,"{""_message"": ""SELECT 4"", ""code"": ""SELECT"", ""rows_affected"": 4}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:56,2024-02-22 10:09:57.111426,stg_accounts,CREATE VIEW,success,model,0.7927877902984619,2024-02-22T10:09:39.004989Z,2024-02-22T10:09:39.626791Z,2024-02-22T10:09:38.905993Z,2024-02-22T10:09:38.988990Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 1000

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,stg_transactions_1,CREATE VIEW,success,model,0.8698015213012695,2024-02-22T10:09:39.062988Z,2024-02-22T10:09:39.696784Z,2024-02-22T10:09:38.917992Z,2024-02-22T10:09:38.991995Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 2500000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,stg_transactions_3,CREATE VIEW,success,model,0.8707973957061768,2024-02-22T10:09:39.077990Z,2024-02-22T10:09:39.700787Z,2024-02-22T10:09:38.928990Z,2024-02-22T10:09:38.994993Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 2500000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,stg_transactions_2,CREATE VIEW,success,model,0.8767910003662109,2024-02-22T10:09:39.069988Z,2024-02-22T10:09:39.703784Z,2024-02-22T10:09:38.923991Z,2024-02-22T10:09:38.992992Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 2500000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,stg_groups,CREATE VIEW,success,model,0.8847885131835938,2024-02-22T10:09:39.054987Z,2024-02-22T10:09:39.707785Z,2024-02-22T10:09:38.911995Z,2024-02-22T10:09:38.990986Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,stg_transactions_4,CREATE VIEW,success,model,0.8807933330535889,2024-02-22T10:09:39.084990Z,2024-02-22T10:09:39.712785Z,2024-02-22T10:09:38.938992Z,2024-02-22T10:09:38.995991Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 2500000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,data_monitoring_metrics,INSERT 0 0,success,model,2.2484095096588135,2024-02-22T10:09:39.093991Z,2024-02-22T10:09:41.083402Z,2024-02-22T10:09:38.943992Z,2024-02-22T10:09:38.998989Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.dbt_columns,model.elementary.dbt_columns,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,dbt_columns,INSERT 0 0,success,model,7.684172630310059,2024-02-22T10:09:39.154017Z,2024-02-22T10:09:46.541198Z,2024-02-22T10:09:38.967990Z,2024-02-22T10:09:38.999991Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.dbt_invocations,model.elementary.dbt_invocations,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,dbt_invocations,INSERT 0 0,success,model,5.843800783157349,2024-02-22T10:09:41.099395Z,2024-02-22T10:09:46.653199Z,2024-02-22T10:09:40.921399Z,2024-02-22T10:09:41.064396Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.dbt_run_results,model.elementary.dbt_run_results,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,dbt_run_results,INSERT 0 0,success,model,5.896796464920044,2024-02-22T10:09:41.223393Z,2024-02-22T10:09:46.660196Z,2024-02-22T10:09:41.011400Z,2024-02-22T10:09:41.087396Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.dbt_exposures,model.elementary.dbt_exposures,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,dbt_exposures,INSERT 0 0,success,model,8.578997135162354,2024-02-22T10:09:40.909400Z,2024-02-22T10:09:48.676813Z,2024-02-22T10:09:40.812432Z,2024-02-22T10:09:40.850402Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.dbt_seeds,model.elementary.dbt_seeds,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,dbt_seeds,INSERT 0 0,success,model,8.00340747833252,2024-02-22T10:09:41.439399Z,2024-02-22T10:09:48.850812Z,2024-02-22T10:09:41.042398Z,2024-02-22T10:09:41.090401Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.dbt_metrics,model.elementary.dbt_metrics,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,dbt_metrics,INSERT 0 0,success,model,8.035414934158325,2024-02-22T10:09:41.112432Z,2024-02-22T10:09:48.859812Z,2024-02-22T10:09:40.959429Z,2024-02-22T10:09:41.066400Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,dbt_snapshots,INSERT 0 0,success,model,5.053314447402954,2024-02-22T10:09:45.814191Z,2024-02-22T10:09:49.198815Z,2024-02-22T10:09:45.315525Z,2024-02-22T10:09:45.782196Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.dbt_models,model.elementary.dbt_models,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,dbt_models,INSERT 0 0,success,model,8.453407526016235,2024-02-22T10:09:41.126400Z,2024-02-22T10:09:49.211808Z,2024-02-22T10:09:40.984394Z,2024-02-22T10:09:41.067400Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,dbt_source_freshness_results,INSERT 0 0,success,model,3.092757225036621,2024-02-22T10:09:48.641843Z,2024-02-22T10:09:49.649943Z,2024-02-22T10:09:47.477258Z,2024-02-22T10:09:48.218896Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.metadata,model.elementary.metadata,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,metadata,SELECT 1,success,model,1.403458833694458,2024-02-22T10:09:49.221811Z,2024-02-22T10:09:50.381280Z,2024-02-22T10:09:49.054807Z,2024-02-22T10:09:49.185807Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-6 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.elementary_test_results,model.elementary.elementary_test_results,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,elementary_test_results,INSERT 0 0,success,model,1.564469814300537,2024-02-22T10:09:49.010816Z,2024-02-22T10:09:50.410285Z,2024-02-22T10:09:48.908807Z,2024-02-22T10:09:48.981810Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,int_accounts_and_groups_joined,CREATE VIEW,success,model,1.096358060836792,2024-02-22T10:09:49.471941Z,2024-02-22T10:09:50.430274Z,2024-02-22T10:09:49.393756Z,2024-02-22T10:09:49.433131Z,-1,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
    ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,schema_columns_snapshot,INSERT 0 0,success,model,1.490835428237915,2024-02-22T10:09:49.263806Z,2024-02-22T10:09:50.483655Z,2024-02-22T10:09:49.063817Z,2024-02-22T10:09:49.192816Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.dbt_tests,model.elementary.dbt_tests,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,dbt_tests,INSERT 0 0,success,model,1.9058434963226318,2024-02-22T10:09:48.834806Z,2024-02-22T10:09:50.530650Z,2024-02-22T10:09:48.725812Z,2024-02-22T10:09:48.786814Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.dbt_sources,model.elementary.dbt_sources,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,dbt_sources,INSERT 0 0,success,model,2.225811243057251,2024-02-22T10:09:48.820812Z,2024-02-22T10:09:50.720650Z,2024-02-22T10:09:48.692808Z,2024-02-22T10:09:48.783808Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,metrics_anomaly_score,CREATE VIEW,success,model,1.1827101707458496,2024-02-22T10:09:50.361273Z,2024-02-22T10:09:51.026649Z,2024-02-22T10:09:49.905968Z,2024-02-22T10:09:49.999972Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.monitors_runs,model.elementary.monitors_runs,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,monitors_runs,CREATE VIEW,success,model,0.7439930438995361,2024-02-22T10:09:50.609882Z,2024-02-22T10:09:51.225651Z,2024-02-22T10:09:50.536652Z,2024-02-22T10:09:50.555653Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.job_run_results,model.elementary.job_run_results,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,job_run_results,CREATE VIEW,success,model,0.7820665836334229,2024-02-22T10:09:50.648655Z,2024-02-22T10:09:51.297724Z,2024-02-22T10:09:50.570651Z,2024-02-22T10:09:50.608653Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,snapshot_run_results,CREATE VIEW,success,model,0.7730758190155029,2024-02-22T10:09:50.668650Z,2024-02-22T10:09:51.301720Z,2024-02-22T10:09:50.593652Z,2024-02-22T10:09:50.628651Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.model_run_results,model.elementary.model_run_results,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,model_run_results,CREATE VIEW,success,model,0.7080729007720947,2024-02-22T10:09:50.850652Z,2024-02-22T10:09:51.328722Z,2024-02-22T10:09:50.683651Z,2024-02-22T10:09:50.703648Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,alerts_anomaly_detection,CREATE VIEW,success,model,0.6460733413696289,2024-02-22T10:09:50.904649Z,2024-02-22T10:09:51.334725Z,2024-02-22T10:09:50.723648Z,2024-02-22T10:09:50.875663Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,int_union_of_transactions,CREATE VIEW,success,model,2.1909635066986084,2024-02-22T10:09:49.516944Z,2024-02-22T10:09:51.578718Z,2024-02-22T10:09:49.438133Z,2024-02-22T10:09:49.461332Z,-1,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,alerts_dbt_models,CREATE VIEW,success,model,0.8700182437896729,2024-02-22T10:09:53.688784Z,2024-02-22T10:09:54.277224Z,2024-02-22T10:09:53.556782Z,2024-02-22T10:09:53.617779Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,alerts_dbt_tests,CREATE VIEW,success,model,0.9520041942596436,2024-02-22T10:09:53.578782Z,2024-02-22T10:09:54.281225Z,2024-02-22T10:09:53.389215Z,2024-02-22T10:09:53.441213Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,anomaly_threshold_sensitivity,CREATE VIEW,success,model,0.9020071029663086,2024-02-22T10:09:53.673781Z,2024-02-22T10:09:54.284225Z,2024-02-22T10:09:53.541783Z,2024-02-22T10:09:53.597785Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c5fda22c-d793-4ac6-831d-2256da2d0c7e.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,c5fda22c-d793-4ac6-831d-2256da2d0c7e,2024-02-22 10:10:38,2024-02-22 10:10:38.140234,int_keep_models_relevant_package,CREATE VIEW,success,model,0.1060030460357666,2024-02-22T10:10:35.022033Z,2024-02-22T10:10:35.109019Z,2024-02-22T10:10:35.010021Z,2024-02-22T10:10:35.019031Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,alerts_dbt_source_freshness,CREATE VIEW,success,model,0.9450173377990723,2024-02-22T10:09:53.644781Z,2024-02-22T10:09:54.294226Z,2024-02-22T10:09:53.472215Z,2024-02-22T10:09:53.592780Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,alerts_schema_changes,CREATE VIEW,success,model,0.9690136909484863,2024-02-22T10:09:53.598782Z,2024-02-22T10:09:54.299232Z,2024-02-22T10:09:53.417216Z,2024-02-22T10:09:53.471217Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,dbt_artifacts_hashes,CREATE VIEW,success,model,0.9410126209259033,2024-02-22T10:09:53.657780Z,2024-02-22T10:09:54.310227Z,2024-02-22T10:09:53.486212Z,2024-02-22T10:09:53.593781Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.information_schema_columns,model.elementary.information_schema_columns,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,information_schema_columns,CREATE VIEW,success,model,1.0030088424682617,2024-02-22T10:09:53.810479Z,2024-02-22T10:09:54.390227Z,2024-02-22T10:09:53.506768Z,2024-02-22T10:09:53.784779Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.test_result_rows,model.elementary.test_result_rows,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,test_result_rows,INSERT 0 0,success,model,1.0700187683105469,2024-02-22T10:09:53.623782Z,2024-02-22T10:09:54.440231Z,2024-02-22T10:09:53.444217Z,2024-02-22T10:09:53.569783Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
c5fda22c-d793-4ac6-831d-2256da2d0c7e.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,c5fda22c-d793-4ac6-831d-2256da2d0c7e,2024-02-22 10:10:38,2024-02-22 10:10:38.140234,int_join_with_run_results,CREATE VIEW,success,model,0.23900794982910156,2024-02-22T10:10:35.215018Z,2024-02-22T10:10:35.358021Z,2024-02-22T10:10:35.152021Z,2024-02-22T10:10:35.200020Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.elementary.enriched_columns,model.elementary.enriched_columns,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,enriched_columns,CREATE VIEW,success,model,0.24117422103881836,2024-02-22T10:09:54.603406Z,2024-02-22T10:09:54.691405Z,2024-02-22T10:09:54.468532Z,2024-02-22T10:09:54.598411Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,int_transactions_and_accounts_and_groups_joined,SELECT 0,success,model,1.1897001266479492,2024-02-22T10:09:54.422229Z,2024-02-22T10:09:55.567955Z,2024-02-22T10:09:54.392232Z,2024-02-22T10:09:54.411228Z,0,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
    ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-4 (worker),table,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,int_grouped_on_group_id,CREATE VIEW,success,model,0.08400344848632812,2024-02-22T10:09:55.596928Z,2024-02-22T10:09:55.664926Z,2024-02-22T10:09:55.585936Z,2024-02-22T10:09:55.592963Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        SUM(amount) AS total_amount,
        'fixed_value' AS account_description

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
3e394b54-0c24-4149-b64e-16686b1cb404.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,3e394b54-0c24-4149-b64e-16686b1cb404,2024-02-22 10:09:57,2024-02-22 10:09:57.111426,grouped_transactions_unioned_with_original,SELECT 0,success,model,0.11400365829467773,2024-02-22T10:09:55.686926Z,2024-02-22T10:09:55.786960Z,2024-02-22T10:09:55.678926Z,2024-02-22T10:09:55.684931Z,0,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-7 (worker),table,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
c5fda22c-d793-4ac6-831d-2256da2d0c7e.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,c5fda22c-d793-4ac6-831d-2256da2d0c7e,2024-02-22 10:10:38,2024-02-22 10:10:38.140234,stg_dbt_invocations,CREATE VIEW,success,model,0.34200310707092285,2024-02-22T10:10:34.707017Z,2024-02-22T10:10:34.953021Z,2024-02-22T10:10:34.636053Z,2024-02-22T10:10:34.656021Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c5fda22c-d793-4ac6-831d-2256da2d0c7e.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,c5fda22c-d793-4ac6-831d-2256da2d0c7e,2024-02-22 10:10:38,2024-02-22 10:10:38.140234,stg_dbt_models,CREATE VIEW,success,model,0.35799574851989746,2024-02-22T10:10:34.717065Z,2024-02-22T10:10:34.963018Z,2024-02-22T10:10:34.642033Z,2024-02-22T10:10:34.657020Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c5fda22c-d793-4ac6-831d-2256da2d0c7e.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,c5fda22c-d793-4ac6-831d-2256da2d0c7e,2024-02-22 10:10:38,2024-02-22 10:10:38.140234,stg_dbt_run_results,CREATE VIEW,success,model,0.36197853088378906,2024-02-22T10:10:34.725019Z,2024-02-22T10:10:34.969021Z,2024-02-22T10:10:34.648018Z,2024-02-22T10:10:34.659020Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c5fda22c-d793-4ac6-831d-2256da2d0c7e.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,c5fda22c-d793-4ac6-831d-2256da2d0c7e,2024-02-22 10:10:38,2024-02-22 10:10:38.140234,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.3749876022338867,2024-02-22T10:10:34.662021Z,2024-02-22T10:10:34.974020Z,2024-02-22T10:10:34.629018Z,2024-02-22T10:10:34.654019Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.metadata,model.elementary.metadata,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,metadata,SELECT 1,success,model,1.2440812587738037,2024-02-22T10:19:25.071175Z,2024-02-22T10:19:26.072262Z,2024-02-22T10:19:24.903178Z,2024-02-22T10:19:24.939176Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-6 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
c5fda22c-d793-4ac6-831d-2256da2d0c7e.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,c5fda22c-d793-4ac6-831d-2256da2d0c7e,2024-02-22 10:10:38,2024-02-22 10:10:38.140234,fct_destination_nodes,SELECT 1,success,model,0.35912108421325684,2024-02-22T10:10:35.164023Z,2024-02-22T10:10:35.469138Z,2024-02-22T10:10:35.134022Z,2024-02-22T10:10:35.160020Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM destination_models",,,Thread-8 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
c5fda22c-d793-4ac6-831d-2256da2d0c7e.model.view_selection_tool.fct_model_dependencies,model.view_selection_tool.fct_model_dependencies,c5fda22c-d793-4ac6-831d-2256da2d0c7e,2024-02-22 10:10:38,2024-02-22 10:10:38.140234,fct_model_dependencies,SELECT 11,success,model,0.37011241912841797,2024-02-22T10:10:35.208027Z,2024-02-22T10:10:35.476139Z,2024-02-22T10:10:35.142019Z,2024-02-22T10:10:35.162020Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes,
        '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS compiled_code_reference

    FROM including_irrelevant_cols

)

    SELECT * FROM model_dependencies",,,Thread-5 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
c5fda22c-d793-4ac6-831d-2256da2d0c7e.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,c5fda22c-d793-4ac6-831d-2256da2d0c7e,2024-02-22 10:10:38,2024-02-22 10:10:38.140234,int_only_materialized_models,CREATE VIEW,success,model,0.2201235294342041,2024-02-22T10:10:35.499140Z,2024-02-22T10:10:35.636136Z,2024-02-22T10:10:35.441017Z,2024-02-22T10:10:35.478140Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c5fda22c-d793-4ac6-831d-2256da2d0c7e.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,c5fda22c-d793-4ac6-831d-2256da2d0c7e,2024-02-22 10:10:38,2024-02-22 10:10:38.140234,fct_all_models_plus_code,SELECT 11,success,model,0.2781178951263428,2024-02-22T10:10:35.487139Z,2024-02-22T10:10:35.683137Z,2024-02-22T10:10:35.430022Z,2024-02-22T10:10:35.471141Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-7 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
c5fda22c-d793-4ac6-831d-2256da2d0c7e.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,c5fda22c-d793-4ac6-831d-2256da2d0c7e,2024-02-22 10:10:38,2024-02-22 10:10:38.140234,int_include_monitoring_id,CREATE VIEW,success,model,0.11399340629577637,2024-02-22T10:10:35.684137Z,2024-02-22T10:10:35.769133Z,2024-02-22T10:10:35.660140Z,2024-02-22T10:10:35.675137Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c5fda22c-d793-4ac6-831d-2256da2d0c7e.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,c5fda22c-d793-4ac6-831d-2256da2d0c7e,2024-02-22 10:10:38,2024-02-22 10:10:38.140234,int_maintenance_fractions,CREATE VIEW,success,model,0.09400653839111328,2024-02-22T10:10:35.792135Z,2024-02-22T10:10:35.868141Z,2024-02-22T10:10:35.780137Z,2024-02-22T10:10:35.790136Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c5fda22c-d793-4ac6-831d-2256da2d0c7e.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,c5fda22c-d793-4ac6-831d-2256da2d0c7e,2024-02-22 10:10:38,2024-02-22 10:10:38.140234,fct_avg_maintenance_fractions,SELECT 4,success,model,0.13299918174743652,2024-02-22T10:10:35.896138Z,2024-02-22T10:10:36.011137Z,2024-02-22T10:10:35.884144Z,2024-02-22T10:10:35.893136Z,4,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-8 (worker),table,"{""_message"": ""SELECT 4"", ""code"": ""SELECT"", ""rows_affected"": 4}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,stg_accounts,CREATE VIEW,success,model,0.6911163330078125,2024-02-22T10:19:15.406771Z,2024-02-22T10:19:15.951898Z,2024-02-22T10:19:15.312767Z,2024-02-22T10:19:15.387768Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 1000

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,stg_groups,CREATE VIEW,success,model,0.7691130638122559,2024-02-22T10:19:15.463879Z,2024-02-22T10:19:16.013880Z,2024-02-22T10:19:15.318768Z,2024-02-22T10:19:15.388769Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,stg_transactions_2,CREATE VIEW,success,model,0.7701098918914795,2024-02-22T10:19:15.478880Z,2024-02-22T10:19:16.041880Z,2024-02-22T10:19:15.328767Z,2024-02-22T10:19:15.390769Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 2500000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,stg_transactions_3,CREATE VIEW,success,model,0.7711086273193359,2024-02-22T10:19:15.486886Z,2024-02-22T10:19:16.044884Z,2024-02-22T10:19:15.333766Z,2024-02-22T10:19:15.392804Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 2500000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,stg_transactions_1,CREATE VIEW,success,model,0.7771196365356445,2024-02-22T10:19:15.471880Z,2024-02-22T10:19:16.046882Z,2024-02-22T10:19:15.323767Z,2024-02-22T10:19:15.389770Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 2500000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,stg_transactions_4,CREATE VIEW,success,model,0.7791080474853516,2024-02-22T10:19:15.493887Z,2024-02-22T10:19:16.054881Z,2024-02-22T10:19:15.340766Z,2024-02-22T10:19:15.394768Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 2500000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,data_monitoring_metrics,INSERT 0 0,success,model,2.155527114868164,2024-02-22T10:19:15.501888Z,2024-02-22T10:19:17.410289Z,2024-02-22T10:19:15.345769Z,2024-02-22T10:19:15.395770Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.dbt_columns,model.elementary.dbt_columns,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,dbt_columns,INSERT 0 0,success,model,7.258343696594238,2024-02-22T10:19:15.556881Z,2024-02-22T10:19:22.533115Z,2024-02-22T10:19:15.366767Z,2024-02-22T10:19:15.397768Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.dbt_run_results,model.elementary.dbt_run_results,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,dbt_run_results,INSERT 0 0,success,model,5.5859081745147705,2024-02-22T10:19:17.411288Z,2024-02-22T10:19:22.628414Z,2024-02-22T10:19:17.258294Z,2024-02-22T10:19:17.319295Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.dbt_invocations,model.elementary.dbt_invocations,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,dbt_invocations,INSERT 0 0,success,model,6.227347373962402,2024-02-22T10:19:17.357289Z,2024-02-22T10:19:22.640222Z,2024-02-22T10:19:17.139313Z,2024-02-22T10:19:17.308290Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.dbt_exposures,model.elementary.dbt_exposures,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,dbt_exposures,INSERT 0 0,success,model,8.579294443130493,2024-02-22T10:19:17.174289Z,2024-02-22T10:19:24.584212Z,2024-02-22T10:19:16.139887Z,2024-02-22T10:19:16.867290Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.dbt_seeds,model.elementary.dbt_seeds,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,dbt_seeds,INSERT 0 0,success,model,7.668917894363403,2024-02-22T10:19:17.433291Z,2024-02-22T10:19:24.731204Z,2024-02-22T10:19:17.286291Z,2024-02-22T10:19:17.324290Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.dbt_metrics,model.elementary.dbt_metrics,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,dbt_metrics,INSERT 0 0,success,model,7.78791880607605,2024-02-22T10:19:17.370292Z,2024-02-22T10:19:24.735177Z,2024-02-22T10:19:17.186291Z,2024-02-22T10:19:17.315290Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.dbt_models,model.elementary.dbt_models,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,dbt_models,INSERT 0 0,success,model,8.090917825698853,2024-02-22T10:19:17.383293Z,2024-02-22T10:19:25.131181Z,2024-02-22T10:19:17.212294Z,2024-02-22T10:19:17.316293Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,dbt_snapshots,INSERT 0 0,success,model,5.969300270080566,2024-02-22T10:19:21.854127Z,2024-02-22T10:19:25.194179Z,2024-02-22T10:19:20.600741Z,2024-02-22T10:19:21.364899Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,dbt_source_freshness_results,INSERT 0 0,success,model,2.6669442653656006,2024-02-22T10:19:24.566176Z,2024-02-22T10:19:25.503258Z,2024-02-22T10:19:24.091956Z,2024-02-22T10:19:24.527178Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.elementary_test_results,model.elementary.elementary_test_results,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,elementary_test_results,INSERT 0 0,success,model,1.4010837078094482,2024-02-22T10:19:24.879176Z,2024-02-22T10:19:26.141264Z,2024-02-22T10:19:24.787185Z,2024-02-22T10:19:24.847175Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,int_accounts_and_groups_joined,CREATE VIEW,success,model,0.9810807704925537,2024-02-22T10:19:25.350176Z,2024-02-22T10:19:26.196259Z,2024-02-22T10:19:25.306175Z,2024-02-22T10:19:25.324177Z,-1,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
    ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.dbt_tests,model.elementary.dbt_tests,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,dbt_tests,INSERT 0 0,success,model,1.6810784339904785,2024-02-22T10:19:24.712180Z,2024-02-22T10:19:26.209257Z,2024-02-22T10:19:24.633210Z,2024-02-22T10:19:24.678191Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,schema_columns_snapshot,INSERT 0 0,success,model,1.3950817584991455,2024-02-22T10:19:25.098176Z,2024-02-22T10:19:26.235260Z,2024-02-22T10:19:24.911178Z,2024-02-22T10:19:24.942179Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.dbt_sources,model.elementary.dbt_sources,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,dbt_sources,INSERT 0 0,success,model,1.890082836151123,2024-02-22T10:19:24.694176Z,2024-02-22T10:19:26.369260Z,2024-02-22T10:19:24.595176Z,2024-02-22T10:19:24.667178Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,metrics_anomaly_score,CREATE VIEW,success,model,0.7845203876495361,2024-02-22T10:19:26.092263Z,2024-02-22T10:19:26.750779Z,2024-02-22T10:19:26.031258Z,2024-02-22T10:19:26.062262Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.monitors_runs,model.elementary.monitors_runs,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,monitors_runs,CREATE VIEW,success,model,0.7135233879089355,2024-02-22T10:19:26.269259Z,2024-02-22T10:19:26.888779Z,2024-02-22T10:19:26.222260Z,2024-02-22T10:19:26.247258Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa,2024-02-22 10:20:20,2024-02-22 10:20:20.353288,stg_dbt_run_results,CREATE VIEW,success,model,0.37700700759887695,2024-02-22T10:20:16.554545Z,2024-02-22T10:20:16.816549Z,2024-02-22T10:20:16.477546Z,2024-02-22T10:20:16.487548Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.job_run_results,model.elementary.job_run_results,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,job_run_results,CREATE VIEW,success,model,0.6825218200683594,2024-02-22T10:19:26.375264Z,2024-02-22T10:19:26.922782Z,2024-02-22T10:19:26.300280Z,2024-02-22T10:19:26.336257Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.model_run_results,model.elementary.model_run_results,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,model_run_results,CREATE VIEW,success,model,0.6635236740112305,2024-02-22T10:19:26.489261Z,2024-02-22T10:19:26.993779Z,2024-02-22T10:19:26.401258Z,2024-02-22T10:19:26.442509Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,alerts_anomaly_detection,CREATE VIEW,success,model,0.5935220718383789,2024-02-22T10:19:26.555260Z,2024-02-22T10:19:26.999779Z,2024-02-22T10:19:26.457266Z,2024-02-22T10:19:26.508259Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,snapshot_run_results,CREATE VIEW,success,model,0.6665196418762207,2024-02-22T10:19:26.510260Z,2024-02-22T10:19:27.002777Z,2024-02-22T10:19:26.421260Z,2024-02-22T10:19:26.446263Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.test_result_rows,model.elementary.test_result_rows,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,test_result_rows,INSERT 0 0,success,model,1.1104774475097656,2024-02-22T10:19:29.073422Z,2024-02-22T10:19:29.907701Z,2024-02-22T10:19:28.902364Z,2024-02-22T10:19:29.029888Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,grouped_transactions_unioned_with_original,SELECT 0,success,model,2.4942309856414795,2024-02-22T10:19:54.154003Z,2024-02-22T10:19:56.634237Z,2024-02-22T10:19:54.145006Z,2024-02-22T10:19:54.151006Z,0,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-1 (worker),table,"{""_message"": ""SELECT 0"", ""code"": ""SELECT"", ""rows_affected"": 0}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,anomaly_threshold_sensitivity,CREATE VIEW,success,model,1.0788803100585938,2024-02-22T10:19:29.133423Z,2024-02-22T10:19:29.914700Z,2024-02-22T10:19:29.008888Z,2024-02-22T10:19:29.054895Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,alerts_schema_changes,CREATE VIEW,success,model,1.1354706287384033,2024-02-22T10:19:29.055889Z,2024-02-22T10:19:29.921230Z,2024-02-22T10:19:28.876381Z,2024-02-22T10:19:28.952366Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.information_schema_columns,model.elementary.information_schema_columns,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,information_schema_columns,CREATE VIEW,success,model,1.0888640880584717,2024-02-22T10:19:29.247419Z,2024-02-22T10:19:29.925228Z,2024-02-22T10:19:28.968363Z,2024-02-22T10:19:29.222420Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,alerts_dbt_tests,CREATE VIEW,success,model,1.151275634765625,2024-02-22T10:19:29.037889Z,2024-02-22T10:19:29.929229Z,2024-02-22T10:19:28.843374Z,2024-02-22T10:19:28.900366Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,dbt_artifacts_hashes,CREATE VIEW,success,model,1.0976734161376953,2024-02-22T10:19:29.111419Z,2024-02-22T10:19:29.934228Z,2024-02-22T10:19:28.954371Z,2024-02-22T10:19:29.046887Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa,2024-02-22 10:20:20,2024-02-22 10:20:20.353288,stg_dbt_invocations,CREATE VIEW,success,model,0.36096739768981934,2024-02-22T10:20:16.535548Z,2024-02-22T10:20:16.804549Z,2024-02-22T10:20:16.466582Z,2024-02-22T10:20:16.484549Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,alerts_dbt_source_freshness,CREATE VIEW,success,model,1.1292879581451416,2024-02-22T10:19:29.095420Z,2024-02-22T10:19:29.938238Z,2024-02-22T10:19:28.934363Z,2024-02-22T10:19:29.033888Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.enriched_columns,model.elementary.enriched_columns,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,enriched_columns,CREATE VIEW,success,model,0.19398951530456543,2024-02-22T10:19:30.081041Z,2024-02-22T10:19:30.203045Z,2024-02-22T10:19:30.042042Z,2024-02-22T10:19:30.061042Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,alerts_dbt_models,CREATE VIEW,success,model,0.40756893157958984,2024-02-22T10:19:30.062045Z,2024-02-22T10:19:30.410614Z,2024-02-22T10:19:30.015050Z,2024-02-22T10:19:30.057041Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,int_union_of_transactions,SELECT 10000000,success,model,28.501238584518433,2024-02-22T10:19:25.504255Z,2024-02-22T10:19:53.826416Z,2024-02-22T10:19:25.380175Z,2024-02-22T10:19:25.453177Z,10000000,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-7 (worker),table,"{""_message"": ""SELECT 10000000"", ""code"": ""SELECT"", ""rows_affected"": 10000000}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,int_transactions_and_accounts_and_groups_joined,CREATE VIEW,success,model,0.19758391380310059,2024-02-22T10:19:53.942425Z,2024-02-22T10:19:54.034005Z,2024-02-22T10:19:53.843416Z,2024-02-22T10:19:53.940418Z,-1,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
    ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
69b14478-cafd-4cca-9779-92988ae24f5d.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,69b14478-cafd-4cca-9779-92988ae24f5d,2024-02-22 10:19:57,2024-02-22 10:19:57.980605,int_grouped_on_group_id,CREATE VIEW,success,model,0.08900308609008789,2024-02-22T10:19:54.060000Z,2024-02-22T10:19:54.131005Z,2024-02-22T10:19:54.048005Z,2024-02-22T10:19:54.057001Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        SUM(amount) AS total_amount,
        'fixed_value' AS account_description

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
0489b689-9288-46a4-a32c-73a62a795040.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,0489b689-9288-46a4-a32c-73a62a795040,2024-03-06 12:30:58,2024-03-06 12:30:59.143531,int_join_with_run_results,,skipped,model,0,,,,,,false,,,,Thread-8 (worker),view,{}
c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa,2024-02-22 10:20:20,2024-02-22 10:20:20.353288,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.3919970989227295,2024-02-22T10:20:16.489548Z,2024-02-22T10:20:16.826548Z,2024-02-22T10:20:16.460549Z,2024-02-22T10:20:16.482550Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa,2024-02-22 10:20:20,2024-02-22 10:20:20.353288,stg_dbt_models,CREATE VIEW,success,model,0.3869760036468506,2024-02-22T10:20:16.544575Z,2024-02-22T10:20:16.829546Z,2024-02-22T10:20:16.472545Z,2024-02-22T10:20:16.486548Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa,2024-02-22 10:20:20,2024-02-22 10:20:20.353288,int_keep_models_relevant_package,CREATE VIEW,success,model,0.08600425720214844,2024-02-22T10:20:16.865546Z,2024-02-22T10:20:16.938547Z,2024-02-22T10:20:16.857547Z,2024-02-22T10:20:16.863546Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa,2024-02-22 10:20:20,2024-02-22 10:20:20.353288,int_join_with_run_results,CREATE VIEW,success,model,0.2610013484954834,2024-02-22T10:20:17.035546Z,2024-02-22T10:20:17.210547Z,2024-02-22T10:20:16.975550Z,2024-02-22T10:20:16.985547Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa.model.view_selection_tool.fct_destination_nodes,model.view_selection_tool.fct_destination_nodes,c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa,2024-02-22 10:20:20,2024-02-22 10:20:20.353288,fct_destination_nodes,SELECT 1,success,model,0.3399960994720459,2024-02-22T10:20:16.988546Z,2024-02-22T10:20:17.279548Z,2024-02-22T10:20:16.961546Z,2024-02-22T10:20:16.982546Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM destination_models",,,Thread-8 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa.model.view_selection_tool.fct_model_dependencies,model.view_selection_tool.fct_model_dependencies,c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa,2024-02-22 10:20:20,2024-02-22 10:20:20.353288,fct_model_dependencies,SELECT 11,success,model,0.3560042381286621,2024-02-22T10:20:17.027546Z,2024-02-22T10:20:17.289546Z,2024-02-22T10:20:16.967549Z,2024-02-22T10:20:16.983548Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes,
        '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS compiled_code_reference

    FROM including_irrelevant_cols

)

    SELECT * FROM model_dependencies",,,Thread-5 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa,2024-02-22 10:20:20,2024-02-22 10:20:20.353288,int_only_materialized_models,CREATE VIEW,success,model,0.1479949951171875,2024-02-22T10:20:17.329551Z,2024-02-22T10:20:17.426548Z,2024-02-22T10:20:17.304575Z,2024-02-22T10:20:17.316550Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa.model.view_selection_tool.fct_all_models_plus_code,model.view_selection_tool.fct_all_models_plus_code,c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa,2024-02-22 10:20:20,2024-02-22 10:20:20.353288,fct_all_models_plus_code,SELECT 11,success,model,0.20000553131103516,2024-02-22T10:20:17.323577Z,2024-02-22T10:20:17.476549Z,2024-02-22T10:20:17.296548Z,2024-02-22T10:20:17.313549Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-1 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa,2024-02-22 10:20:20,2024-02-22 10:20:20.353288,int_include_monitoring_id,CREATE VIEW,success,model,0.11577868461608887,2024-02-22T10:20:17.466548Z,2024-02-22T10:20:17.560366Z,2024-02-22T10:20:17.450550Z,2024-02-22T10:20:17.462547Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa,2024-02-22 10:20:20,2024-02-22 10:20:20.353288,int_maintenance_fractions,CREATE VIEW,success,model,0.08400106430053711,2024-02-22T10:20:17.582333Z,2024-02-22T10:20:17.652329Z,2024-02-22T10:20:17.574330Z,2024-02-22T10:20:17.580331Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa.model.view_selection_tool.fct_avg_maintenance_fractions,model.view_selection_tool.fct_avg_maintenance_fractions,c7cdd9a6-a4ac-40b1-92fd-bf4ab1f936fa,2024-02-22 10:20:20,2024-02-22 10:20:20.353288,fct_avg_maintenance_fractions,SELECT 4,success,model,0.13500332832336426,2024-02-22T10:20:17.683329Z,2024-02-22T10:20:17.798327Z,2024-02-22T10:20:17.670345Z,2024-02-22T10:20:17.680331Z,4,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-8 (worker),table,"{""_message"": ""SELECT 4"", ""code"": ""SELECT"", ""rows_affected"": 4}"
0489b689-9288-46a4-a32c-73a62a795040.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,0489b689-9288-46a4-a32c-73a62a795040,2024-03-06 12:30:58,2024-03-06 12:30:59.143531,stg_data_monitoring_metrics,"Database Error in model stg_data_monitoring_metrics (models\staging\stg_data_monitoring_metrics.sql)
  relation ""elementary_src.data_monitoring_metrics"" does not exist
  LINE 11:     SELECT * FROM ""postgres"".""elementary_src"".""data_monitori...
                             ^
  compiled Code at target\run\view_selection_tool\models\staging\stg_data_monitoring_metrics.sql",error,model,0.29898929595947266,2024-03-06T12:30:55.335003Z,2024-03-06T12:30:55.471013Z,2024-03-06T12:30:55.303999Z,2024-03-06T12:30:55.328002Z,,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""elementary_src"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,{}
0489b689-9288-46a4-a32c-73a62a795040.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,0489b689-9288-46a4-a32c-73a62a795040,2024-03-06 12:30:58,2024-03-06 12:30:59.143531,stg_dbt_models,"Database Error in model stg_dbt_models (models\staging\stg_dbt_models.sql)
  relation ""elementary_src.dbt_models"" does not exist
  LINE 11:     SELECT * FROM ""postgres"".""elementary_src"".""dbt_models""
                             ^
  compiled Code at target\run\view_selection_tool\models\staging\stg_dbt_models.sql",error,model,0.2969942092895508,2024-03-06T12:30:55.395000Z,2024-03-06T12:30:55.475000Z,2024-03-06T12:30:55.316000Z,2024-03-06T12:30:55.332002Z,,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""elementary_src"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,{}
0489b689-9288-46a4-a32c-73a62a795040.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,0489b689-9288-46a4-a32c-73a62a795040,2024-03-06 12:30:58,2024-03-06 12:30:59.143531,stg_dbt_run_results,"Database Error in model stg_dbt_run_results (models\staging\stg_dbt_run_results.sql)
  relation ""elementary_src.dbt_run_results"" does not exist
  LINE 11:     SELECT * FROM ""postgres"".""elementary_src"".""dbt_run_resul...
                             ^
  compiled Code at target\run\view_selection_tool\models\staging\stg_dbt_run_results.sql",error,model,0.29599952697753906,2024-03-06T12:30:55.403027Z,2024-03-06T12:30:55.487999Z,2024-03-06T12:30:55.321999Z,2024-03-06T12:30:55.333003Z,,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""elementary_src"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,{}
0489b689-9288-46a4-a32c-73a62a795040.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,0489b689-9288-46a4-a32c-73a62a795040,2024-03-06 12:30:58,2024-03-06 12:30:59.143531,stg_dbt_invocations,"Database Error in model stg_dbt_invocations (models\staging\stg_dbt_invocations.sql)
  relation ""elementary_src.dbt_invocations"" does not exist
  LINE 11:     SELECT * FROM ""postgres"".""elementary_src"".""dbt_invocatio...
                             ^
  compiled Code at target\run\view_selection_tool\models\staging\stg_dbt_invocations.sql",error,model,0.3020048141479492,2024-03-06T12:30:55.384998Z,2024-03-06T12:30:55.476001Z,2024-03-06T12:30:55.310002Z,2024-03-06T12:30:55.330039Z,,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""elementary_src"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,{}
0489b689-9288-46a4-a32c-73a62a795040.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,0489b689-9288-46a4-a32c-73a62a795040,2024-03-06 12:30:58,2024-03-06 12:30:59.143531,int_keep_models_relevant_package,,skipped,model,0,,,,,,false,,,,Thread-6 (worker),view,{}
aa557563-2e41-494a-96ca-717b7494ead2.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,aa557563-2e41-494a-96ca-717b7494ead2,2024-03-06 12:31:51,2024-03-06 12:31:51.892952,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.5995681285858154,2024-03-06T12:31:46.901780Z,2024-03-06T12:31:47.451346Z,2024-03-06T12:31:46.870780Z,2024-03-06T12:31:46.892780Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
aa557563-2e41-494a-96ca-717b7494ead2.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,aa557563-2e41-494a-96ca-717b7494ead2,2024-03-06 12:31:51,2024-03-06 12:31:51.892952,stg_dbt_invocations,CREATE VIEW,success,model,0.6105618476867676,2024-03-06T12:31:46.947778Z,2024-03-06T12:31:47.455349Z,2024-03-06T12:31:46.875782Z,2024-03-06T12:31:46.893783Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
aa557563-2e41-494a-96ca-717b7494ead2.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,aa557563-2e41-494a-96ca-717b7494ead2,2024-03-06 12:31:51,2024-03-06 12:31:51.892952,stg_dbt_models,CREATE VIEW,success,model,0.6165711879730225,2024-03-06T12:31:46.956779Z,2024-03-06T12:31:47.464347Z,2024-03-06T12:31:46.880785Z,2024-03-06T12:31:46.895780Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
aa557563-2e41-494a-96ca-717b7494ead2.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,aa557563-2e41-494a-96ca-717b7494ead2,2024-03-06 12:31:51,2024-03-06 12:31:51.892952,stg_dbt_run_results,CREATE VIEW,success,model,0.6185727119445801,2024-03-06T12:31:46.963779Z,2024-03-06T12:31:47.468348Z,2024-03-06T12:31:46.886778Z,2024-03-06T12:31:46.897783Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
aa557563-2e41-494a-96ca-717b7494ead2.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,aa557563-2e41-494a-96ca-717b7494ead2,2024-03-06 12:31:51,2024-03-06 12:31:51.892952,int_keep_models_relevant_package,CREATE VIEW,success,model,0.0946035385131836,2024-03-06T12:31:47.508347Z,2024-03-06T12:31:47.588399Z,2024-03-06T12:31:47.498346Z,2024-03-06T12:31:47.506345Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
aa557563-2e41-494a-96ca-717b7494ead2.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,aa557563-2e41-494a-96ca-717b7494ead2,2024-03-06 12:31:51,2024-03-06 12:31:51.892952,int_join_with_run_results,CREATE VIEW,success,model,0.21599793434143066,2024-03-06T12:31:47.634949Z,2024-03-06T12:31:47.802980Z,2024-03-06T12:31:47.610947Z,2024-03-06T12:31:47.630946Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
aa557563-2e41-494a-96ca-717b7494ead2.model.view_selection_tool.int_referenced_models,model.view_selection_tool.int_referenced_models,aa557563-2e41-494a-96ca-717b7494ead2,2024-03-06 12:31:51,2024-03-06 12:31:51.892952,int_referenced_models,CREATE VIEW,success,model,0.26300048828125,2024-03-06T12:31:47.648950Z,2024-03-06T12:31:47.837980Z,2024-03-06T12:31:47.616981Z,2024-03-06T12:31:47.632949Z,-1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

)

    SELECT * FROM referenced_models",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
aa557563-2e41-494a-96ca-717b7494ead2.model.view_selection_tool.model_dependencies,model.view_selection_tool.model_dependencies,aa557563-2e41-494a-96ca-717b7494ead2,2024-03-06 12:31:51,2024-03-06 12:31:51.892952,model_dependencies,SELECT 11,success,model,0.31200551986694336,2024-03-06T12:31:47.657976Z,2024-03-06T12:31:47.907975Z,2024-03-06T12:31:47.622977Z,2024-03-06T12:31:47.644956Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes,
        '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS compiled_code_reference

    FROM including_irrelevant_cols

)

    SELECT * FROM model_dependencies",,,Thread-1 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
aa557563-2e41-494a-96ca-717b7494ead2.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,aa557563-2e41-494a-96ca-717b7494ead2,2024-03-06 12:31:51,2024-03-06 12:31:51.892952,int_only_materialized_models,CREATE VIEW,success,model,0.2020103931427002,2024-03-06T12:31:47.934947Z,2024-03-06T12:31:48.055952Z,2024-03-06T12:31:47.884950Z,2024-03-06T12:31:47.913949Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
aa557563-2e41-494a-96ca-717b7494ead2.model.view_selection_tool.destination_nodes,model.view_selection_tool.destination_nodes,aa557563-2e41-494a-96ca-717b7494ead2,2024-03-06 12:31:51,2024-03-06 12:31:51.892952,destination_nodes,"Database Error in model destination_nodes (models\marts\destination_nodes.sql)
  relation ""all_models"" does not exist
  LINE 34:     FROM all_models
                    ^
  compiled Code at target\run\view_selection_tool\models\marts\destination_nodes.sql",error,model,0.14397478103637695,2024-03-06T12:31:47.963949Z,2024-03-06T12:31:48.030947Z,2024-03-06T12:31:47.946946Z,2024-03-06T12:31:47.957951Z,,false,"WITH

referenced_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_referenced_models""

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM destination_models",,,Thread-6 (worker),table,{}
aa557563-2e41-494a-96ca-717b7494ead2.model.view_selection_tool.all_models_plus_code,model.view_selection_tool.all_models_plus_code,aa557563-2e41-494a-96ca-717b7494ead2,2024-03-06 12:31:51,2024-03-06 12:31:51.892952,all_models_plus_code,SELECT 11,success,model,0.2440016269683838,2024-03-06T12:31:47.921946Z,2024-03-06T12:31:48.103947Z,2024-03-06T12:31:47.876948Z,2024-03-06T12:31:47.909947Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-3 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
aa557563-2e41-494a-96ca-717b7494ead2.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,aa557563-2e41-494a-96ca-717b7494ead2,2024-03-06 12:31:51,2024-03-06 12:31:51.892952,int_include_monitoring_id,CREATE VIEW,success,model,0.09597969055175781,2024-03-06T12:31:48.111948Z,2024-03-06T12:31:48.181950Z,2024-03-06T12:31:48.093952Z,2024-03-06T12:31:48.105950Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
aa557563-2e41-494a-96ca-717b7494ead2.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,aa557563-2e41-494a-96ca-717b7494ead2,2024-03-06 12:31:51,2024-03-06 12:31:51.892952,int_maintenance_fractions,CREATE VIEW,success,model,0.08156776428222656,2024-03-06T12:31:48.206947Z,2024-03-06T12:31:48.271510Z,2024-03-06T12:31:48.196946Z,2024-03-06T12:31:48.204952Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
aa557563-2e41-494a-96ca-717b7494ead2.model.view_selection_tool.avg_maintenance_fractions,model.view_selection_tool.avg_maintenance_fractions,aa557563-2e41-494a-96ca-717b7494ead2,2024-03-06 12:31:51,2024-03-06 12:31:51.892952,avg_maintenance_fractions,SELECT 4,success,model,0.10199666023254395,2024-03-06T12:31:48.294511Z,2024-03-06T12:31:48.382510Z,2024-03-06T12:31:48.285512Z,2024-03-06T12:31:48.292512Z,4,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-1 (worker),table,"{""_message"": ""SELECT 4"", ""code"": ""SELECT"", ""rows_affected"": 4}"
e892ccf4-a1c6-4fca-87e7-c845eef12159.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,e892ccf4-a1c6-4fca-87e7-c845eef12159,2024-03-06 12:33:51,2024-03-06 12:33:52.301304,stg_dbt_invocations,CREATE VIEW,success,model,0.37000083923339844,2024-03-06T12:33:47.969824Z,2024-03-06T12:33:48.237822Z,2024-03-06T12:33:47.891821Z,2024-03-06T12:33:47.911823Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e892ccf4-a1c6-4fca-87e7-c845eef12159.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,e892ccf4-a1c6-4fca-87e7-c845eef12159,2024-03-06 12:33:51,2024-03-06 12:33:52.301304,stg_dbt_models,CREATE VIEW,success,model,0.38200831413269043,2024-03-06T12:33:47.985852Z,2024-03-06T12:33:48.242821Z,2024-03-06T12:33:47.897824Z,2024-03-06T12:33:47.912822Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e892ccf4-a1c6-4fca-87e7-c845eef12159.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,e892ccf4-a1c6-4fca-87e7-c845eef12159,2024-03-06 12:33:51,2024-03-06 12:33:52.301304,stg_dbt_run_results,CREATE VIEW,success,model,0.3869059085845947,2024-03-06T12:33:47.991827Z,2024-03-06T12:33:48.248822Z,2024-03-06T12:33:47.903823Z,2024-03-06T12:33:47.914819Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e892ccf4-a1c6-4fca-87e7-c845eef12159.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,e892ccf4-a1c6-4fca-87e7-c845eef12159,2024-03-06 12:33:51,2024-03-06 12:33:52.301304,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.3958778381347656,2024-03-06T12:33:47.916852Z,2024-03-06T12:33:48.252820Z,2024-03-06T12:33:47.884821Z,2024-03-06T12:33:47.909833Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e892ccf4-a1c6-4fca-87e7-c845eef12159.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,e892ccf4-a1c6-4fca-87e7-c845eef12159,2024-03-06 12:33:51,2024-03-06 12:33:52.301304,int_keep_models_relevant_package,CREATE VIEW,success,model,0.0879969596862793,2024-03-06T12:33:48.299722Z,2024-03-06T12:33:48.369722Z,2024-03-06T12:33:48.287720Z,2024-03-06T12:33:48.296722Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e892ccf4-a1c6-4fca-87e7-c845eef12159.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,e892ccf4-a1c6-4fca-87e7-c845eef12159,2024-03-06 12:33:51,2024-03-06 12:33:52.301304,int_join_with_run_results,CREATE VIEW,success,model,0.23543238639831543,2024-03-06T12:33:48.417715Z,2024-03-06T12:33:48.606150Z,2024-03-06T12:33:48.391720Z,2024-03-06T12:33:48.411716Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e892ccf4-a1c6-4fca-87e7-c845eef12159.model.view_selection_tool.int_referenced_models,model.view_selection_tool.int_referenced_models,e892ccf4-a1c6-4fca-87e7-c845eef12159,2024-03-06 12:33:51,2024-03-06 12:33:52.301304,int_referenced_models,CREATE VIEW,success,model,0.23743605613708496,2024-03-06T12:33:48.425719Z,2024-03-06T12:33:48.609152Z,2024-03-06T12:33:48.396715Z,2024-03-06T12:33:48.413718Z,-1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

)

    SELECT * FROM referenced_models",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e892ccf4-a1c6-4fca-87e7-c845eef12159.model.view_selection_tool.model_dependencies,model.view_selection_tool.model_dependencies,e892ccf4-a1c6-4fca-87e7-c845eef12159,2024-03-06 12:33:51,2024-03-06 12:33:52.301304,model_dependencies,SELECT 11,success,model,0.373431921005249,2024-03-06T12:33:48.436715Z,2024-03-06T12:33:48.684145Z,2024-03-06T12:33:48.401717Z,2024-03-06T12:33:48.415718Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes,
        '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS compiled_code_reference

    FROM including_irrelevant_cols

)

    SELECT * FROM model_dependencies",,,Thread-2 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
e892ccf4-a1c6-4fca-87e7-c845eef12159.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,e892ccf4-a1c6-4fca-87e7-c845eef12159,2024-03-06 12:33:51,2024-03-06 12:33:52.301304,int_only_materialized_models,CREATE VIEW,success,model,0.27812910079956055,2024-03-06T12:33:48.774179Z,2024-03-06T12:33:48.920281Z,2024-03-06T12:33:48.744147Z,2024-03-06T12:33:48.757150Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e892ccf4-a1c6-4fca-87e7-c845eef12159.model.view_selection_tool.destination_nodes,model.view_selection_tool.destination_nodes,e892ccf4-a1c6-4fca-87e7-c845eef12159,2024-03-06 12:33:51,2024-03-06 12:33:52.301304,destination_nodes,SELECT 1,success,model,0.3332488536834717,2024-03-06T12:33:48.783149Z,2024-03-06T12:33:48.977403Z,2024-03-06T12:33:48.749146Z,2024-03-06T12:33:48.758148Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_referenced_models""

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM unique_referenced_models)

)

    SELECT * FROM destination_models",,,Thread-6 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
e892ccf4-a1c6-4fca-87e7-c845eef12159.model.view_selection_tool.all_models_plus_code,model.view_selection_tool.all_models_plus_code,e892ccf4-a1c6-4fca-87e7-c845eef12159,2024-03-06 12:33:51,2024-03-06 12:33:52.301304,all_models_plus_code,SELECT 11,success,model,0.34624719619750977,2024-03-06T12:33:48.766150Z,2024-03-06T12:33:48.993399Z,2024-03-06T12:33:48.685145Z,2024-03-06T12:33:48.756149Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-7 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
e892ccf4-a1c6-4fca-87e7-c845eef12159.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,e892ccf4-a1c6-4fca-87e7-c845eef12159,2024-03-06 12:33:51,2024-03-06 12:33:52.301304,int_include_monitoring_id,CREATE VIEW,success,model,0.2542593479156494,2024-03-06T12:33:49.011402Z,2024-03-06T12:33:49.219768Z,2024-03-06T12:33:48.979402Z,2024-03-06T12:33:48.998405Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e892ccf4-a1c6-4fca-87e7-c845eef12159.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,e892ccf4-a1c6-4fca-87e7-c845eef12159,2024-03-06 12:33:51,2024-03-06 12:33:52.301304,int_maintenance_fractions,CREATE VIEW,success,model,0.09450173377990723,2024-03-06T12:33:49.245280Z,2024-03-06T12:33:49.322280Z,2024-03-06T12:33:49.233767Z,2024-03-06T12:33:49.242280Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
e892ccf4-a1c6-4fca-87e7-c845eef12159.model.view_selection_tool.avg_maintenance_fractions,model.view_selection_tool.avg_maintenance_fractions,e892ccf4-a1c6-4fca-87e7-c845eef12159,2024-03-06 12:33:51,2024-03-06 12:33:52.301304,avg_maintenance_fractions,SELECT 4,success,model,0.1170039176940918,2024-03-06T12:33:49.347277Z,2024-03-06T12:33:49.447278Z,2024-03-06T12:33:49.335279Z,2024-03-06T12:33:49.344285Z,4,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-2 (worker),table,"{""_message"": ""SELECT 4"", ""code"": ""SELECT"", ""rows_affected"": 4}"
41d528a5-79d2-4668-b8bf-a85411ebbd80.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,41d528a5-79d2-4668-b8bf-a85411ebbd80,2024-03-06 12:36:51,2024-03-06 12:36:52.679159,stg_data_monitoring_metrics,CREATE VIEW,success,model,0.3578920364379883,2024-03-06T12:36:48.418615Z,2024-03-06T12:36:48.725508Z,2024-03-06T12:36:48.387616Z,2024-03-06T12:36:48.410616Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name='row_count'

)

SELECT * FROM id_and_row_count",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
41d528a5-79d2-4668-b8bf-a85411ebbd80.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,41d528a5-79d2-4668-b8bf-a85411ebbd80,2024-03-06 12:36:51,2024-03-06 12:36:52.679159,stg_dbt_invocations,CREATE VIEW,success,model,0.36889004707336426,2024-03-06T12:36:48.470613Z,2024-03-06T12:36:48.730513Z,2024-03-06T12:36:48.393614Z,2024-03-06T12:36:48.411616Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
41d528a5-79d2-4668-b8bf-a85411ebbd80.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,41d528a5-79d2-4668-b8bf-a85411ebbd80,2024-03-06 12:36:51,2024-03-06 12:36:52.679159,stg_dbt_run_results,CREATE VIEW,success,model,0.37189197540283203,2024-03-06T12:36:48.486616Z,2024-03-06T12:36:48.736507Z,2024-03-06T12:36:48.404614Z,2024-03-06T12:36:48.415617Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
41d528a5-79d2-4668-b8bf-a85411ebbd80.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,41d528a5-79d2-4668-b8bf-a85411ebbd80,2024-03-06 12:36:51,2024-03-06 12:36:52.679159,stg_dbt_models,CREATE VIEW,success,model,0.3778977394104004,2024-03-06T12:36:48.478616Z,2024-03-06T12:36:48.740505Z,2024-03-06T12:36:48.398614Z,2024-03-06T12:36:48.413617Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id as model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
41d528a5-79d2-4668-b8bf-a85411ebbd80.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,41d528a5-79d2-4668-b8bf-a85411ebbd80,2024-03-06 12:36:52,2024-03-06 12:36:52.679159,int_keep_models_relevant_package,CREATE VIEW,success,model,0.09800219535827637,2024-03-06T12:36:48.781511Z,2024-03-06T12:36:48.865507Z,2024-03-06T12:36:48.772507Z,2024-03-06T12:36:48.779506Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

    SELECT * FROM relevant_package_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
41d528a5-79d2-4668-b8bf-a85411ebbd80.model.view_selection_tool.int_referenced_models,model.view_selection_tool.int_referenced_models,41d528a5-79d2-4668-b8bf-a85411ebbd80,2024-03-06 12:36:52,2024-03-06 12:36:52.679159,int_referenced_models,CREATE VIEW,success,model,0.2565348148345947,2024-03-06T12:36:48.943456Z,2024-03-06T12:36:49.134223Z,2024-03-06T12:36:48.903707Z,2024-03-06T12:36:48.926906Z,-1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(depends_on_nodes::JSONB) AS referenced_model_id

    FROM all_models

),

unique_referenced_models AS (

    SELECT DISTINCT
        referenced_model_id

    FROM referenced_models

)

    SELECT * FROM unique_referenced_models",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
41d528a5-79d2-4668-b8bf-a85411ebbd80.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,41d528a5-79d2-4668-b8bf-a85411ebbd80,2024-03-06 12:36:52,2024-03-06 12:36:52.679159,int_join_with_run_results,CREATE VIEW,success,model,0.2618443965911865,2024-03-06T12:36:48.931148Z,2024-03-06T12:36:49.138225Z,2024-03-06T12:36:48.895530Z,2024-03-06T12:36:48.925839Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only p
    JOIN dbt_run_results r
    ON p.model_id = r.model_id

)

    SELECT * FROM joined",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
41d528a5-79d2-4668-b8bf-a85411ebbd80.model.view_selection_tool.model_dependencies,model.view_selection_tool.model_dependencies,41d528a5-79d2-4668-b8bf-a85411ebbd80,2024-03-06 12:36:52,2024-03-06 12:36:52.679159,model_dependencies,SELECT 11,success,model,0.4550614356994629,2024-03-06T12:36:48.954458Z,2024-03-06T12:36:49.316082Z,2024-03-06T12:36:48.909539Z,2024-03-06T12:36:48.928901Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes,
        '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS compiled_code_reference

    FROM including_irrelevant_cols

)

    SELECT * FROM model_dependencies",,,Thread-1 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
41d528a5-79d2-4668-b8bf-a85411ebbd80.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,41d528a5-79d2-4668-b8bf-a85411ebbd80,2024-03-06 12:36:52,2024-03-06 12:36:52.679159,int_only_materialized_models,CREATE VIEW,success,model,0.29386448860168457,2024-03-06T12:36:49.331085Z,2024-03-06T12:36:49.466093Z,2024-03-06T12:36:49.287086Z,2024-03-06T12:36:49.296096Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

    SELECT * FROM relevant_models_only",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
41d528a5-79d2-4668-b8bf-a85411ebbd80.model.view_selection_tool.all_models_plus_code,model.view_selection_tool.all_models_plus_code,41d528a5-79d2-4668-b8bf-a85411ebbd80,2024-03-06 12:36:52,2024-03-06 12:36:52.679159,all_models_plus_code,SELECT 11,success,model,0.3498663902282715,2024-03-06T12:36:49.324085Z,2024-03-06T12:36:49.521093Z,2024-03-06T12:36:49.195322Z,2024-03-06T12:36:49.295085Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) as latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols i
    JOIN most_recent_compiled_code_per_model m ON i.model_id = m.model_id
    AND i.compile_completed_at = m.latest_compiled_at

)

    SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-7 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
41d528a5-79d2-4668-b8bf-a85411ebbd80.model.view_selection_tool.destination_nodes,model.view_selection_tool.destination_nodes,41d528a5-79d2-4668-b8bf-a85411ebbd80,2024-03-06 12:36:52,2024-03-06 12:36:52.679159,destination_nodes,SELECT 1,success,model,0.3558657169342041,2024-03-06T12:36:49.317083Z,2024-03-06T12:36:49.526088Z,2024-03-06T12:36:49.189222Z,2024-03-06T12:36:49.293087Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_referenced_models""

),

destination_models AS (

    SELECT
        model_id

    FROM all_models

    WHERE model_id NOT IN
          (SELECT referenced_model_id FROM referenced_models)

)

    SELECT * FROM destination_models",,,Thread-4 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
41d528a5-79d2-4668-b8bf-a85411ebbd80.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,41d528a5-79d2-4668-b8bf-a85411ebbd80,2024-03-06 12:36:52,2024-03-06 12:36:52.679159,int_include_monitoring_id,CREATE VIEW,success,model,0.11600351333618164,2024-03-06T12:36:49.538090Z,2024-03-06T12:36:49.614118Z,2024-03-06T12:36:49.510088Z,2024-03-06T12:36:49.528091Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

    SELECT * FROM including_monitoring_id",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.dbt_exposures,model.elementary.dbt_exposures,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,dbt_exposures,INSERT 0 0,success,model,7.851834535598755,2024-03-08T10:50:39.494872Z,2024-03-08T10:50:45.880213Z,2024-03-08T10:50:38.088591Z,2024-03-08T10:50:38.317427Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
41d528a5-79d2-4668-b8bf-a85411ebbd80.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,41d528a5-79d2-4668-b8bf-a85411ebbd80,2024-03-06 12:36:52,2024-03-06 12:36:52.679159,int_maintenance_fractions,CREATE VIEW,success,model,0.08900070190429688,2024-03-06T12:36:49.637087Z,2024-03-06T12:36:49.711122Z,2024-03-06T12:36:49.628087Z,2024-03-06T12:36:49.634114Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END as maintenance_fraction

    FROM rows_affected_per_run row_affected
    JOIN row_counts_per_model row_counts
    ON row_affected.monitoring_id = row_counts.monitoring_id

)

    SELECT * FROM maintenenace_fractions",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
41d528a5-79d2-4668-b8bf-a85411ebbd80.model.view_selection_tool.avg_maintenance_fractions,model.view_selection_tool.avg_maintenance_fractions,41d528a5-79d2-4668-b8bf-a85411ebbd80,2024-03-06 12:36:52,2024-03-06 12:36:52.679159,avg_maintenance_fractions,SELECT 4,success,model,0.12001562118530273,2024-03-06T12:36:49.733088Z,2024-03-06T12:36:49.840085Z,2024-03-06T12:36:49.724091Z,2024-03-06T12:36:49.731088Z,4,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-1 (worker),table,"{""_message"": ""SELECT 4"", ""code"": ""SELECT"", ""rows_affected"": 4}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:26,2024-03-08 10:51:27.119552,stg_transactions_1,CREATE VIEW,success,model,1.9726159572601318,2024-03-08T10:50:36.104244Z,2024-03-08T10:50:37.091986Z,2024-03-08T10:50:35.965534Z,2024-03-08T10:50:36.040834Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 2500000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:26,2024-03-08 10:51:27.119552,stg_transactions_2,CREATE VIEW,success,model,1.975447177886963,2024-03-08T10:50:36.111516Z,2024-03-08T10:50:37.189423Z,2024-03-08T10:50:35.969532Z,2024-03-08T10:50:36.042835Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 2500000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:26,2024-03-08 10:51:27.119552,stg_accounts,CREATE VIEW,success,model,2.0225346088409424,2024-03-08T10:50:36.052833Z,2024-03-08T10:50:37.281299Z,2024-03-08T10:50:35.953185Z,2024-03-08T10:50:36.038835Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 1000

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:26,2024-03-08 10:51:27.119552,stg_transactions_4,CREATE VIEW,success,model,2.015230655670166,2024-03-08T10:50:36.120511Z,2024-03-08T10:50:37.389967Z,2024-03-08T10:50:35.980784Z,2024-03-08T10:50:36.042835Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 2500000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,stg_groups,CREATE VIEW,success,model,2.02783203125,2024-03-08T10:50:36.097098Z,2024-03-08T10:50:37.474105Z,2024-03-08T10:50:35.958414Z,2024-03-08T10:50:36.039837Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,stg_transactions_3,CREATE VIEW,success,model,2.0298268795013428,2024-03-08T10:50:36.126510Z,2024-03-08T10:50:37.571148Z,2024-03-08T10:50:35.976539Z,2024-03-08T10:50:36.043835Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 2500000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,dbt_snapshots,INSERT 0 0,success,model,5.728200197219849,2024-03-08T10:50:42.783539Z,2024-03-08T10:50:46.032007Z,2024-03-08T10:50:41.762733Z,2024-03-08T10:50:42.562278Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,data_monitoring_metrics,INSERT 0 0,success,model,2.14040207862854,2024-03-08T10:50:36.204026Z,2024-03-08T10:50:38.062223Z,2024-03-08T10:50:35.985945Z,2024-03-08T10:50:36.049835Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.dbt_columns,model.elementary.dbt_columns,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,dbt_columns,INSERT 0 0,success,model,7.732962131500244,2024-03-08T10:50:36.137871Z,2024-03-08T10:50:43.323423Z,2024-03-08T10:50:36.012394Z,2024-03-08T10:50:36.048836Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.dbt_invocations,model.elementary.dbt_invocations,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,dbt_invocations,INSERT 0 0,success,model,6.113025188446045,2024-03-08T10:50:39.588200Z,2024-03-08T10:50:43.823616Z,2024-03-08T10:50:38.120330Z,2024-03-08T10:50:38.350961Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.dbt_run_results,model.elementary.dbt_run_results,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,dbt_run_results,INSERT 0 0,success,model,6.92093300819397,2024-03-08T10:50:39.899196Z,2024-03-08T10:50:43.880915Z,2024-03-08T10:50:38.247856Z,2024-03-08T10:50:38.713526Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.dbt_metrics,model.elementary.dbt_metrics,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,dbt_metrics,INSERT 0 0,success,model,7.793053388595581,2024-03-08T10:50:39.681869Z,2024-03-08T10:50:45.821528Z,2024-03-08T10:50:38.172581Z,2024-03-08T10:50:38.494061Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.dbt_seeds,model.elementary.dbt_seeds,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,dbt_seeds,INSERT 0 0,success,model,7.809374094009399,2024-03-08T10:50:39.993696Z,2024-03-08T10:50:45.843901Z,2024-03-08T10:50:38.286108Z,2024-03-08T10:50:38.759435Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.dbt_models,model.elementary.dbt_models,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,dbt_models,INSERT 0 0,success,model,8.165499925613403,2024-03-08T10:50:39.837240Z,2024-03-08T10:50:46.191408Z,2024-03-08T10:50:38.207107Z,2024-03-08T10:50:38.559033Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,dbt_source_freshness_results,INSERT 0 0,success,model,2.838925361633301,2024-03-08T10:50:45.397761Z,2024-03-08T10:50:46.605995Z,2024-03-08T10:50:43.840190Z,2024-03-08T10:50:44.236458Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.metadata,model.elementary.metadata,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,metadata,SELECT 1,success,model,1.1728460788726807,2024-03-08T10:50:46.120437Z,2024-03-08T10:50:46.926727Z,2024-03-08T10:50:46.041259Z,2024-03-08T10:50:46.074573Z,1,false,"

SELECT
    '0.13.0' as dbt_pkg_version",,,Thread-5 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,stg_dbt_invocations,"Database Error in model stg_dbt_invocations (models\staging\stg_dbt_invocations.sql)
  relation ""elementary_src.dbt_invocations"" does not exist
  LINE 11:     SELECT * FROM ""postgres"".""elementary_src"".""dbt_invocatio...
                             ^
  compiled Code at target\run\view_selection_tool\models\staging\stg_dbt_invocations.sql",error,model,0.9841415882110596,2024-03-08T10:50:46.553244Z,2024-03-08T10:50:46.894366Z,2024-03-08T10:50:46.455304Z,2024-03-08T10:50:46.480075Z,,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""elementary_src"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-6 (worker),view,{}
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,stg_data_monitoring_metrics,"Database Error in model stg_data_monitoring_metrics (models\staging\stg_data_monitoring_metrics.sql)
  relation ""elementary_src.data_monitoring_metrics"" does not exist
  LINE 11:     SELECT * FROM ""postgres"".""elementary_src"".""data_monitori...
                             ^
  compiled Code at target\run\view_selection_tool\models\staging\stg_data_monitoring_metrics.sql",error,model,1.195143699645996,2024-03-08T10:50:46.402407Z,2024-03-08T10:50:46.643307Z,2024-03-08T10:50:46.359652Z,2024-03-08T10:50:46.384971Z,,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""elementary_src"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name = 'row_count'

)

SELECT * FROM id_and_row_count",,,Thread-7 (worker),view,{}
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.elementary_test_results,model.elementary.elementary_test_results,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,elementary_test_results,INSERT 0 0,success,model,1.6558527946472168,2024-03-08T10:50:46.087012Z,2024-03-08T10:50:47.574690Z,2024-03-08T10:50:45.982275Z,2024-03-08T10:50:46.049263Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,schema_columns_snapshot,INSERT 0 0,success,model,1.5823132991790771,2024-03-08T10:50:46.169130Z,2024-03-08T10:50:47.580051Z,2024-03-08T10:50:46.056419Z,2024-03-08T10:50:46.104158Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,stg_dbt_models,"Database Error in model stg_dbt_models (models\staging\stg_dbt_models.sql)
  relation ""elementary_src.dbt_models"" does not exist
  LINE 11:     SELECT * FROM ""postgres"".""elementary_src"".""dbt_models""
                             ^
  compiled Code at target\run\view_selection_tool\models\staging\stg_dbt_models.sql",error,model,0.780428409576416,2024-03-08T10:50:46.940878Z,2024-03-08T10:50:47.562694Z,2024-03-08T10:50:46.886738Z,2024-03-08T10:50:46.905531Z,,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""elementary_src"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id AS model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-8 (worker),view,{}
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.view_selection_tool.int_referenced_models,model.view_selection_tool.int_referenced_models,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,int_referenced_models,,skipped,model,0,,,,,,false,,,,Thread-3 (worker),view,{}
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.dbt_tests,model.elementary.dbt_tests,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,dbt_tests,INSERT 0 0,success,model,1.938145637512207,2024-03-08T10:50:45.856278Z,2024-03-08T10:50:47.620402Z,2024-03-08T10:50:45.775039Z,2024-03-08T10:50:45.824496Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.dbt_sources,model.elementary.dbt_sources,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,dbt_sources,INSERT 0 0,success,model,2.0439109802246094,2024-03-08T10:50:45.828494Z,2024-03-08T10:50:47.681522Z,2024-03-08T10:50:45.712091Z,2024-03-08T10:50:45.768039Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,stg_dbt_run_results,"Database Error in model stg_dbt_run_results (models\staging\stg_dbt_run_results.sql)
  relation ""elementary_src.dbt_run_results"" does not exist
  LINE 11:     SELECT * FROM ""postgres"".""elementary_src"".""dbt_run_resul...
                             ^
  compiled Code at target\run\view_selection_tool\models\staging\stg_dbt_run_results.sql",error,model,0.3503265380859375,2024-03-08T10:50:47.531148Z,2024-03-08T10:50:47.737211Z,2024-03-08T10:50:47.468066Z,2024-03-08T10:50:47.498394Z,,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""elementary_src"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id AS model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-5 (worker),view,{}
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,int_accounts_and_groups_joined,CREATE VIEW,success,model,0.3998854160308838,2024-03-08T10:50:47.553315Z,2024-03-08T10:50:47.847436Z,2024-03-08T10:50:47.480202Z,2024-03-08T10:50:47.520801Z,-1,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
        ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.monitors_runs,model.elementary.monitors_runs,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,monitors_runs,CREATE VIEW,success,model,0.30311059951782227,2024-03-08T10:50:47.764646Z,2024-03-08T10:50:47.969450Z,2024-03-08T10:50:47.717252Z,2024-03-08T10:50:47.752208Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,metrics_anomaly_score,CREATE VIEW,success,model,0.3281259536743164,2024-03-08T10:50:47.778805Z,2024-03-08T10:50:47.984918Z,2024-03-08T10:50:47.689826Z,2024-03-08T10:50:47.753211Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.job_run_results,model.elementary.job_run_results,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,job_run_results,CREATE VIEW,success,model,1.0156280994415283,2024-03-08T10:50:49.386483Z,2024-03-08T10:50:50.171209Z,2024-03-08T10:50:49.210038Z,2024-03-08T10:50:49.261869Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.view_selection_tool.model_dependencies,model.view_selection_tool.model_dependencies,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,model_dependencies,,skipped,model,0,,,,,,false,,,,Thread-2 (worker),table,{}
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.model_run_results,model.elementary.model_run_results,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,model_run_results,CREATE VIEW,success,model,1.042696237564087,2024-03-08T10:50:49.432355Z,2024-03-08T10:50:50.205349Z,2024-03-08T10:50:49.263867Z,2024-03-08T10:50:49.363484Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,int_keep_models_relevant_package,,skipped,model,0,,,,,,false,,,,Thread-8 (worker),view,{}
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,alerts_dbt_tests,CREATE VIEW,success,model,1.0648562908172607,2024-03-08T10:50:49.476635Z,2024-03-08T10:50:50.233976Z,2024-03-08T10:50:49.304420Z,2024-03-08T10:50:49.384482Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,alerts_anomaly_detection,CREATE VIEW,success,model,1.0739378929138184,2024-03-08T10:50:49.459621Z,2024-03-08T10:50:50.238283Z,2024-03-08T10:50:49.282077Z,2024-03-08T10:50:49.382312Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,snapshot_run_results,CREATE VIEW,success,model,1.0950334072113037,2024-03-08T10:50:49.405491Z,2024-03-08T10:50:50.251273Z,2024-03-08T10:50:49.242033Z,2024-03-08T10:50:49.320539Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,alerts_schema_changes,CREATE VIEW,success,model,1.0581142902374268,2024-03-08T10:50:49.491906Z,2024-03-08T10:50:50.259026Z,2024-03-08T10:50:49.322547Z,2024-03-08T10:50:49.402483Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,int_join_with_run_results,,skipped,model,0,,,,,,false,,,,Thread-2 (worker),view,{}
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.test_result_rows,model.elementary.test_result_rows,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,test_result_rows,INSERT 0 0,success,model,1.3922934532165527,2024-03-08T10:50:49.512505Z,2024-03-08T10:50:50.553015Z,2024-03-08T10:50:49.349465Z,2024-03-08T10:50:49.424381Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,int_only_materialized_models,,skipped,model,0,,,,,,false,,,,Thread-2 (worker),view,{}
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.view_selection_tool.destination_nodes,model.view_selection_tool.destination_nodes,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,destination_nodes,,skipped,model,0,,,,,,false,,,,Thread-1 (worker),table,{}
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,int_include_monitoring_id,,skipped,model,0,,,,,,false,,,,Thread-2 (worker),view,{}
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,int_maintenance_fractions,,skipped,model,0,,,,,,false,,,,Thread-1 (worker),view,{}
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.view_selection_tool.avg_maintenance_fractions,model.view_selection_tool.avg_maintenance_fractions,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,avg_maintenance_fractions,,skipped,model,0,,,,,,false,,,,Thread-2 (worker),table,{}
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,anomaly_threshold_sensitivity,CREATE VIEW,success,model,0.7599844932556152,2024-03-08T10:50:50.593647Z,2024-03-08T10:50:51.101086Z,2024-03-08T10:50:50.481249Z,2024-03-08T10:50:50.515852Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,dbt_artifacts_hashes,CREATE VIEW,success,model,0.8115804195404053,2024-03-08T10:50:50.554225Z,2024-03-08T10:50:51.136751Z,2024-03-08T10:50:50.399735Z,2024-03-08T10:50:50.504724Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,alerts_dbt_models,CREATE VIEW,success,model,0.5877223014831543,2024-03-08T10:50:50.713566Z,2024-03-08T10:50:51.143803Z,2024-03-08T10:50:50.630923Z,2024-03-08T10:50:50.686972Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,grouped_transactions_unioned_with_original,SELECT 137,success,model,5.179824352264404,2024-03-08T10:51:20.546756Z,2024-03-08T10:51:25.714541Z,2024-03-08T10:51:20.538719Z,2024-03-08T10:51:20.544719Z,137,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-6 (worker),table,"{""_message"": ""SELECT 137"", ""code"": ""SELECT"", ""rows_affected"": 137}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,alerts_dbt_source_freshness,CREATE VIEW,success,model,0.827061653137207,2024-03-08T10:50:50.519849Z,2024-03-08T10:50:51.149801Z,2024-03-08T10:50:50.364057Z,2024-03-08T10:50:50.434191Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.information_schema_columns,model.elementary.information_schema_columns,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,information_schema_columns,CREATE VIEW,success,model,0.8683047294616699,2024-03-08T10:50:50.802465Z,2024-03-08T10:50:51.216042Z,2024-03-08T10:50:50.421482Z,2024-03-08T10:50:50.780992Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.elementary.enriched_columns,model.elementary.enriched_columns,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,enriched_columns,CREATE VIEW,success,model,0.14412379264831543,2024-03-08T10:50:51.254168Z,2024-03-08T10:50:51.373143Z,2024-03-08T10:50:51.238021Z,2024-03-08T10:50:51.251018Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,int_union_of_transactions,SELECT 10000000,success,model,32.871407985687256,2024-03-08T10:50:47.542320Z,2024-03-08T10:51:20.329297Z,2024-03-08T10:50:47.487425Z,2024-03-08T10:50:47.519798Z,10000000,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-7 (worker),table,"{""_message"": ""SELECT 10000000"", ""code"": ""SELECT"", ""rows_affected"": 10000000}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,int_transactions_and_accounts_and_groups_joined,CREATE VIEW,success,model,0.10092425346374512,2024-03-08T10:51:20.349216Z,2024-03-08T10:51:20.438135Z,2024-03-08T10:51:20.341212Z,2024-03-08T10:51:20.347213Z,-1,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
        ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
910157b1-1598-4e05-9fb2-9f13bcaf22aa.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,910157b1-1598-4e05-9fb2-9f13bcaf22aa,2024-03-08 10:51:27,2024-03-08 10:51:27.119552,int_grouped_on_group_id,CREATE VIEW,success,model,0.08335137367248535,2024-03-08T10:51:20.461199Z,2024-03-08T10:51:20.528214Z,2024-03-08T10:51:20.450170Z,2024-03-08T10:51:20.459199Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        'fixed_value' AS account_description,
        SUM(amount) AS total_amount

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.dbt_chatGPT_suggestion.stg_accounts,model.dbt_chatGPT_suggestion.stg_accounts,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,stg_accounts,CREATE VIEW,success,model,0.8065972328186035,2024-03-08T10:52:38.135027Z,2024-03-08T10:52:38.764968Z,2024-03-08T10:52:38.034497Z,2024-03-08T10:52:38.116494Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""accounts""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 1000

),

renamed AS (

    SELECT
        id AS account_id,
        description AS account_description,
        group_id

    FROM source

)

SELECT * FROM renamed",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.dbt_chatGPT_suggestion.stg_groups,model.dbt_chatGPT_suggestion.stg_groups,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,stg_groups,CREATE VIEW,success,model,0.8129229545593262,2024-03-08T10:52:38.189329Z,2024-03-08T10:52:38.773969Z,2024-03-08T10:52:38.044243Z,2024-03-08T10:52:38.118499Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""groups""
    LIMIT 100

),

renamed AS (

    SELECT
        id AS group_id,
        group_description

    FROM source

)

SELECT * FROM renamed",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.dbt_chatGPT_suggestion.stg_transactions_2,model.dbt_chatGPT_suggestion.stg_transactions_2,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,stg_transactions_2,CREATE VIEW,success,model,1.0604562759399414,2024-03-08T10:52:38.203312Z,2024-03-08T10:52:38.777998Z,2024-03-08T10:52:38.055414Z,2024-03-08T10:52:38.120499Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_2""
    LIMIT 2500000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-4 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.dbt_chatGPT_suggestion.stg_transactions_4,model.dbt_chatGPT_suggestion.stg_transactions_4,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,stg_transactions_4,CREATE VIEW,success,model,1.1673696041107178,2024-03-08T10:52:38.218267Z,2024-03-08T10:52:38.780253Z,2024-03-08T10:52:38.066626Z,2024-03-08T10:52:38.124496Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_4""
    LIMIT 2500000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.dbt_chatGPT_suggestion.stg_transactions_3,model.dbt_chatGPT_suggestion.stg_transactions_3,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,stg_transactions_3,CREATE VIEW,success,model,1.2454032897949219,2024-03-08T10:52:38.209596Z,2024-03-08T10:52:38.783255Z,2024-03-08T10:52:38.061616Z,2024-03-08T10:52:38.122494Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_3""
    LIMIT 2500000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.dbt_chatGPT_suggestion.stg_transactions_1,model.dbt_chatGPT_suggestion.stg_transactions_1,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,stg_transactions_1,CREATE VIEW,success,model,1.340444564819336,2024-03-08T10:52:38.196311Z,2024-03-08T10:52:38.788370Z,2024-03-08T10:52:38.049272Z,2024-03-08T10:52:38.119526Z,-1,false,"WITH

source AS (

    SELECT * FROM ""postgres"".""public"".""transactions_1""
    ORDER BY id  --necessary for small LIMIT values to ensure the join has rows
    LIMIT 2500000

),

renamed AS (

    SELECT
        id AS transaction_id,
        amount,
        account_id

    FROM source

)

SELECT * FROM renamed",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.data_monitoring_metrics,model.elementary.data_monitoring_metrics,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,data_monitoring_metrics,INSERT 0 0,success,model,3.919703960418701,2024-03-08T10:52:38.225298Z,2024-03-08T10:52:40.696995Z,2024-03-08T10:52:38.071587Z,2024-03-08T10:52:38.125494Z,0,false,"


    
    
        
    
    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as id

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as metric_name

,
                
        cast(123456789.99 as float) as metric_value

,
                
        cast('dummy_string' as varchar(4096)) as source_value

,
                cast('2091-02-17' as timestamp) as bucket_start

,
                cast('2091-02-17' as timestamp) as bucket_end

,
                
        cast(123456789 as integer) as bucket_duration_hours

,
                cast('2091-02-17' as timestamp) as updated_at

,
                
        cast('dummy_string' as varchar(4096)) as dimension

,
                
        cast('dummy_string' as varchar(4096)) as dimension_value

,
                
        cast('dummy_string' as varchar(4096)) as metric_properties

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.dbt_columns,model.elementary.dbt_columns,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,dbt_columns,INSERT 0 0,success,model,6.543787479400635,2024-03-08T10:52:38.291499Z,2024-03-08T10:52:44.523564Z,2024-03-08T10:52:38.094028Z,2024-03-08T10:52:38.127494Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as parent_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.dbt_invocations,model.elementary.dbt_invocations,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,dbt_invocations,INSERT 0 0,success,model,5.163714170455933,2024-03-08T10:52:40.515368Z,2024-03-08T10:52:44.992848Z,2024-03-08T10:52:39.919845Z,2024-03-08T10:52:40.082882Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as job_run_id

,
                
        cast('dummy_string' as varchar(4096)) as run_started_at

,
                
        cast('dummy_string' as varchar(4096)) as run_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as command

,
                
        cast('dummy_string' as varchar(4096)) as dbt_version

,
                
        cast('dummy_string' as varchar(4096)) as elementary_version

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars

,
                
        cast('this_is_just_a_long_dummy_string' as text) as vars

,
                
        cast('dummy_string' as varchar(4096)) as target_name

,
                
        cast('dummy_string' as varchar(4096)) as target_database

,
                
        cast('dummy_string' as varchar(4096)) as target_schema

,
                
        cast('dummy_string' as varchar(4096)) as target_profile_name

,
                
        cast(123456789 as integer) as threads

,
                
        cast('this_is_just_a_long_dummy_string' as text) as selected

,
                
        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector

,
                
        cast('dummy_string' as varchar(4096)) as project_id

,
                
        cast('dummy_string' as varchar(4096)) as project_name

,
                
        cast('dummy_string' as varchar(4096)) as env

,
                
        cast('dummy_string' as varchar(4096)) as env_id

,
                
        cast('dummy_string' as varchar(4096)) as cause_category

,
                
        cast('this_is_just_a_long_dummy_string' as text) as cause

,
                
        cast('dummy_string' as varchar(4096)) as pull_request_id

,
                
        cast('dummy_string' as varchar(4096)) as git_sha

,
                
        cast('dummy_string' as varchar(4096)) as orchestrator

,
                
        cast('dummy_string' as varchar(4096)) as dbt_user

,
                
        cast('dummy_string' as varchar(4096)) as job_url

,
                
        cast('dummy_string' as varchar(4096)) as job_run_url

,
                
        cast('dummy_string' as varchar(4096)) as account_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.dbt_run_results,model.elementary.dbt_run_results,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,dbt_run_results,INSERT 0 0,success,model,5.14927077293396,2024-03-08T10:52:40.888123Z,2024-03-08T10:52:45.001845Z,2024-03-08T10:52:40.031414Z,2024-03-08T10:52:40.090077Z,0,false,"

select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('this_is_just_a_long_dummy_string' as text) as name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as message

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as resource_type

,
                
        cast(123456789.99 as float) as execution_time

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast(31474836478 as bigint) as rows_affected

,
                
        cast (True as boolean) as full_refresh

,
                
        cast('this_is_just_a_long_dummy_string' as text) as compiled_code

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as query_id

,
                
        cast('dummy_string' as varchar(4096)) as thread_id

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('dummy_string' as varchar(4096)) as adapter_response


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.dbt_exposures,model.elementary.dbt_exposures,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,dbt_exposures,INSERT 0 0,success,model,7.05703330039978,2024-03-08T10:52:40.091106Z,2024-03-08T10:52:46.857640Z,2024-03-08T10:52:39.888257Z,2024-03-08T10:52:39.989473Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as maturity

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('dummy_string' as varchar(4096)) as owner_email

,
                
        cast('dummy_string' as varchar(4096)) as owner_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as url

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('this_is_just_a_long_dummy_string' as text) as raw_queries


        ) as empty_table
        where 1 = 0",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.dbt_seeds,model.elementary.dbt_seeds,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,dbt_seeds,INSERT 0 0,success,model,7.084898948669434,2024-03-08T10:52:40.972150Z,2024-03-08T10:52:46.915564Z,2024-03-08T10:52:40.059483Z,2024-03-08T10:52:40.103084Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-3 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.dbt_metrics,model.elementary.dbt_metrics,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,dbt_metrics,INSERT 0 0,success,model,7.1166956424713135,2024-03-08T10:52:40.593058Z,2024-03-08T10:52:46.920537Z,2024-03-08T10:52:39.960768Z,2024-03-08T10:52:40.083882Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as label

,
                
        cast('dummy_string' as varchar(4096)) as model

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as sql

,
                
        cast('dummy_string' as varchar(4096)) as timestamp

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filters

,
                
        cast('this_is_just_a_long_dummy_string' as text) as time_grains

,
                
        cast('this_is_just_a_long_dummy_string' as text) as dimensions

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.dbt_models,model.elementary.dbt_models,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,dbt_models,INSERT 0 0,success,model,7.537182092666626,2024-03-08T10:52:40.797487Z,2024-03-08T10:52:47.356755Z,2024-03-08T10:52:39.990503Z,2024-03-08T10:52:40.088112Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-6 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.dbt_snapshots,model.elementary.dbt_snapshots,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,dbt_snapshots,INSERT 0 0,success,model,3.3206615447998047,2024-03-08T10:52:44.201157Z,2024-03-08T10:52:47.361859Z,2024-03-08T10:52:44.107990Z,2024-03-08T10:52:44.168740Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as checksum

,
                
        cast('dummy_string' as varchar(4096)) as materialization

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as patch_path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-7 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.dbt_source_freshness_results,model.elementary.dbt_source_freshness_results,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,dbt_source_freshness_results,INSERT 0 0,success,model,2.6628432273864746,2024-03-08T10:52:45.020184Z,2024-03-08T10:52:47.527144Z,2024-03-08T10:52:44.939959Z,2024-03-08T10:52:44.993848Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id

,
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as max_loaded_at

,
                
        cast('dummy_string' as varchar(4096)) as snapshotted_at

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast('dummy_string' as varchar(4096)) as error

,
                
        cast('dummy_string' as varchar(4096)) as compile_started_at

,
                
        cast('dummy_string' as varchar(4096)) as compile_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_started_at

,
                
        cast('dummy_string' as varchar(4096)) as execute_completed_at

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                
        cast('dummy_string' as varchar(4096)) as warn_after

,
                
        cast('dummy_string' as varchar(4096)) as error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as filter


        ) as empty_table
        where 1 = 0
",,,Thread-8 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.elementary_test_results,model.elementary.elementary_test_results,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,elementary_test_results,INSERT 0 0,success,model,1.3309669494628906,2024-03-08T10:52:47.233930Z,2024-03-08T10:52:48.320367Z,2024-03-08T10:52:47.046735Z,2024-03-08T10:52:47.099763Z,0,false,"


    select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as id

,
                
        cast('dummy_string' as varchar(4096)) as data_issue_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id

,
                
        cast('dummy_string' as varchar(4096)) as invocation_id

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as test_type

,
                
        cast('dummy_string' as varchar(4096)) as test_sub_type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_description

,
                
        cast('dummy_string' as varchar(4096)) as owners

,
                
        cast('dummy_string' as varchar(4096)) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_results_query

,
                
        cast('dummy_string' as varchar(4096)) as other

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as status

,
                
        cast(31474836478 as bigint) as failures

,
                
        cast('dummy_string' as varchar(4096)) as test_short_name

,
                
        cast('dummy_string' as varchar(4096)) as test_alias

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_rows

,
                
        cast(31474836478 as bigint) as failed_row_count


        ) as empty_table
        where 1 = 0
",,,Thread-1 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.schema_columns_snapshot,model.elementary.schema_columns_snapshot,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,schema_columns_snapshot,INSERT 0 0,success,model,1.4662363529205322,2024-03-08T10:52:47.296671Z,2024-03-08T10:52:48.416162Z,2024-03-08T10:52:47.211181Z,2024-03-08T10:52:47.247934Z,0,false,"


    select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as column_state_id

,
                
        cast('dummy_string' as varchar(4096)) as full_column_name

,
                
        cast('dummy_string' as varchar(4096)) as full_table_name

,
                
        cast('dummy_string' as varchar(4096)) as column_name

,
                
        cast('dummy_string' as varchar(4096)) as data_type

,
                
        cast (True as boolean) as is_new

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0
",,,Thread-4 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.dbt_tests,model.elementary.dbt_tests,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,dbt_tests,INSERT 0 0,success,model,1.7719714641571045,2024-03-08T10:52:46.955030Z,2024-03-08T10:52:48.439398Z,2024-03-08T10:52:46.862254Z,2024-03-08T10:52:46.905318Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as short_name

,
                
        cast('dummy_string' as varchar(4096)) as alias

,
                
        cast('dummy_string' as varchar(4096)) as test_column_name

,
                
        cast('dummy_string' as varchar(4096)) as severity

,
                
        cast('dummy_string' as varchar(4096)) as warn_if

,
                
        cast('dummy_string' as varchar(4096)) as error_if

,
                
        cast('this_is_just_a_long_dummy_string' as text) as test_params

,
                
        cast('dummy_string' as varchar(4096)) as test_namespace

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as model_owners

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros

,
                
        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes

,
                
        cast('dummy_string' as varchar(4096)) as parent_model_unique_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('dummy_string' as varchar(4096)) as type

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash

,
                
        cast('dummy_string' as varchar(4096)) as quality_dimension


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.view_selection_tool.stg_data_monitoring_metrics,model.view_selection_tool.stg_data_monitoring_metrics,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,stg_data_monitoring_metrics,CREATE VIEW,success,model,1.1356425285339355,2024-03-08T10:52:47.572845Z,2024-03-08T10:52:48.557011Z,2024-03-08T10:52:47.513147Z,2024-03-08T10:52:47.555723Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

id_and_row_count AS (

    SELECT
        id AS monitoring_id,
        metric_value AS row_count

    FROM original
    WHERE metric_name = 'row_count'

)

SELECT * FROM id_and_row_count",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.view_selection_tool.stg_dbt_invocations,model.view_selection_tool.stg_dbt_invocations,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,stg_dbt_invocations,CREATE VIEW,success,model,1.1323153972625732,2024-03-08T10:52:47.589275Z,2024-03-08T10:52:48.577094Z,2024-03-08T10:52:47.518148Z,2024-03-08T10:52:47.557721Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_invocations""

),

useful_cols_only AS (

    SELECT
        invocation_id,
        selected

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.dbt_sources,model.elementary.dbt_sources,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,dbt_sources,INSERT 0 0,success,model,1.9769954681396484,2024-03-08T10:52:46.928835Z,2024-03-08T10:52:48.710675Z,2024-03-08T10:52:46.825238Z,2024-03-08T10:52:46.897997Z,0,false,"

select * from (
            select
            
                
        cast('dummy_string' as varchar(4096)) as unique_id

,
                
        cast('dummy_string' as varchar(4096)) as database_name

,
                
        cast('dummy_string' as varchar(4096)) as schema_name

,
                
        cast('dummy_string' as varchar(4096)) as source_name

,
                
        cast('dummy_string' as varchar(4096)) as name

,
                
        cast('dummy_string' as varchar(4096)) as identifier

,
                
        cast('dummy_string' as varchar(4096)) as loaded_at_field

,
                
        cast('dummy_string' as varchar(4096)) as freshness_warn_after

,
                
        cast('dummy_string' as varchar(4096)) as freshness_error_after

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter

,
                
        cast('this_is_just_a_long_dummy_string' as text) as freshness_description

,
                
        cast('dummy_string' as varchar(4096)) as relation_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as tags

,
                
        cast('this_is_just_a_long_dummy_string' as text) as meta

,
                
        cast('dummy_string' as varchar(4096)) as owner

,
                
        cast('dummy_string' as varchar(4096)) as package_name

,
                
        cast('this_is_just_a_long_dummy_string' as text) as original_path

,
                
        cast('dummy_string' as varchar(4096)) as path

,
                
        cast('this_is_just_a_long_dummy_string' as text) as source_description

,
                
        cast('this_is_just_a_long_dummy_string' as text) as description

,
                
        cast('dummy_string' as varchar(4096)) as generated_at

,
                
        cast('dummy_string' as varchar(4096)) as metadata_hash


        ) as empty_table
        where 1 = 0",,,Thread-2 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.view_selection_tool.stg_dbt_models,model.view_selection_tool.stg_dbt_models,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,stg_dbt_models,CREATE VIEW,success,model,1.1184377670288086,2024-03-08T10:52:47.826444Z,2024-03-08T10:52:48.814790Z,2024-03-08T10:52:47.770828Z,2024-03-08T10:52:47.784285Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_models""

),

useful_cols_only AS (

    SELECT
        unique_id AS model_id,
        alias,
        database_name,
        schema_name,
        package_name,
        depends_on_nodes

    FROM original

)

SELECT * FROM useful_cols_only",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.view_selection_tool.stg_dbt_run_results,model.view_selection_tool.stg_dbt_run_results,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,stg_dbt_run_results,CREATE VIEW,success,model,0.5782227516174316,2024-03-08T10:52:48.582127Z,2024-03-08T10:52:48.928272Z,2024-03-08T10:52:48.421701Z,2024-03-08T10:52:48.546368Z,-1,false,"WITH

original AS (

    SELECT * FROM ""postgres"".""transformed_elementary"".""dbt_run_results""

),

useful_cols_only AS (

    SELECT
        unique_id AS model_id,
        invocation_id,
        rows_affected,
        materialization,
        compiled_code,
        compile_completed_at

    FROM original
    WHERE compiled_code IS NOT NULL

)

SELECT * FROM useful_cols_only",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_accounts_and_groups_joined,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,int_accounts_and_groups_joined,CREATE VIEW,success,model,0.4153175354003906,2024-03-08T10:52:48.656993Z,2024-03-08T10:52:48.932462Z,2024-03-08T10:52:48.597183Z,2024-03-08T10:52:48.627334Z,-1,false,"WITH

accounts AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_accounts""

),

groups AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_groups""

),

joined AS (

    SELECT
        a.account_id,
        a.account_description,
        g.group_id

    FROM accounts AS a
    INNER JOIN groups AS g
        ON a.group_id = g.group_id

)

SELECT * FROM joined",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.monitors_runs,model.elementary.monitors_runs,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,monitors_runs,CREATE VIEW,success,model,0.33855724334716797,2024-03-08T10:52:48.817787Z,2024-03-08T10:52:49.035320Z,2024-03-08T10:52:48.751031Z,2024-03-08T10:52:48.786096Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

max_bucket_end as (

    select full_table_name,
           column_name,
           metric_name,
           metric_properties,
           max(bucket_end) as last_bucket_end,
           min(bucket_end) as first_bucket_end
    from data_monitoring_metrics
    group by 1,2,3,4

)

select * from max_bucket_end",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.metrics_anomaly_score,model.elementary.metrics_anomaly_score,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,metrics_anomaly_score,CREATE VIEW,success,model,0.37642931938171387,2024-03-08T10:52:48.801443Z,2024-03-08T10:52:49.040319Z,2024-03-08T10:52:48.712676Z,2024-03-08T10:52:48.747002Z,-1,false,"

with data_monitoring_metrics as (

    select * from ""postgres"".""transformed_elementary"".""data_monitoring_metrics""

),

time_window_aggregation as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        metric_value,
        source_value,
        bucket_start,
        bucket_end,
        bucket_duration_hours,
        updated_at,
        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,
        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,
        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,
        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,
        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start
    from data_monitoring_metrics
    group by 1,2,3,4,5,6,7,8,9,10,11,12
),

metrics_anomaly_score as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        case
            when training_stddev is null then null
            when training_stddev = 0 then 0
            else (metric_value - training_avg) / (training_stddev)
        end as anomaly_score,
        metric_value as latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        max(updated_at) as updated_at
    from time_window_aggregation
        where
            metric_value is not null
            and training_avg is not null
            and bucket_end >= 
    cast(date_trunc('day', 
    current_timestamp::timestamp
) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
    order by bucket_end desc


),

final as (

    select
        id,
        full_table_name,
        column_name,
        dimension,
        dimension_value,
        metric_name,
        anomaly_score,
        latest_metric_value,
        bucket_start,
        bucket_end,
        training_avg,
        training_stddev,
        training_start,
        training_end,
        training_set_size,
        updated_at,
        case
            when abs(anomaly_score) > 3 then true
            else false end
        as is_anomaly
    from metrics_anomaly_score
)

select * from final",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.job_run_results,model.elementary.job_run_results,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,job_run_results,CREATE VIEW,success,model,0.6704926490783691,2024-03-08T10:52:50.039622Z,2024-03-08T10:52:50.524706Z,2024-03-08T10:52:49.898145Z,2024-03-08T10:52:49.945110Z,-1,false,"





with jobs as (
  select
    job_name,
    job_id,
    job_run_id,
    
min(cast(run_started_at as timestamp))
 as job_run_started_at,
    
max(cast(run_completed_at as timestamp))
 as job_run_completed_at,
    
    
        (
        (
        (
        ((
max(cast(run_completed_at as timestamp))
)::date - (
min(cast(run_started_at as timestamp))
)::date)
     * 24 + date_part('hour', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('hour', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + date_part('minute', (
max(cast(run_completed_at as timestamp))
)::timestamp) - date_part('minute', (
min(cast(run_started_at as timestamp))
)::timestamp))
     * 60 + floor(date_part('second', (
max(cast(run_completed_at as timestamp))
)::timestamp)) - floor(date_part('second', (
min(cast(run_started_at as timestamp))
)::timestamp)))
    
 as job_run_execution_time
  from ""postgres"".""transformed_elementary"".""dbt_invocations""
  where job_id is not null
  group by job_name, job_id, job_run_id
)

select
  job_name as name,
  job_id as id,
  job_run_id as run_id,
  job_run_started_at as run_started_at,
  job_run_completed_at as run_completed_at,
  job_run_execution_time as run_execution_time
from jobs",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.model_run_results,model.elementary.model_run_results,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,model_run_results,CREATE VIEW,success,model,0.7276766300201416,2024-03-08T10:52:50.055904Z,2024-03-08T10:52:50.569911Z,2024-03-08T10:52:49.919654Z,2024-03-08T10:52:49.974538Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_models as (
    select * from ""postgres"".""transformed_elementary"".""dbt_models""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    models.database_name,
    models.schema_name,
    coalesce(run_results.materialization, models.materialization) as materialization,
    models.tags,
    models.package_name,
    models.path,
    models.original_path,
    models.owner,
    models.alias,
    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,
    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_first_invocation_of_the_day,
    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY 
    date_trunc('day', cast(run_results.generated_at as timestamp))
 ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id
              THEN TRUE
              ELSE FALSE 
         END                                                               AS is_the_last_invocation_of_the_day
    
FROM dbt_run_results run_results
JOIN dbt_models models ON run_results.unique_id = models.unique_id",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.alerts_anomaly_detection,model.elementary.alerts_anomaly_detection,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,alerts_anomaly_detection,CREATE VIEW,success,model,0.7616655826568604,2024-03-08T10:52:50.095811Z,2024-03-08T10:52:50.624643Z,2024-03-08T10:52:49.958267Z,2024-03-08T10:52:50.036621Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_anomaly_detection as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'
)

select * from alerts_anomaly_detection",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.snapshot_run_results,model.elementary.snapshot_run_results,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,snapshot_run_results,CREATE VIEW,success,model,0.7803351879119873,2024-03-08T10:52:50.076902Z,2024-03-08T10:52:50.639064Z,2024-03-08T10:52:49.946111Z,2024-03-08T10:52:50.033472Z,-1,false,"

with dbt_run_results as (
    select * from ""postgres"".""transformed_elementary"".""dbt_run_results""
),

dbt_snapshots as (
    select * from ""postgres"".""transformed_elementary"".""dbt_snapshots""
)

SELECT
    run_results.model_execution_id,
    run_results.unique_id,
    run_results.invocation_id,
    run_results.query_id,
    run_results.name,
    run_results.generated_at,
    run_results.status,
    run_results.full_refresh,
    run_results.message,
    run_results.execution_time,
    run_results.execute_started_at,
    run_results.execute_completed_at,
    run_results.compile_started_at,
    run_results.compile_completed_at,
    run_results.compiled_code,
    run_results.adapter_response,
    run_results.thread_id,
    snapshots.database_name,
    snapshots.schema_name,
    coalesce(run_results.materialization, snapshots.materialization) as materialization,
    snapshots.tags,
    snapshots.package_name,
    snapshots.path,
    snapshots.original_path,
    snapshots.owner,
    snapshots.alias
FROM dbt_run_results run_results
JOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.alerts_schema_changes,model.elementary.alerts_schema_changes,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,alerts_schema_changes,CREATE VIEW,success,model,0.7762792110443115,2024-03-08T10:52:50.129312Z,2024-03-08T10:52:50.649578Z,2024-03-08T10:52:49.992635Z,2024-03-08T10:52:50.052618Z,-1,false,"


with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_schema_changes as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'
)

select * from alerts_schema_changes",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.alerts_dbt_tests,model.elementary.alerts_dbt_tests,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,alerts_dbt_tests,CREATE VIEW,success,model,0.799525260925293,2024-03-08T10:52:50.111154Z,2024-03-08T10:52:50.653578Z,2024-03-08T10:52:49.975542Z,2024-03-08T10:52:50.038620Z,-1,false,"

with elementary_test_results as (
    select * from ""postgres"".""transformed_elementary"".""elementary_test_results""
),

alerts_dbt_tests as (
    select id as alert_id,
           data_issue_id,
           test_execution_id,
           test_unique_id,
           model_unique_id,
           detected_at,
           database_name,
           schema_name,
           table_name,
           column_name,
           test_type as alert_type,
           test_sub_type as sub_type,
           test_results_description as alert_description,
           owners,
           tags,
           test_results_query as alert_results_query,
           other,
           test_name,
           test_short_name,
           test_params,
           severity,
           status,
           result_rows
        from elementary_test_results
        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'
)

select * from alerts_dbt_tests",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.test_result_rows,model.elementary.test_result_rows,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,test_result_rows,INSERT 0 0,success,model,1.1705665588378906,2024-03-08T10:52:50.145459Z,2024-03-08T10:52:51.027542Z,2024-03-08T10:52:50.008847Z,2024-03-08T10:52:50.061245Z,0,false,"

-- depends_on: ""postgres"".""transformed_elementary"".""elementary_test_results""
select * from (
            select
            
                
        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id

,
                
        cast('this_is_just_a_long_dummy_string' as text) as result_row

,
                cast('2091-02-17' as timestamp) as detected_at

,
                cast('2091-02-17' as timestamp) as created_at


        ) as empty_table
        where 1 = 0",,,Thread-5 (worker),incremental,"{""_message"": ""INSERT 0 0"", ""code"": ""INSERT"", ""rows_affected"": 0}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.alerts_dbt_source_freshness,model.elementary.alerts_dbt_source_freshness,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,alerts_dbt_source_freshness,CREATE VIEW,success,model,0.7579479217529297,2024-03-08T10:52:50.743736Z,2024-03-08T10:52:51.348226Z,2024-03-08T10:52:50.672010Z,2024-03-08T10:52:50.703799Z,-1,false,"

with results as (
  select * from ""postgres"".""transformed_elementary"".""dbt_source_freshness_results""
),

sources as (
  select * from ""postgres"".""transformed_elementary"".""dbt_sources""
)

select
  results.source_freshness_execution_id as alert_id,
  results.max_loaded_at,
  results.snapshotted_at,
  cast(results.generated_at as timestamp) as detected_at,
  results.max_loaded_at_time_ago_in_s,
  results.status,
  results.error,
  results.warn_after,
  results.error_after,
  results.filter,
  sources.unique_id,
  sources.database_name,
  sources.schema_name,
  sources.source_name,
  sources.identifier,
  sources.tags,
  sources.meta,
  sources.owner,
  sources.package_name,
  sources.path,
  -- These columns below are deprecated. We add them since this view
  -- was used to be loaded into an incremental model with those columns, their names were later changed
  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -
  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge
  results.error_after as freshness_error_after,
  results.warn_after as freshness_warn_after,
  results.filter as freshness_filter
from results
join sources on results.unique_id = sources.unique_id
where True and lower(status) != 'pass'",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.dbt_artifacts_hashes,model.elementary.dbt_artifacts_hashes,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,dbt_artifacts_hashes,CREATE VIEW,success,model,0.7317643165588379,2024-03-08T10:52:50.776017Z,2024-03-08T10:52:51.393012Z,2024-03-08T10:52:50.714087Z,2024-03-08T10:52:50.757737Z,-1,false,"




select
  'dbt_models' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_models""
 union all 

select
  'dbt_tests' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_tests""
 union all 

select
  'dbt_sources' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_sources""
 union all 

select
  'dbt_snapshots' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_snapshots""
 union all 

select
  'dbt_metrics' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_metrics""
 union all 

select
  'dbt_exposures' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_exposures""
 union all 

select
  'dbt_seeds' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_seeds""
 union all 

select
  'dbt_columns' as artifacts_model,
   metadata_hash
from ""postgres"".""transformed_elementary"".""dbt_columns""


order by metadata_hash",,,Thread-2 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.anomaly_threshold_sensitivity,model.elementary.anomaly_threshold_sensitivity,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,anomaly_threshold_sensitivity,CREATE VIEW,success,model,0.6763575077056885,2024-03-08T10:52:51.028718Z,2024-03-08T10:52:51.435644Z,2024-03-08T10:52:50.957852Z,2024-03-08T10:52:51.003262Z,-1,false,"

with metrics_anomaly_score as (

    select * from ""postgres"".""transformed_elementary"".""metrics_anomaly_score""

),

score_sensitivity as (

    select
        full_table_name,
        column_name,
        metric_name,
        latest_metric_value,
        training_avg as metric_avg,
        training_stddev as metric_stddev,
        anomaly_score,
        case when abs(anomaly_score) >= 1.5 then true else false end as ""is_anomaly_1_5"",
        case when abs(anomaly_score) >= 2 then true else false end as ""is_anomaly_2"",
        case when abs(anomaly_score) >= 2.5 then true else false end as ""is_anomaly_2_5"",
        case when abs(anomaly_score) >= 3 then true else false end as ""is_anomaly_3"",
        case when abs(anomaly_score) >= 3.5 then true else false end as ""is_anomaly_3_5"",
        case when abs(anomaly_score) >= 4 then true else false end as ""is_anomaly_4"",
        case when abs(anomaly_score) >= 4.5 then true else false end as ""is_anomaly_4_5""
    from metrics_anomaly_score
    where abs(anomaly_score) >= 1.5

)

select * from score_sensitivity",,,Thread-6 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.view_selection_tool.int_keep_models_relevant_package,model.view_selection_tool.int_keep_models_relevant_package,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,int_keep_models_relevant_package,CREATE VIEW,success,model,0.6803536415100098,2024-03-08T10:52:51.050144Z,2024-03-08T10:52:51.440090Z,2024-03-08T10:52:50.949092Z,2024-03-08T10:52:51.005267Z,-1,false,"WITH

all_packages AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_models""

),

relevant_package_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        depends_on_nodes


    FROM all_packages

    WHERE package_name = 'dbt_chatGPT_suggestion'

)

SELECT * FROM relevant_package_only",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.alerts_dbt_models,model.elementary.alerts_dbt_models,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,alerts_dbt_models,CREATE VIEW,success,model,0.5177724361419678,2024-03-08T10:52:51.060440Z,2024-03-08T10:52:51.442181Z,2024-03-08T10:52:50.985376Z,2024-03-08T10:52:51.008766Z,-1,false,"

with error_models as (
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias 
    from ""postgres"".""transformed_elementary"".""model_run_results""
  
    union all
  
    select  model_execution_id,
            unique_id,
            invocation_id,
            name,
            generated_at,
            status,
            full_refresh,
            message,
            execution_time,
            execute_started_at,
            execute_completed_at,
            compile_started_at,
            compile_completed_at,
            compiled_code,
            database_name,
            schema_name,
            materialization,
            tags,
            package_name,
            path,
            original_path,
            owner,
            alias  
  from ""postgres"".""transformed_elementary"".""snapshot_run_results""
)


select model_execution_id as alert_id,
       unique_id,
       cast(generated_at as timestamp) as detected_at,
       database_name,
       materialization,
       path,
       original_path,
       schema_name,
       message,
       owner as owners,
       tags,
       alias,
       status,
       full_refresh
from error_models
where True and lower(status) != 'success'and lower(status) != 'skipped'",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.information_schema_columns,model.elementary.information_schema_columns,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,information_schema_columns,CREATE VIEW,success,model,0.7849042415618896,2024-03-08T10:52:51.184457Z,2024-03-08T10:52:51.534403Z,2024-03-08T10:52:50.789095Z,2024-03-08T10:52:51.163089Z,-1,false,"

    
  
    
  

  with dbt_models_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_models""
  ),

  dbt_snapshots_data as (
      select
          database_name,
          schema_name,
          alias as table_name
      from ""postgres"".""transformed_elementary"".""dbt_snapshots""
  ),

  dbt_sources_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_sources""
  ),

  dbt_seeds_data as (
      select
          database_name,
          schema_name,
          name as table_name
      from ""postgres"".""transformed_elementary"".""dbt_seeds""
  ),

  tables_information as (
      select * from dbt_models_data
      union all
      select * from dbt_sources_data
      union all
      select * from dbt_snapshots_data
      union all
      select * from dbt_seeds_data
  ),

  columns_information as (
      
    
    
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('public')
    
)
        
            union all
        
    
        (
    select
        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,
        upper(table_catalog) as database_name,
        upper(table_schema) as schema_name,
        upper(table_name) as table_name,
        upper(column_name) as column_name,
        data_type
    from information_schema.columns
    where upper(table_schema) = upper('transformed')
    
)
        
    



  ),

  information_schema_columns as (
      select col_info.*
      from tables_information tbl_info
      join columns_information col_info
          on (lower(tbl_info.database_name) = lower(col_info.database_name) and
              lower(tbl_info.schema_name) = lower(col_info.schema_name) and
              lower(tbl_info.table_name) = lower(col_info.table_name)
          )
  )

  select *
  from information_schema_columns

",,,Thread-3 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.view_selection_tool.int_referenced_models,model.view_selection_tool.int_referenced_models,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,int_referenced_models,CREATE VIEW,success,model,0.3195652961730957,2024-03-08T10:52:51.564056Z,2024-03-08T10:52:51.794102Z,2024-03-08T10:52:51.512586Z,2024-03-08T10:52:51.539405Z,-1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT
        JSONB_ARRAY_ELEMENTS_TEXT(
            depends_on_nodes::JSONB
        ) AS referenced_model_id

    FROM all_models

),

unique_referenced_models AS (

    SELECT DISTINCT referenced_model_id

    FROM referenced_models

)

SELECT * FROM unique_referenced_models",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.view_selection_tool.int_join_with_run_results,model.view_selection_tool.int_join_with_run_results,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,int_join_with_run_results,CREATE VIEW,success,model,0.3376648426055908,2024-03-08T10:52:51.547408Z,2024-03-08T10:52:51.802149Z,2024-03-08T10:52:51.502160Z,2024-03-08T10:52:51.535405Z,-1,false,"WITH


relevant_package_only AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),


dbt_run_results AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_dbt_run_results""

),

joined AS (

    SELECT
        p.model_id,
        p.alias,
        p.database_name,
        p.schema_name,
        r.invocation_id,
        r.rows_affected,
        r.materialization,
        r.compiled_code,
        r.compile_completed_at

    FROM relevant_package_only AS p
    INNER JOIN dbt_run_results AS r
        ON p.model_id = r.model_id

)

SELECT * FROM joined",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.elementary.enriched_columns,model.elementary.enriched_columns,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,enriched_columns,CREATE VIEW,success,model,0.2778620719909668,2024-03-08T10:52:51.631495Z,2024-03-08T10:52:51.867022Z,2024-03-08T10:52:51.611783Z,2024-03-08T10:52:51.628301Z,-1,false,"


with information_schema_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(column_name) as name,
        data_type
    from ""postgres"".""transformed_elementary"".""information_schema_columns""
),

dbt_columns as (
    select
        lower(database_name) as database_name,
        lower(schema_name) as schema_name,
        lower(table_name) as table_name,
        lower(name) as name,
        description
    from ""postgres"".""transformed_elementary"".""dbt_columns""
)

select
    database_name,
    schema_name,
    table_name,
    name,
    data_type,
    description
from information_schema_columns
left join dbt_columns using (database_name, schema_name, table_name, name)",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.view_selection_tool.model_dependencies,model.view_selection_tool.model_dependencies,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,model_dependencies,SELECT 11,success,model,0.4877195358276367,2024-03-08T10:52:51.575569Z,2024-03-08T10:52:51.951447Z,2024-03-08T10:52:51.521588Z,2024-03-08T10:52:51.541405Z,11,false,"WITH

including_irrelevant_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

model_dependencies AS (

    SELECT
        model_id,
        depends_on_nodes,
        '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS compiled_code_reference

    FROM including_irrelevant_cols

)

SELECT * FROM model_dependencies",,,Thread-2 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.view_selection_tool.int_only_materialized_models,model.view_selection_tool.int_only_materialized_models,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,int_only_materialized_models,CREATE VIEW,success,model,0.283355712890625,2024-03-08T10:52:51.969825Z,2024-03-08T10:52:52.148054Z,2024-03-08T10:52:51.914943Z,2024-03-08T10:52:51.945444Z,-1,false,"WITH


all_materializations AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

relevant_models_only AS (

    SELECT
        model_id,
        alias,
        database_name,
        schema_name,
        invocation_id,
        rows_affected,
        materialization

    FROM all_materializations

    WHERE materialization IN ('table', 'incremental', 'materialized_view')

)

SELECT * FROM relevant_models_only",,,Thread-7 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.view_selection_tool.destination_nodes,model.view_selection_tool.destination_nodes,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,destination_nodes,SELECT 1,success,model,0.3267385959625244,2024-03-08T10:52:51.929290Z,2024-03-08T10:52:52.180526Z,2024-03-08T10:52:51.882117Z,2024-03-08T10:52:51.911939Z,1,false,"WITH

all_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_keep_models_relevant_package""

),

referenced_models AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_referenced_models""

),

destination_models AS (

    SELECT model_id

    FROM all_models

    WHERE
        model_id NOT IN
        (SELECT referenced_model_id FROM referenced_models)

)

SELECT * FROM destination_models",,,Thread-1 (worker),table,"{""_message"": ""SELECT 1"", ""code"": ""SELECT"", ""rows_affected"": 1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.view_selection_tool.all_models_plus_code,model.view_selection_tool.all_models_plus_code,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,all_models_plus_code,SELECT 11,success,model,0.35358381271362305,2024-03-08T10:52:51.954680Z,2024-03-08T10:52:52.223869Z,2024-03-08T10:52:51.902217Z,2024-03-08T10:52:51.925944Z,11,false,"WITH

including_other_cols AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_join_with_run_results""

),

most_recent_compiled_code_per_model AS (

    SELECT
        model_id,
        MAX(compile_completed_at) AS latest_compiled_at

    FROM including_other_cols

    GROUP BY model_id

),

only_model_ids_plus_most_recent_code AS (

    SELECT
        i.model_id,
        i.compiled_code

    FROM including_other_cols AS i
    INNER JOIN most_recent_compiled_code_per_model AS m ON
        i.model_id = m.model_id
        AND i.compile_completed_at = m.latest_compiled_at

)

SELECT * FROM only_model_ids_plus_most_recent_code",,,Thread-6 (worker),table,"{""_message"": ""SELECT 11"", ""code"": ""SELECT"", ""rows_affected"": 11}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.view_selection_tool.int_include_monitoring_id,model.view_selection_tool.int_include_monitoring_id,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,int_include_monitoring_id,CREATE VIEW,success,model,0.13984131813049316,2024-03-08T10:52:52.231668Z,2024-03-08T10:52:52.327108Z,2024-03-08T10:52:52.200758Z,2024-03-08T10:52:52.224869Z,-1,false,"WITH

without_monitoring_id AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_only_materialized_models""

),

including_monitoring_id AS (

    SELECT
        model_id,
        invocation_id,
        invocation_id || '.' || '""' || database_name || '"".""' || schema_name || '"".""' || alias || '""'
        AS monitoring_id,
        rows_affected,
        materialization

    FROM without_monitoring_id
)

SELECT * FROM including_monitoring_id",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.view_selection_tool.int_maintenance_fractions,model.view_selection_tool.int_maintenance_fractions,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,int_maintenance_fractions,CREATE VIEW,success,model,0.22219514846801758,2024-03-08T10:52:52.354959Z,2024-03-08T10:52:52.561843Z,2024-03-08T10:52:52.341649Z,2024-03-08T10:52:52.351657Z,-1,false,"WITH

rows_affected_per_run AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_include_monitoring_id""

),

row_counts_per_model AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""stg_data_monitoring_metrics""

),

maintenenace_fractions AS (

    SELECT
        row_affected.model_id,
        row_affected.invocation_id,
        row_affected.rows_affected,
        row_affected.materialization,
        row_counts.row_count,
        CASE
            WHEN row_counts.row_count = 0 THEN NULL
            ELSE row_affected.rows_affected / row_counts.row_count
        END AS maintenance_fraction

    FROM rows_affected_per_run AS row_affected
    INNER JOIN row_counts_per_model AS row_counts
        ON row_affected.monitoring_id = row_counts.monitoring_id

)

SELECT * FROM maintenenace_fractions",,,Thread-8 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.view_selection_tool.avg_maintenance_fractions,model.view_selection_tool.avg_maintenance_fractions,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,avg_maintenance_fractions,SELECT 4,success,model,0.15890121459960938,2024-03-08T10:52:52.585796Z,2024-03-08T10:52:52.728756Z,2024-03-08T10:52:52.575527Z,2024-03-08T10:52:52.582660Z,4,false,"WITH

all_maintenance_fractions AS (

    SELECT * FROM ""postgres"".""transformed_view_selection_tool"".""int_maintenance_fractions""

),

average_maintenance_fractions AS (

    SELECT
        model_id,
        avg(rows_affected) AS avg_rows_affected,
        avg(row_count) AS avg_row_count,
        avg(maintenance_fraction) AS avg_maintenance_fraction

    FROM all_maintenance_fractions

    GROUP BY model_id

)

SELECT * FROM average_maintenance_fractions",,,Thread-7 (worker),table,"{""_message"": ""SELECT 4"", ""code"": ""SELECT"", ""rows_affected"": 4}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.dbt_chatGPT_suggestion.int_union_of_transactions,model.dbt_chatGPT_suggestion.int_union_of_transactions,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,int_union_of_transactions,SELECT 10000000,success,model,33.75276589393616,2024-03-08T10:52:48.768533Z,2024-03-08T10:53:22.407352Z,2024-03-08T10:52:48.682214Z,2024-03-08T10:52:48.738408Z,10000000,false,"WITH

transactions_1 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_1""

),

transactions_2 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_2""

),

transactions_3 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_3""

),

transactions_4 AS (

    SELECT * FROM ""postgres"".""transformed"".""stg_transactions_4""

),

union_of_all_transactions AS (

    SELECT
        transaction_id,
        amount,
        account_id,
        1 AS company_id
    FROM transactions_1

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        2 AS company_id
    FROM transactions_2

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        3 AS company_id
    FROM transactions_3

    UNION ALL

    SELECT
        transaction_id,
        amount,
        account_id,
        4 AS company_id
    FROM transactions_4

)

SELECT * FROM union_of_all_transactions",,,Thread-4 (worker),table,"{""_message"": ""SELECT 10000000"", ""code"": ""SELECT"", ""rows_affected"": 10000000}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,model.dbt_chatGPT_suggestion.int_transactions_and_accounts_and_groups_joined,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,int_transactions_and_accounts_and_groups_joined,CREATE VIEW,success,model,0.1163325309753418,2024-03-08T10:53:23.511535Z,2024-03-08T10:53:23.608177Z,2024-03-08T10:53:23.499083Z,2024-03-08T10:53:23.509528Z,-1,false,"WITH

transactions AS (

    SELECT * FROM ""postgres"".""transformed"".""int_union_of_transactions""

),

accounts_and_groups_joined AS (

    SELECT * FROM ""postgres"".""transformed"".""int_accounts_and_groups_joined""

),

joined AS (

    SELECT
        t.amount,
        a.account_description,
        a.group_id

    FROM transactions AS t
    INNER JOIN accounts_and_groups_joined AS a
        ON t.account_id = a.account_id

)

SELECT * FROM joined",,,Thread-1 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.dbt_chatGPT_suggestion.int_grouped_on_group_id,model.dbt_chatGPT_suggestion.int_grouped_on_group_id,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,int_grouped_on_group_id,CREATE VIEW,success,model,0.09499573707580566,2024-03-08T10:53:23.630678Z,2024-03-08T10:53:23.711415Z,2024-03-08T10:53:23.621417Z,2024-03-08T10:53:23.627418Z,-1,false,"WITH

transactions_and_accounts_and_groups AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

grouped_on_group_id AS (

    SELECT
        group_id,
        'fixed_value' AS account_description,
        SUM(amount) AS total_amount

    FROM transactions_and_accounts_and_groups

    GROUP BY group_id

)

SELECT * FROM grouped_on_group_id",,,Thread-5 (worker),view,"{""_message"": ""CREATE VIEW"", ""code"": ""CREATE VIEW"", ""rows_affected"": -1}"
2f06242e-54ea-4a9b-affe-d067b2549ac0.model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,model.dbt_chatGPT_suggestion.grouped_transactions_unioned_with_original,2f06242e-54ea-4a9b-affe-d067b2549ac0,2024-03-08 10:53:30,2024-03-08 10:53:30.338380,grouped_transactions_unioned_with_original,SELECT 139,success,model,5.112642526626587,2024-03-08T10:53:23.730709Z,2024-03-08T10:53:28.834057Z,2024-03-08T10:53:23.723417Z,2024-03-08T10:53:23.728564Z,139,false,"WITH

grouped AS (

    SELECT * FROM ""postgres"".""transformed"".""int_grouped_on_group_id""

),

original AS (

    SELECT * FROM ""postgres"".""transformed"".""int_transactions_and_accounts_and_groups_joined""

),

unioned AS (

    SELECT
        group_id,
        total_amount,
        account_description

    FROM grouped

    UNION ALL

    SELECT
        group_id,
        amount,
        account_description

    FROM original

)

SELECT * FROM unioned",,,Thread-8 (worker),table,"{""_message"": ""SELECT 139"", ""code"": ""SELECT"", ""rows_affected"": 139}"
